{
  "version": 3,
  "sources": ["../node_modules/sprotty-protocol/src/utils/object.ts", "../node_modules/sprotty-protocol/src/actions.ts", "../node_modules/sprotty/src/base/actions/action.ts", "../node_modules/inversify/src/constants/metadata_keys.ts", "../node_modules/inversify/src/constants/literal_types.ts", "../node_modules/inversify/src/utils/id.ts", "../node_modules/inversify/src/bindings/binding.ts", "../node_modules/inversify/src/constants/error_msgs.ts", "../node_modules/inversify/src/planning/metadata_reader.ts", "../node_modules/inversify/src/bindings/binding_count.ts", "../node_modules/inversify/src/utils/exceptions.ts", "../node_modules/inversify/src/utils/serialization.ts", "../node_modules/inversify/src/planning/context.ts", "../node_modules/inversify/src/planning/metadata.ts", "../node_modules/inversify/src/planning/plan.ts", "../node_modules/inversify/src/annotation/decorator_utils.ts", "../node_modules/inversify/src/annotation/inject.ts", "../node_modules/inversify/src/planning/queryable_string.ts", "../node_modules/inversify/src/planning/target.ts", "../node_modules/inversify/src/planning/reflection_utils.ts", "../node_modules/inversify/src/planning/request.ts", "../node_modules/inversify/src/planning/planner.ts", "../node_modules/inversify/src/resolution/instantiation.ts", "../node_modules/inversify/src/resolution/resolver.ts", "../node_modules/inversify/src/syntax/constraint_helpers.ts", "../node_modules/inversify/src/syntax/binding_when_syntax.ts", "../node_modules/inversify/src/syntax/binding_on_syntax.ts", "../node_modules/inversify/src/syntax/binding_when_on_syntax.ts", "../node_modules/inversify/src/syntax/binding_in_syntax.ts", "../node_modules/inversify/src/syntax/binding_in_when_on_syntax.ts", "../node_modules/inversify/src/syntax/binding_to_syntax.ts", "../node_modules/inversify/src/container/container_snapshot.ts", "../node_modules/inversify/src/container/lookup.ts", "../node_modules/inversify/src/container/container.ts", "../node_modules/inversify/src/container/container_module.ts", "../node_modules/inversify/src/annotation/injectable.ts", "../node_modules/inversify/src/annotation/tagged.ts", "../node_modules/inversify/src/annotation/named.ts", "../node_modules/inversify/src/annotation/optional.ts", "../node_modules/inversify/src/annotation/unmanaged.ts", "../node_modules/inversify/src/annotation/multi_inject.ts", "../node_modules/inversify/src/annotation/target_name.ts", "../node_modules/inversify/src/annotation/post_construct.ts", "../node_modules/inversify/src/utils/binding_utils.ts", "../node_modules/inversify/src/inversify.ts", "../node_modules/sprotty-protocol/src/utils/async.ts", "../node_modules/sprotty/src/base/types.ts", "../node_modules/sprotty/src/utils/registry.ts", "../node_modules/sprotty-protocol/src/utils/geometry.ts", "../node_modules/sprotty/src/utils/iterable.ts", "../node_modules/sprotty/src/base/model/smodel.ts", "../node_modules/sprotty/src/base/model/smodel-factory.ts", "../node_modules/sprotty/src/base/animations/animation-frame-syncer.ts", "../node_modules/sprotty/src/base/actions/action-dispatcher.ts", "../node_modules/sprotty/src/utils/inversify.ts", "../node_modules/sprotty/src/base/actions/action-handler.ts", "../node_modules/sprotty/src/base/actions/diagram-locker.ts", "../node_modules/sprotty/src/base/animations/easing.ts", "../node_modules/sprotty/src/base/animations/animation.ts", "../node_modules/sprotty/src/base/commands/command.ts", "../node_modules/sprotty/src/base/commands/command-registration.ts", "../node_modules/sprotty/src/base/commands/command-stack-options.ts", "../node_modules/sprotty/src/base/commands/command-stack.ts", "../node_modules/sprotty-protocol/src/action-handler.ts", "../node_modules/sprotty-protocol/src/utils/model-utils.ts", "../node_modules/sprotty-protocol/src/diagram-server.ts", "../node_modules/sprotty-protocol/src/model.ts", "../node_modules/sprotty-protocol/src/index.ts", "../node_modules/sprotty/src/utils/browser.ts", "../node_modules/sprotty/src/base/features/initialize-canvas.ts", "../node_modules/sprotty/src/base/features/set-model.ts", "../node_modules/sprotty/src/base/model/smodel-utils.ts", "../node_modules/sprotty/src/base/tool-manager/tool.ts", "../node_modules/sprotty/src/base/views/vnode-utils.ts", "../node_modules/sprotty/src/base/views/key-tool.ts", "../node_modules/sprotty/src/utils/keyboard.ts", "../node_modules/sprotty/src/base/tool-manager/tool-manager.ts", "../node_modules/sprotty/src/base/ui-extensions/ui-extension-registry.ts", "../node_modules/sprotty/src/base/ui-extensions/ui-extension.ts", "../node_modules/sprotty/src/base/views/dom-helper.ts", "../node_modules/sprotty/src/base/views/mouse-tool.ts", "../node_modules/snabbdom/build/snabbdom.cjs.js", "../node_modules/sprotty/src/base/views/thunk-view.ts", "../node_modules/sprotty/src/lib/jsx.ts", "../node_modules/sprotty/src/base/views/view.tsx", "../node_modules/sprotty/src/base/views/viewer-cache.ts", "../node_modules/sprotty/src/base/views/viewer-options.ts", "../node_modules/sprotty/src/base/views/viewer.tsx", "../node_modules/sprotty/src/base/views/vnode-postprocessor.ts", "../node_modules/sprotty/src/utils/logging.ts", "../node_modules/sprotty/src/base/views/id-postprocessor.ts", "../node_modules/sprotty/src/base/views/css-class-postprocessor.ts", "../node_modules/sprotty/src/base/di.config.ts", "../node_modules/sprotty/src/features/bounds/model.ts", "../node_modules/sprotty/src/features/bounds/bounds-manipulation.ts", "../node_modules/sprotty/src/features/bounds/layout.ts", "../node_modules/sprotty/src/features/bounds/hidden-bounds-updater.ts", "../node_modules/sprotty/src/features/bounds/abstract-layout.ts", "../node_modules/sprotty/src/features/bounds/vbox-layout.ts", "../node_modules/sprotty/src/features/bounds/hbox-layout.ts", "../node_modules/sprotty/src/features/bounds/stack-layout.ts", "../node_modules/sprotty/src/features/bounds/views.ts", "../node_modules/sprotty/src/features/button/button-handler.ts", "../node_modules/sprotty/src/features/fade/model.ts", "../node_modules/sprotty/src/features/button/model.ts", "../node_modules/sprotty/src/features/nameable/model.ts", "../node_modules/sprotty/src/features/command-palette/action-providers.ts", "../node_modules/sprotty/src/utils/codicon.ts", "../node_modules/sprotty/src/features/select/model.ts", "../node_modules/autocompleter/autocomplete.ts", "../node_modules/sprotty/src/features/command-palette/command-palette.ts", "../node_modules/sprotty/src/features/context-menu/context-menu-service.ts", "../node_modules/sprotty/src/features/edit/delete.ts", "../node_modules/sprotty/src/features/context-menu/menu-providers.ts", "../node_modules/sprotty/src/features/context-menu/mouse-listener.ts", "../node_modules/sprotty/src/features/hover/model.ts", "../node_modules/sprotty/src/features/move/model.ts", "../node_modules/sprotty/src/features/routing/model.ts", "../node_modules/sprotty/src/features/edge-layout/model.ts", "../node_modules/sprotty/src/features/edit/model.ts", "../node_modules/sprotty/src/features/viewport/model.ts", "../node_modules/sprotty/src/features/export/model.ts", "../node_modules/sprotty/src/features/viewport/viewport-root.ts", "../node_modules/sprotty/src/graph/sgraph.ts", "../node_modules/sprotty/src/features/routing/anchor.ts", "../node_modules/sprotty/src/features/routing/abstract-edge-router.ts", "../node_modules/sprotty/src/features/routing/polyline-edge-router.ts", "../node_modules/sprotty/src/features/routing/routing.ts", "../node_modules/sprotty/src/features/edge-layout/edge-layout.ts", "../node_modules/sprotty/src/features/edge-layout/di.config.ts", "../node_modules/sprotty/src/features/edit/create.ts", "../node_modules/sprotty/src/features/edit/create-on-drag.ts", "../node_modules/sprotty/src/utils/geometry.ts", "../node_modules/sprotty/src/lib/svg-views.tsx", "../node_modules/sprotty/src/features/edit/edit-label.ts", "../node_modules/sprotty/src/features/export/svg-exporter.ts", "../node_modules/sprotty/src/model-source/model-source.ts", "../node_modules/sprotty/src/model-source/commit-model.ts", "../node_modules/sprotty/src/features/viewport/zoom.ts", "../node_modules/sprotty/src/features/edit/edit-label-ui.ts", "../node_modules/sprotty/src/features/edit/edit-routing.ts", "../node_modules/sprotty/src/features/edit/reconnect.ts", "../node_modules/sprotty/src/features/edit/di.config.ts", "../node_modules/sprotty/src/features/expand/model.ts", "../node_modules/sprotty/src/features/expand/expand.ts", "../node_modules/sprotty/src/features/expand/views.tsx", "../node_modules/sprotty/src/features/export/export.ts", "../node_modules/sprotty/src/features/fade/fade.ts", "../node_modules/sprotty/src/features/hover/hover.ts", "../node_modules/sprotty/src/features/decoration/model.ts", "../node_modules/sprotty/src/features/decoration/views.tsx", "../node_modules/sprotty/src/features/decoration/decoration-placer.ts", "../node_modules/tinyqueue/tinyqueue.js", "../node_modules/sprotty/src/features/edge-intersection/sweepline.ts", "../node_modules/sprotty/src/features/edge-intersection/intersection-finder.ts", "../node_modules/sprotty/src/features/move/move.ts", "../node_modules/sprotty/src/features/move/snap.ts", "../node_modules/sprotty/src/features/open/model.ts", "../node_modules/sprotty/src/features/open/open.ts", "../node_modules/sprotty/src/features/projection/model.ts", "../node_modules/sprotty/src/features/projection/views.tsx", "../node_modules/sprotty/src/features/routing/polyline-anchors.ts", "../node_modules/sprotty/src/features/routing/bezier-edge-router.ts", "../node_modules/sprotty/src/features/routing/bezier-anchors.ts", "../node_modules/sprotty/src/features/routing/manhattan-edge-router.ts", "../node_modules/sprotty/src/features/routing/manhattan-anchors.ts", "../node_modules/sprotty/src/features/routing/views.ts", "../node_modules/sprotty/src/base/commands/request-command.ts", "../node_modules/sprotty/src/features/select/select.ts", "../node_modules/sprotty/src/features/undo-redo/undo-redo.ts", "../node_modules/sprotty/src/features/update/model-matching.ts", "../node_modules/sprotty/src/features/bounds/resize.ts", "../node_modules/sprotty/src/features/update/update-model.ts", "../node_modules/sprotty/src/features/viewport/viewport.ts", "../node_modules/sprotty/src/features/viewport/center-fit.ts", "../node_modules/sprotty/src/features/viewport/scroll.ts", "../node_modules/sprotty/src/features/zorder/zorder.ts", "../node_modules/sprotty/src/graph/sgraph-factory.ts", "../node_modules/sprotty/src/graph/di.config.ts", "../node_modules/sprotty/src/features/bounds/di.config.ts", "../node_modules/sprotty/src/features/button/di.config.ts", "../node_modules/sprotty/src/features/command-palette/di.config.ts", "../node_modules/sprotty/src/features/context-menu/di.config.ts", "../node_modules/sprotty/src/features/decoration/di.config.ts", "../node_modules/sprotty/src/features/edge-intersection/di.config.ts", "../node_modules/sprotty/src/features/expand/di.config.ts", "../node_modules/sprotty/src/features/export/di.config.ts", "../node_modules/sprotty/src/features/fade/di.config.ts", "../node_modules/sprotty/src/features/hover/popup-position-updater.ts", "../node_modules/sprotty/src/features/hover/di.config.ts", "../node_modules/sprotty/src/features/move/di.config.ts", "../node_modules/sprotty/src/features/open/di.config.ts", "../node_modules/sprotty/src/features/routing/di.config.ts", "../node_modules/sprotty/src/features/select/di.config.ts", "../node_modules/sprotty/src/features/undo-redo/di.config.ts", "../node_modules/sprotty/src/features/update/di.config.ts", "../node_modules/sprotty/src/features/viewport/di.config.ts", "../node_modules/sprotty/src/features/zorder/di.config.ts", "../node_modules/sprotty/src/graph/views.tsx", "../node_modules/sprotty/src/model-source/di.config.ts", "../node_modules/sprotty/src/lib/modules.ts", "../node_modules/sprotty/src/lib/virtualize.ts", "../node_modules/sprotty/src/lib/model.ts", "../node_modules/sprotty/src/lib/generic-views.tsx", "../node_modules/sprotty/src/lib/html-views.tsx", "../node_modules/file-saver/src/FileSaver.js", "../node_modules/sprotty/src/model-source/diagram-server.ts", "../node_modules/sprotty/src/model-source/local-model-source.ts", "../node_modules/sprotty/src/model-source/logging.ts", "../node_modules/sprotty/src/model-source/websocket.ts", "../node_modules/sprotty/src/utils/color.ts", "../node_modules/sprotty/src/index.ts", "../node_modules/reflect-metadata/Reflect.js", "../showcase/src/index.ts", "../showcase/src/sprotty-ASCET-example/di.config.ts", "../showcase/src/sprotty-ASCET-example/views.tsx", "../showcase/src/sprotty-ASCET-example/model-source.ts"],
  "sourcesContent": ["/********************************************************************************\n * Copyright (c) 2017-2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport function isObject(data: unknown): data is Record<PropertyKey, unknown> {\n    return typeof data === 'object' && data !== null;\n}\n\nexport type TypeOf<T> =\n    T extends number ? 'number'\n    : T extends string ? 'string'\n    : T extends boolean ? 'boolean'\n    : T extends bigint ? 'bigint'\n    : T extends symbol ? 'symbol'\n    : T extends Function ? 'function'\n    : T extends object ? 'object'\n    : 'undefined';\n\nexport function hasOwnProperty<K extends PropertyKey, T>(arg: unknown, key: K | K[], type?: TypeOf<T> | ((v: unknown) => v is T)): arg is Record<K, T> {\n    if (!isObject(arg)) {\n        return false;\n    }\n    if (Array.isArray(key)) {\n        for (const k of key) {\n            if (!Object.prototype.hasOwnProperty.call(arg, k)) {\n                return false;\n            }\n            if (typeof type === 'string' && typeof arg[k] !== type) {\n                return false;\n            } else if (typeof type === 'function' && !type(arg[k])) {\n                return false;\n            }\n        }\n    } else {\n        if (!Object.prototype.hasOwnProperty.call(arg, key)) {\n            return false;\n        }\n        if (typeof type === 'string') {\n            return typeof arg[key] === type;\n        }\n        if (typeof type === 'function') {\n            return type(arg[key]);\n        }\n    }\n    return true;\n}\n\nexport function safeAssign<T extends {}>(target: T, partial: Partial<T>): T {\n    return Object.assign(target, partial);\n}\n", "/********************************************************************************\n * Copyright (c) 2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SModelRoot, SModelElement, Viewport } from './model';\nimport { Bounds, Point, Dimension } from './utils/geometry';\nimport { JsonAny, JsonMap } from './utils/json';\nimport { hasOwnProperty } from './utils/object';\n\n/**\n * Wrapper for actions when transferring them between client and server.\n * The `clientId` is used to identify the specific diagram instance in the client.\n */\nexport interface ActionMessage {\n    clientId: string\n    action: Action\n}\n\nexport function isActionMessage(object: unknown): object is ActionMessage {\n    return hasOwnProperty(object, 'action');\n}\n\n/**\n * An action describes a change to the model declaratively.\n * It is a plain data structure, and as such transferable between server and client.\n */\nexport interface Action {\n    kind: string;\n}\n\nexport function isAction(object?: unknown): object is Action {\n    return hasOwnProperty<string, string>(object, 'kind', 'string');\n}\n\n/**\n * A request action is tied to the expectation of receiving a corresponding response action.\n * The `requestId` property is used to match the received response with the original request.\n */\nexport interface RequestAction<Res extends ResponseAction> extends Action {\n    requestId: string\n}\n\nexport function isRequestAction(object?: Action): object is RequestAction<ResponseAction> {\n    return hasOwnProperty<string, string>(object, 'requestId', 'string');\n}\n\nlet nextRequestId = 1;\n/**\n * Generate a unique `requestId` for a request action.\n */\nexport function generateRequestId(): string {\n    return (nextRequestId++).toString();\n}\n\n/**\n * A response action is sent to respond to a request action. The `responseId` must match\n * the `requestId` of the preceding request. In case the `responseId` is empty or undefined,\n * the action is handled as standalone, i.e. it was fired without a preceding request.\n */\nexport interface ResponseAction extends Action {\n    responseId: string;\n}\n\n/**\n * A response action is sent to respond to a request action. The `responseId` must match\n * the `requestId` of the preceding request. In case the `responseId` is empty or undefined,\n * the action is handled as standalone, i.e. it was fired without a preceding request.\n */\n\nexport function isResponseAction(object?: Action): object is ResponseAction {\n    return hasOwnProperty<string, string>(object, 'responseId', 'string') && object.responseId !== '';\n}\n\n/**\n * A reject action is fired to indicate that a request must be rejected.\n */\nexport interface RejectAction extends ResponseAction {\n    kind: typeof RejectAction.KIND\n    message: string\n    detail?: JsonAny\n}\nexport namespace RejectAction {\n    export const KIND = 'rejectRequest';\n\n    export function create(options: { message: string, detail?: JsonAny, requestId: string }): RejectAction {\n        return {\n            kind: KIND,\n            message: options.message,\n            detail: options.detail,\n            responseId: options.requestId\n        };\n    }\n}\n\n/**\n * Sent from the client to the model source (e.g. a DiagramServer) in order to request a model. Usually this\n * is the first message that is sent to the source, so it is also used to initiate the communication.\n * The response is a SetModelAction or an UpdateModelAction.\n */\nexport interface RequestModelAction extends RequestAction<SetModelAction> {\n    kind: typeof RequestModelAction.KIND\n    options?: JsonMap\n}\nexport namespace RequestModelAction {\n    export const KIND = 'requestModel';\n\n    export function create(options?: JsonMap): RequestModelAction {\n        return {\n            kind: KIND,\n            options,\n            requestId: generateRequestId()\n        };\n    }\n}\n\n/**\n * Sent from the model source to the client in order to set the model. If a model is already present, it is replaced.\n */\nexport interface SetModelAction extends ResponseAction {\n    kind: typeof SetModelAction.KIND\n    newRoot: SModelRoot\n}\nexport namespace SetModelAction {\n    export const KIND = 'setModel';\n\n    export function create(newRoot: SModelRoot, requestId: string = ''): SetModelAction {\n        return {\n            kind: KIND,\n            newRoot,\n            responseId: requestId\n        };\n    }\n}\n\n/**\n * Sent from the model source to the client in order to update the model. If no model is present yet,\n * this behaves the same as a SetModelAction. The transition from the old model to the new one can be animated.\n */\nexport interface UpdateModelAction {\n    kind: typeof UpdateModelAction.KIND\n    newRoot?: SModelRoot\n    matches?: Match[]\n    animate?: boolean\n    cause?: Action\n}\nexport namespace UpdateModelAction {\n    export const KIND = 'updateModel';\n\n    export function create(input: SModelRoot | Match[], options: { animate?: boolean, cause?: Action } = {}): UpdateModelAction {\n        if (Array.isArray(input)) {\n            return {\n                kind: KIND,\n                matches: input,\n                animate: options.animate,\n                cause: options.cause\n            };\n        } else {\n            return {\n                kind: KIND,\n                newRoot: input,\n                animate: options.animate,\n                cause: options.cause\n            };\n        }\n    }\n}\n\nexport interface Match {\n    left?: SModelElement\n    right?: SModelElement\n    leftParentId?: string\n    rightParentId?: string\n}\n\n/**\n * Triggered when the user hovers the mouse pointer over an element to get a popup with details on\n * that element. This action is sent from the client to the model source, e.g. a DiagramServer.\n * The response is a SetPopupModelAction.\n */\nexport interface RequestPopupModelAction extends RequestAction<SetPopupModelAction> {\n    kind: typeof RequestPopupModelAction.KIND\n    elementId: string\n    bounds: Bounds\n}\nexport namespace RequestPopupModelAction {\n    export const KIND = 'requestPopupModel';\n\n    export function create(options: { elementId: string, bounds: Bounds }): RequestPopupModelAction {\n        return {\n            kind: KIND,\n            elementId: options.elementId,\n            bounds: options.bounds,\n            requestId: generateRequestId()\n        };\n    }\n}\n\n/**\n * Sent from the model source to the client to display a popup in response to a RequestPopupModelAction.\n * This action can also be used to remove any existing popup by choosing EMPTY_ROOT as root element.\n */\nexport interface SetPopupModelAction extends ResponseAction {\n    kind: typeof SetPopupModelAction.KIND\n    newRoot: SModelRoot\n}\nexport namespace SetPopupModelAction {\n    export const KIND = 'setPopupModel';\n\n    export function create(newRoot: SModelRoot, requestId: string = ''): SetPopupModelAction {\n        return {\n            kind: KIND,\n            newRoot,\n            responseId: requestId\n        };\n    }\n}\n\n/**\n * Sent from the model source (e.g. a DiagramServer) to the client to update the bounds of some\n * (or all) model elements.\n */\nexport interface SetBoundsAction extends Action {\n    kind: typeof SetBoundsAction.KIND\n    bounds: ElementAndBounds[]\n}\nexport namespace SetBoundsAction {\n    export const KIND = 'setBounds';\n\n    export function create(bounds: ElementAndBounds[]): SetBoundsAction {\n        return {\n            kind: KIND,\n            bounds\n        };\n    }\n}\n\n/**\n * Sent from the model source to the client to request bounds for the given model. The model is\n * rendered invisibly so the bounds can derived from the DOM. The response is a ComputedBoundsAction.\n * This hidden rendering round-trip is necessary if the client is responsible for parts of the layout\n * (see `needsClientLayout` viewer option).\n */\nexport interface RequestBoundsAction extends RequestAction<ComputedBoundsAction> {\n    kind: typeof RequestBoundsAction.KIND\n    newRoot: SModelRoot\n}\nexport namespace RequestBoundsAction {\n    export const KIND = 'requestBounds';\n\n    export function create(newRoot: SModelRoot): RequestBoundsAction {\n        return {\n            kind: KIND,\n            newRoot,\n            requestId: generateRequestId()\n        };\n    }\n}\n\n/**\n * Sent from the client to the model source (e.g. a DiagramServer) to transmit the result of bounds\n * computation as a response to a RequestBoundsAction. If the server is responsible for parts of\n * the layout (see `needsServerLayout` viewer option), it can do so after applying the computed bounds\n * received with this action. Otherwise there is no need to send the computed bounds to the server,\n * so they can be processed locally by the client.\n */\nexport interface ComputedBoundsAction extends ResponseAction {\n    kind: typeof ComputedBoundsAction.KIND\n    bounds: ElementAndBounds[]\n    revision?: number\n    alignments?: ElementAndAlignment[]\n}\nexport namespace ComputedBoundsAction {\n    export const KIND = 'computedBounds';\n\n    export function create(bounds: ElementAndBounds[], options: { revision?: number, alignments?: ElementAndAlignment[], requestId?: string } = {}): ComputedBoundsAction {\n        return {\n            kind: KIND,\n            bounds,\n            revision: options.revision,\n            alignments: options.alignments,\n            responseId: options.requestId ?? ''\n        };\n    }\n}\n\n/**\n * Associates new bounds with a model element, which is referenced via its id.\n */\nexport interface ElementAndBounds {\n    elementId: string\n    newPosition?: Point\n    newSize: Dimension\n}\n\n/**\n * Associates a new alignment with a model element, which is referenced via its id.\n */\nexport interface ElementAndAlignment {\n    elementId: string\n    newAlignment: Point\n}\n\n/**\n * Transport logging data to be stored elsewhere.\n */\nexport interface LoggingAction extends Action {\n    kind: typeof LoggingAction.KIND;\n    severity: string\n    time: string\n    caller: string\n    message: string\n    params: string[]\n}\nexport namespace LoggingAction {\n    export const KIND = 'logging';\n\n    export function create(options: { severity: string, time: string, caller: string, message: string, params: string[] }): LoggingAction {\n        return {\n            kind: KIND,\n            ...options\n        };\n    }\n}\n\n/**\n * Triggered when the user changes the selection, e.g. by clicking on a selectable element. The resulting\n * SelectCommand changes the `selected` state accordingly, so the elements can be rendered differently.\n * This action is also forwarded to the diagram server, if present, so it may react on the selection change.\n * Furthermore, the server can send such an action to the client in order to change the selection programmatically.\n */\nexport interface SelectAction {\n    kind: typeof SelectAction.KIND\n    selectedElementsIDs: string[]\n    deselectedElementsIDs: string[]\n}\nexport namespace SelectAction {\n    export const KIND = 'elementSelected';\n\n    export function create(options: { selectedElementsIDs?: string[], deselectedElementsIDs?: string[] }): SelectAction {\n        return {\n            kind: KIND,\n            selectedElementsIDs: options.selectedElementsIDs ?? [],\n            deselectedElementsIDs: options.deselectedElementsIDs ?? []\n        };\n    }\n}\n\n/**\n * Programmatic action for selecting or deselecting all elements.\n * If `select` is true, all elements are selected, otherwise they are deselected.\n */\nexport interface SelectAllAction {\n    kind: typeof SelectAllAction.KIND\n    select: boolean\n}\nexport namespace SelectAllAction {\n    export const KIND = 'allSelected';\n\n    export function create(options: { select?: boolean } = {}): SelectAllAction {\n        return {\n            kind: KIND,\n            select: options.select ?? true\n        };\n    }\n}\n\n/**\n * Sent from the client to the model source to recalculate a diagram when elements\n * are collapsed/expanded by the client.\n */\nexport interface CollapseExpandAction {\n    kind: typeof CollapseExpandAction.KIND\n    expandIds: string[]\n    collapseIds: string[]\n}\nexport namespace CollapseExpandAction {\n    export const KIND = 'collapseExpand';\n\n    export function create(options: { expandIds?: string[], collapseIds?: string[] }): CollapseExpandAction {\n        return {\n            kind: KIND,\n            expandIds: options.expandIds ?? [],\n            collapseIds: options.collapseIds ?? []\n        };\n    }\n}\n\n/**\n * Programmatic action for expanding or collapsing all elements.\n * If `expand` is true, all elements are expanded, otherwise they are collapsed.\n */\nexport interface CollapseExpandAllAction {\n    kind: typeof CollapseExpandAllAction.KIND\n    expand: boolean\n}\nexport namespace CollapseExpandAllAction {\n    export const KIND = 'collapseExpandAll';\n\n    export function create(options: { expand?: boolean } = {}): CollapseExpandAllAction {\n        return {\n            kind: KIND,\n            expand: options.expand ?? true\n        };\n    }\n}\n\nexport interface OpenAction {\n    kind: typeof OpenAction.KIND\n    elementId: string\n}\nexport namespace OpenAction {\n    export const KIND = 'open';\n\n    export function create(elementId: string): OpenAction {\n        return {\n            kind: KIND,\n            elementId\n        };\n    }\n}\n\n/**\n * Request a layout of the diagram or the selected elements only.\n */\nexport interface LayoutAction {\n    kind: typeof LayoutAction.KIND\n    layoutType?: string\n    elementIds?: string[]\n}\nexport namespace LayoutAction {\n    export const KIND = 'layout';\n\n    export function create(options: { layoutType?: string, elementIds?: string[] } = {}): LayoutAction {\n        return {\n            kind: KIND,\n            layoutType: options.layoutType,\n            elementIds: options.elementIds\n        };\n    }\n}\n\n/**\n * Triggered when the user requests the viewer to center on the current model. The resulting\n * CenterCommand changes the scroll setting of the viewport accordingly.\n * It also resets the zoom to its default if retainZoom is false.\n * This action can also be sent from the model source to the client in order to perform such a\n * viewport change programmatically.\n */\nexport interface CenterAction extends Action {\n    kind: typeof CenterAction.KIND\n    elementIds: string[]\n    animate: boolean\n    retainZoom: boolean\n}\nexport namespace CenterAction {\n    export const KIND = 'center';\n\n    export function create(elementIds: string[], options: { animate?: boolean, retainZoom?: boolean } = {}): CenterAction {\n        return {\n            kind: KIND,\n            elementIds,\n            animate: options.animate ?? true,\n            retainZoom: options.retainZoom ?? false\n        };\n    }\n}\n\n/**\n * Triggered when the user requests the viewer to fit its content to the available drawing area.\n * The resulting FitToScreenCommand changes the zoom and scroll settings of the viewport so the model\n * can be shown completely. This action can also be sent from the model source to the client in order\n * to perform such a viewport change programmatically.\n */\nexport interface FitToScreenAction extends Action {\n    kind: typeof FitToScreenAction.KIND;\n    elementIds: string[]\n    padding?: number\n    maxZoom?: number\n    animate: boolean\n}\nexport namespace FitToScreenAction {\n    export const KIND = 'fit';\n\n    export function create(elementIds: string[], options: { padding?: number, maxZoom?: number, animate?: boolean } = {}): FitToScreenAction {\n        return {\n            kind: KIND,\n            elementIds,\n            padding: options.padding,\n            maxZoom: options.maxZoom,\n            animate: options.animate ?? true\n        };\n    }\n}\n\n/**\n * Directly set the diagram viewport to the given scroll and zoom values.\n * The ID of the viewport element to manipulate must be given with the action\n * (usually it is the root element's ID).\n */\nexport interface SetViewportAction extends Action {\n    kind: typeof SetViewportAction.KIND;\n    elementId: string\n    newViewport: Viewport\n    animate: boolean\n}\nexport namespace SetViewportAction {\n    export const KIND = 'viewport';\n\n    export function create(elementId: string, newViewport: Viewport, options: { animate?: boolean } = {}): SetViewportAction {\n        return {\n            kind: KIND,\n            elementId,\n            newViewport,\n            animate: options.animate ?? true\n        };\n    }\n}\n\n/**\n * Action to render the selected elements in front of others by manipulating the z-order.\n */\n export interface BringToFrontAction extends Action {\n    kind: typeof BringToFrontAction.KIND;\n    elementIDs: string[]\n}\nexport namespace BringToFrontAction {\n    export const KIND = 'bringToFront';\n\n    export function create(elementIDs: string[]): BringToFrontAction {\n        return {\n            kind: KIND,\n            elementIDs\n        };\n    }\n}\n\n/**\n * Undo the previous operation on the stack of operations.\n */\nexport interface UndoAction extends Action {\n    kind: typeof UndoAction.KIND;\n}\nexport namespace UndoAction {\n    export const KIND = 'undo';\n\n    export function create(): UndoAction {\n        return {\n            kind: KIND\n        };\n    }\n}\n\n/**\n * Redo a previously undone operation.\n */\nexport interface RedoAction extends Action {\n    kind: typeof RedoAction.KIND;\n}\nexport namespace RedoAction {\n    export const KIND = 'redo';\n\n    export function create(): RedoAction {\n        return {\n            kind: KIND\n        };\n    }\n}\n\n/**\n * Move an arbitrary set of elements to new positions.\n */\nexport interface MoveAction extends Action {\n    kind: typeof MoveAction.KIND\n    moves: ElementMove[]\n    animate: boolean\n    finished: boolean\n}\nexport namespace MoveAction {\n    export const KIND = 'move';\n\n    export function create(moves: ElementMove[], options: { animate?: boolean, finished?: boolean } = {}): MoveAction {\n        return {\n            kind: KIND,\n            moves,\n            animate: options.animate ?? true,\n            finished: options.finished ?? false\n        };\n    }\n}\n\nexport interface ElementMove {\n    elementId: string\n    elementType?: string\n    fromPosition?: Point\n    toPosition: Point\n}\n\n/**\n * Triggered when the user puts the mouse pointer over an element.\n */\nexport interface HoverFeedbackAction extends Action {\n    kind: typeof HoverFeedbackAction.KIND\n    mouseoverElement: string\n    mouseIsOver: boolean\n}\nexport namespace HoverFeedbackAction {\n    export const KIND = 'hoverFeedback';\n\n    export function create(options: { mouseoverElement: string, mouseIsOver: boolean }): HoverFeedbackAction {\n        return {\n            kind: KIND,\n            mouseoverElement: options.mouseoverElement,\n            mouseIsOver: options.mouseIsOver\n        };\n    }\n}\n\n/**\n * Create an element with the given schema and add it to the diagram.\n */\nexport interface CreateElementAction extends Action {\n    kind: typeof CreateElementAction.KIND\n    containerId: string\n    elementSchema: SModelElement\n}\nexport namespace CreateElementAction {\n    export const KIND = 'createElement';\n\n    export function create(elementSchema: SModelElement, options: { containerId: string }): CreateElementAction {\n        return {\n            kind: KIND,\n            elementSchema,\n            containerId: options.containerId\n        };\n    }\n}\n\n/**\n * Delete a set of elements identified by their IDs.\n */\nexport interface DeleteElementAction extends Action {\n    kind: typeof DeleteElementAction.KIND\n    elementIds: string[]\n}\nexport namespace DeleteElementAction {\n    export const KIND = 'delete';\n\n    export function create(elementIds: string[]): DeleteElementAction {\n        return {\n            kind: KIND,\n            elementIds\n        };\n    }\n}\n\n/**\n * Apply a text change to a label element.\n */\nexport interface ApplyLabelEditAction extends Action {\n    kind: typeof ApplyLabelEditAction.KIND;\n    labelId: string,\n    text: string\n}\nexport namespace ApplyLabelEditAction {\n    export const KIND = 'applyLabelEdit';\n\n    export function create(labelId: string, text: string): ApplyLabelEditAction {\n        return {\n            kind: KIND,\n            labelId,\n            text\n        };\n    }\n}\n\n/**\n * Change the source or target node of a routable element (edge of a graph).\n */\nexport interface ReconnectAction extends Action {\n    kind: typeof ReconnectAction.KIND\n    routableId: string\n    newSourceId?: string\n    newTargetId?: string\n}\nexport namespace ReconnectAction {\n    export const KIND = 'reconnect';\n\n    export function create(options: { routableId: string, newSourceId?: string, newTargetId?: string }): ReconnectAction {\n        return {\n            kind: KIND,\n            routableId: options.routableId,\n            newSourceId: options.newSourceId,\n            newTargetId: options.newTargetId\n        };\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { generateRequestId as generateRequestId2 } from 'sprotty-protocol/lib/actions';\nimport { JsonAny } from 'sprotty-protocol/lib/utils/json';\nimport { hasOwnProperty } from 'sprotty-protocol/lib/utils/object';\n\n/**\n * An action describes a change to the model declaratively.\n * It is a plain data structure, and as such transferable between server and client. An action must never contain actual\n * SModelElement instances, but either refer to them via their ids or contain serializable schema for model elements.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface Action {\n    readonly kind: string\n}\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport function isAction(object?: unknown): object is Action {\n    return hasOwnProperty<string, string>(object, 'kind', 'string');\n}\n\n/**\n * A request action is tied to the expectation of receiving a corresponding response action.\n * The `requestId` property is used to match the received response with the original request.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface RequestAction<Res extends ResponseAction> extends Action {\n    readonly requestId: string\n}\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport function isRequestAction(object?: unknown): object is RequestAction<ResponseAction> {\n    return isAction(object) && hasOwnProperty<string, string>(object, 'requestId', 'string');\n}\n\n/**\n * Generate a unique `requestId` for a request action.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport const generateRequestId: () => string = generateRequestId2;\n\n/**\n * A response action is sent to respond to a request action. The `responseId` must match\n * the `requestId` of the preceding request. In case the `responseId` is empty or undefined,\n * the action is handled as standalone, i.e. it was fired without a preceding request.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface ResponseAction extends Action {\n    readonly responseId: string\n}\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport function isResponseAction(object?: unknown): object is ResponseAction {\n    return isAction(object) && hasOwnProperty<string, string>(object, 'responseId', 'string')\n            && object.responseId !== '';\n}\n\n/**\n * A reject action is fired to indicate that a request must be rejected.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport class RejectAction implements ResponseAction {\n    static readonly KIND = 'rejectRequest';\n    readonly kind = RejectAction.KIND;\n\n    constructor(public readonly message: string,\n                public readonly responseId: string,\n                public readonly detail?: JsonAny) {}\n}\n\n/**\n * A list of actions with a label.\n * Labeled actions are used to denote a group of actions in a user-interface context, e.g.,\n * to define an entry in the command palette or in the context menu.\n */\nexport class LabeledAction {\n    constructor(readonly label: string, readonly actions: Action[], readonly icon?: string) { }\n}\n\nexport function isLabeledAction(element: unknown): element is LabeledAction {\n    return element !== undefined\n        && (<LabeledAction>element).label !== undefined\n        && (<LabeledAction>element).actions !== undefined;\n}\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "/********************************************************************************\n * Copyright (c) 2017-2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/**\n * Simple implementation of the deferred pattern.\n * An object that exposes a promise and functions to resolve and reject it.\n */\nexport class Deferred<T> {\n    resolve: (value?: T | PromiseLike<T>) => void;\n    reject: (reason?: any) => void;\n    readonly promise: Promise<T>;\n\n    constructor() {\n        this.promise = new Promise<T>((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n /* eslint-disable @typescript-eslint/naming-convention */\nexport const TYPES = {\n    Action: Symbol('Action'),\n    IActionDispatcher: Symbol('IActionDispatcher'),\n    IActionDispatcherProvider: Symbol('IActionDispatcherProvider'),\n    IActionHandlerInitializer: Symbol('IActionHandlerInitializer'),\n    ActionHandlerRegistration: Symbol('ActionHandlerRegistration'),\n    ActionHandlerRegistryProvider: Symbol('ActionHandlerRegistryProvider'),\n    IAnchorComputer: Symbol('IAnchor'),\n    AnimationFrameSyncer: Symbol('AnimationFrameSyncer'),\n    /** @deprecated deprecated since 0.12.0 - please use `configureButtonHandler` */\n    IButtonHandler: Symbol('IButtonHandler'),\n    IButtonHandlerRegistration: Symbol('IButtonHandlerRegistration'),\n    ICommandPaletteActionProvider: Symbol('ICommandPaletteActionProvider'),\n    ICommandPaletteActionProviderRegistry: Symbol('ICommandPaletteActionProviderRegistry'),\n    CommandRegistration: Symbol('CommandRegistration'),\n    ICommandStack: Symbol('ICommandStack'),\n    CommandStackOptions: Symbol('CommandStackOptions'),\n    ICommandStackProvider: Symbol('ICommandStackProvider'),\n    IContextMenuItemProvider: Symbol.for(\"IContextMenuProvider\"),\n    IContextMenuProviderRegistry: Symbol.for(\"IContextMenuProviderRegistry\"),\n    IContextMenuService: Symbol.for(\"IContextMenuService\"),\n    IContextMenuServiceProvider: Symbol.for(\"IContextMenuServiceProvider\"),\n    DOMHelper: Symbol('DOMHelper'),\n    IDiagramLocker: Symbol('IDiagramLocker'),\n    IEdgeRouter: Symbol('IEdgeRouter'),\n    IEdgeRoutePostprocessor: Symbol('IEdgeRoutePostprocessor'),\n    IEditLabelValidationDecorator: Symbol('IEditLabelValidationDecorator'),\n    IEditLabelValidator: Symbol('IEditLabelValidator'),\n    HiddenModelViewer: Symbol('HiddenModelViewer'),\n    HiddenVNodePostprocessor: Symbol('HiddenVNodeDecorator'),\n    HoverState: Symbol('HoverState'),\n    KeyListener: Symbol('KeyListener'),\n    LayoutRegistration: Symbol('LayoutRegistration'),\n    LayoutRegistry: Symbol('LayoutRegistry'),\n    Layouter: Symbol('Layouter'),\n    LogLevel: Symbol('LogLevel'),\n    ILogger: Symbol('ILogger'),\n    IModelFactory: Symbol('IModelFactory'),\n    IModelLayoutEngine: Symbol('IModelLayoutEngine'),\n    ModelRendererFactory: Symbol('ModelRendererFactory'),\n    ModelSource: Symbol('ModelSource'),\n    ModelSourceProvider: Symbol('ModelSourceProvider'),\n    ModelViewer: Symbol('ModelViewer'),\n    MouseListener: Symbol('MouseListener'),\n    PatcherProvider: Symbol('PatcherProvider'),\n    IPopupModelProvider: Symbol('IPopupModelProvider'),\n    PopupModelViewer: Symbol('PopupModelViewer'),\n    PopupMouseListener: Symbol('PopupMouseListener'),\n    PopupVNodePostprocessor: Symbol('PopupVNodeDecorator'),\n    SModelElementRegistration: Symbol('SModelElementRegistration'),\n    SModelRegistry: Symbol('SModelRegistry'),\n    ISnapper: Symbol('ISnapper'),\n    SvgExporter: Symbol('SvgExporter'),\n    IToolManager: Symbol('IToolManager'),\n    IUIExtension: Symbol('IUIExtension'),\n    UIExtensionRegistry: Symbol('UIExtensionRegistry'),\n    IVNodePostprocessor: Symbol('IVNodePostprocessor'),\n    ViewRegistration: Symbol('ViewRegistration'),\n    ViewRegistry: Symbol('ViewRegistry'),\n    IViewer: Symbol('IViewer'),\n    ViewerOptions: Symbol('ViewerOptions'),\n    IViewerProvider: Symbol('IViewerProvider'),\n};\n/* eslint-enable */\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from \"inversify\";\n\n@injectable()\nexport class ProviderRegistry<T, U> {\n    protected elements: Map<string, new (u: U) => T> = new Map;\n\n    register(key: string, cstr: new (u: U) => T) {\n        if (key === undefined)\n            throw new Error('Key is undefined');\n        if (this.hasKey(key))\n            throw new Error('Key is already registered: ' + key);\n        this.elements.set(key, cstr);\n    }\n\n    deregister(key: string) {\n        if (key === undefined)\n            throw new Error('Key is undefined');\n        this.elements.delete(key);\n    }\n\n    hasKey(key: string): boolean {\n        return this.elements.has(key);\n    }\n\n    get(key: string, arg: U): T {\n        const existingCstr = this.elements.get(key);\n        if (existingCstr)\n            return new existingCstr(arg);\n        else\n            return this.missing(key, arg);\n    }\n\n    protected missing(key: string, arg: U): T | never {\n        throw new Error('Unknown registry key: ' + key);\n    }\n}\n\n@injectable()\nexport class FactoryRegistry<T, U> {\n    protected elements: Map<string, (u: U) => T> = new Map;\n\n    register(key: string, factory: (u: U) => T) {\n        if (key === undefined)\n            throw new Error('Key is undefined');\n        if (this.hasKey(key))\n            throw new Error('Key is already registered: ' + key);\n        this.elements.set(key, factory);\n    }\n\n    deregister(key: string) {\n        if (key === undefined)\n            throw new Error('Key is undefined');\n        this.elements.delete(key);\n    }\n\n    hasKey(key: string): boolean {\n        return this.elements.has(key);\n    }\n\n    get(key: string, arg: U): T {\n        const existingFactory = this.elements.get(key);\n        if (existingFactory)\n            return existingFactory(arg);\n        else\n            return this.missing(key, arg);\n    }\n\n    protected missing(key: string, arg: U): T | never {\n        throw new Error('Unknown registry key: ' + key);\n    }\n}\n\n@injectable()\nexport class InstanceRegistry<T> {\n    protected elements: Map<string, T> = new Map;\n\n    register(key: string, instance: T) {\n        if (key === undefined)\n            throw new Error('Key is undefined');\n        if (this.hasKey(key))\n            throw new Error('Key is already registered: ' + key);\n        this.elements.set(key, instance);\n    }\n\n    deregister(key: string) {\n        if (key === undefined)\n            throw new Error('Key is undefined');\n        this.elements.delete(key);\n    }\n\n    hasKey(key: string): boolean {\n        return this.elements.has(key);\n    }\n\n    get(key: string): T {\n        const existingInstance = this.elements.get(key);\n        if (existingInstance)\n            return existingInstance;\n        else\n            return this.missing(key);\n    }\n\n    protected missing(key: string): T | never {\n        throw new Error('Unknown registry key: ' + key);\n    }\n}\n\n@injectable()\nexport class MultiInstanceRegistry<T> {\n    protected elements: Map<string, T[]> = new Map;\n\n    register(key: string, instance: T) {\n        if (key === undefined)\n            throw new Error('Key is undefined');\n        const instances = this.elements.get(key);\n        if (instances !== undefined)\n            instances.push(instance);\n        else\n            this.elements.set(key, [instance]);\n    }\n\n    deregisterAll(key: string) {\n        if (key === undefined)\n            throw new Error('Key is undefined');\n        this.elements.delete(key);\n    }\n\n    get(key: string): T[] {\n        const existingInstances = this.elements.get(key);\n        if (existingInstances !== undefined)\n            return existingInstances;\n        else\n            return [];\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { hasOwnProperty } from \"./object\";\n\n/**\n * A Point is composed of the (x,y) coordinates of an object.\n */\nexport interface Point {\n    readonly x: number\n    readonly y: number\n}\n\nexport namespace Point {\n    /**\n     * (x,y) coordinates of the origin.\n     */\n    export const ORIGIN: Point = Object.freeze({\n        x: 0,\n        y: 0\n    });\n\n    /**\n     * Adds two points.\n     * @param {Point} p1 - First point\n     * @param {Point} p2 - Second point\n     * @returns {Point} The sum of the two points\n     */\n    export function add(p1: Point, p2: Point): Point {\n        return {\n            x: p1.x + p2.x,\n            y: p1.y + p2.y\n        };\n    }\n\n    /**\n     * Subtracts two points.\n     * @param {Point} p1 - First point\n     * @param {Point} p2 - Second point\n     * @returns {Point} The difference of the two points\n     */\n    export function subtract(p1: Point, p2: Point): Point {\n        return {\n            x: p1.x - p2.x,\n            y: p1.y - p2.y\n        };\n    }\n\n    /**\n     * Specifies whether a point has exactly the same coordinates as another point.\n     * @param {Point} point1 a point\n     * @param {Point} point2 another point\n     * @returns {boolean} `true` if `point1` has exactly the same `x` and `y` values as `point2`, `false` otherwise.\n     */\n    export function equals(point1: Point, point2: Point): boolean {\n        return point1.x === point2.x && point1.y === point2.y;\n    }\n\n    /**\n     * Computes a point that is the original `point` shifted towards `refPoint` by the given `distance`.\n     * @param {Point} point - Point to shift\n     * @param {Point} refPoint - Point to shift towards\n     * @param {Point} distance - Distance to shift\n     */\n    export function shiftTowards(point: Point, refPoint: Point, distance: number): Point {\n        const diff = subtract(refPoint, point);\n        const normalized = normalize(diff);\n        const shift = { x: normalized.x * distance, y: normalized.y * distance };\n        return add(point, shift);\n    }\n\n    /**\n     * Computes the normalized vector from the vector given in `point`; that is, computing its unit vector.\n     * @param {Point} point - Point representing the vector to be normalized\n     * @returns {Point} The normalized point\n     */\n    export function normalize(point: Point): Point {\n        const mag = magnitude(point);\n        if (mag === 0 || mag === 1) {\n            return ORIGIN;\n        }\n        return {\n            x: point.x / mag,\n            y: point.y / mag\n        };\n    }\n\n    /**\n     * Computes the magnitude of the vector given in `point`.\n     * @param {Point} point - Point representing the vector to compute the magnitude for\n     * @returns {number} The magnitude or also known as length of the `point`\n     */\n    export function magnitude(point: Point): number {\n        return Math.sqrt(Math.pow(point.x, 2) + Math.pow(point.y, 2));\n    }\n\n    /**\n     * Calculates a linear combination of p0 and p1 using lambda, i.e.\n     *   (1-lambda) * p0 + lambda * p1\n     */\n    export function linear(p0: Point, p1: Point, lambda: number): Point {\n        return {\n            x: (1 - lambda) * p0.x + lambda * p1.x,\n            y: (1 - lambda) * p0.y + lambda * p1.y\n        };\n    }\n\n    /**\n     * Returns the \"straight line\" distance between two points.\n     * @param {Point} a - First point\n     * @param {Point} b - Second point\n     * @returns {number} The Eucledian distance\n     */\n    export function euclideanDistance(a: Point, b: Point): number {\n        const dx = b.x - a.x;\n        const dy = b.y - a.y;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    /**\n     * Returns the distance between two points in a grid, using a\n     * strictly vertical and/or horizontal path (versus straight line).\n     * @param {Point} a - First point\n     * @param {Point} b - Second point\n     * @returns {number} The Manhattan distance\n     */\n    export function manhattanDistance(a: Point, b: Point): number {\n        return Math.abs(b.x - a.x) + Math.abs(b.y - a.y);\n    }\n\n    /**\n     * Returns the maximum of the horizontal and the vertical distance.\n     * @param {Point} a - First point\n     * @param {Point} b - Second point\n     * @returns {number} The maximum distance\n     */\n    export function maxDistance(a: Point, b: Point): number {\n        return Math.max(Math.abs(b.x - a.x), Math.abs(b.y - a.y));\n    }\n}\n\n/**\n * Computes the angle in radians of the given point to the x-axis of the coordinate system.\n * The result is in the range [-pi, pi].\n * @param {Point} p - A point in the Eucledian plane\n */\nexport function angleOfPoint(p: Point): number {\n    return Math.atan2(p.y, p.x);\n}\n\n/**\n * Computes the angle in radians between the two given points (relative to the origin of the coordinate system).\n * The result is in the range [0, pi]. Returns NaN if the points are equal.\n * @param {Point} a - First point\n * @param {Point} b - Second point\n */\nexport function angleBetweenPoints(a: Point, b: Point): number {\n    const lengthProduct = Math.sqrt((a.x * a.x + a.y * a.y) * (b.x * b.x + b.y * b.y));\n    if (isNaN(lengthProduct) || lengthProduct === 0)\n        return NaN;\n    const dotProduct = a.x * b.x + a.y * b.y;\n    return Math.acos(dotProduct / lengthProduct);\n}\n\n/**\n * Computes the center of the line segment spanned by the two given points.\n * @param {Point} s - Start point of the line\n * @param {Point} e - End point of the line\n */\nexport function centerOfLine(s: Point, e: Point): Point {\n    const b: Bounds = {\n        x: s.x > e.x ? e.x : s.x,\n        y: s.y > e.y ? e.y : s.y,\n        width: Math.abs(e.x - s.x),\n        height: Math.abs(e.y - s.y)\n    };\n    return Bounds.center(b);\n}\n\n/**\n * The Dimension of an object is composed of its width and height.\n */\nexport interface Dimension {\n    readonly width: number\n    readonly height: number\n}\n\nexport namespace Dimension {\n    /**\n     * A dimension with both width and height set to a negative value, which is considered as undefined.\n     */\n    export const EMPTY: Dimension = Object.freeze({\n        width: -1,\n        height: -1\n    });\n\n    /**\n     * Checks whether the given dimention is valid, i.e. the width and height are non-zero.\n     * @param {Dimension} b - Dimension object\n     * @returns {boolean} `true` if the dimension is valid\n     */\n    export function isValid(d: Dimension): boolean {\n        return d.width >= 0 && d.height >= 0;\n    }\n}\n\n/**\n * The bounds are the position (x, y) and dimension (width, height) of an object.\n */\nexport interface Bounds extends Point, Dimension {\n}\n\nexport function isBounds(element: unknown): element is Bounds {\n    return hasOwnProperty(element, ['x', 'y', 'width', 'height']);\n}\n\nexport namespace Bounds {\n    export const EMPTY: Bounds = Object.freeze({\n        x: 0,\n        y: 0,\n        width: -1,\n        height: -1\n    });\n\n    /**\n     * Combines the bounds of two objects into one, so that the new bounds\n     * are the minimum bounds that covers both of the original bounds.\n     * @param {Bounds} b0 - First bounds object\n     * @param {Bounds} b1 - Second bounds object\n     * @returns {Bounds} The combined bounds\n     */\n    export function combine(b0: Bounds, b1: Bounds): Bounds {\n        if (!Dimension.isValid(b0))\n            return Dimension.isValid(b1) ? b1 : EMPTY;\n        if (!Dimension.isValid(b1))\n            return b0;\n        const minX = Math.min(b0.x, b1.x);\n        const minY = Math.min(b0.y, b1.y);\n        const maxX = Math.max(b0.x + (b0.width >= 0 ? b0.width : 0), b1.x + (b1.width >= 0 ? b1.width : 0));\n        const maxY = Math.max(b0.y + (b0.height >= 0 ? b0.height : 0), b1.y + (b1.height >= 0 ? b1.height : 0));\n        return {\n            x: minX, y: minY, width: maxX - minX, height: maxY - minY\n        };\n    }\n\n    /**\n     * Translates the given bounds.\n     * @param {Bounds} b - Bounds object\n     * @param {Point} p - Vector by which to translate the bounds\n     * @returns {Bounds} The translated bounds\n     */\n    export function translate(b: Bounds, p: Point): Bounds {\n        return {\n            x: b.x + p.x,\n            y: b.y + p.y,\n            width: b.width,\n            height: b.height\n        };\n    }\n\n    /**\n     * Returns the center point of the bounds of an object\n     * @param {Bounds} b - Bounds object\n     * @returns {Point} the center point\n     */\n    export function center(b: Bounds): Point {\n        return {\n            x: b.x + (b.width >= 0 ? 0.5 * b.width : 0),\n            y: b.y + (b.height >= 0 ? 0.5 * b.height : 0)\n        };\n    }\n\n    /**\n    * Checks whether the point p is included in the bounds b.\n    */\n    export function includes(b: Bounds, p: Point): boolean {\n        return p.x >= b.x && p.x <= b.x + b.width && p.y >= b.y && p.y <= b.y + b.height;\n    }\n}\n\n/**\n * Converts from radians to degrees\n * @param {number} a - A value in radians\n * @returns {number} The converted value\n */\nexport function toDegrees(a: number): number {\n    return a * 180 / Math.PI;\n}\n\n/**\n * Converts from degrees to radians\n * @param {number} a - A value in degrees\n * @returns {number} The converted value\n */\nexport function toRadians(a: number): number {\n    return a * Math.PI / 180;\n}\n\n/**\n * Returns whether two numbers are almost equal, within a small margin (0.001)\n * @param {number} a - First number\n * @param {number} b - Second number\n * @returns {boolean} True if the two numbers are almost equal\n */\nexport function almostEquals(a: number, b: number): boolean {\n    return Math.abs(a - b) < 1e-3;\n}\n", "/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/**\n * An iterable that allows filtering, mapping values etc. with a fluent API.\n * Arrays conform to this interface, so an array can be passed at every place where\n * a FluentIterable is expected.\n */\nexport interface FluentIterable<T> extends Iterable<T> {\n    filter(callback: (element: T) => boolean): FluentIterable<T>\n    map<T2>(callback: (element: T) => T2): FluentIterable<T2>\n    forEach(callback: (element: T, index: number) => void): void\n    indexOf(element: any): number\n}\n\n/**\n * A helper class that allows to easily create fluent iterables.\n */\nexport class FluentIterableImpl<S, T> implements FluentIterable<T> {\n\n    constructor(private readonly startFn: () => S,\n                private readonly nextFn: (state: S) => IteratorResult<T>) {}\n\n    [Symbol.iterator]() {\n        const iterator = {\n            state: this.startFn(),\n            next: () => this.nextFn(iterator.state),\n            [Symbol.iterator]: () => iterator\n        };\n        return iterator;\n    }\n\n    filter(callback: (element: T) => boolean): FluentIterable<T> {\n        return filterIterable(this, callback);\n    }\n\n    map<T2>(callback: (element: T) => T2): FluentIterable<T2> {\n        return mapIterable(this, callback);\n    }\n\n    forEach(callback: (element: T, index: number) => void): void {\n        const iterator = this[Symbol.iterator]();\n        let index = 0;\n        let result: IteratorResult<T>;\n        do {\n            result = iterator.next();\n            if (result.value !== undefined)\n                callback(result.value, index);\n            index++;\n        } while (!result.done);\n    }\n\n    indexOf(element: any): number {\n        const iterator = this[Symbol.iterator]();\n        let index = 0;\n        let result: IteratorResult<T>;\n        do {\n            result = iterator.next();\n            if (result.value === element)\n                return index;\n            index++;\n        } while (!result.done);\n        return -1;\n    }\n}\n\n/**\n * Converts a FluentIterable into an array. If the input is an array, it is returned unchanged.\n */\nexport function toArray<T>(input: FluentIterable<T>): T[] {\n    if (input.constructor === Array) {\n        return input as T[];\n    }\n    const result: T[] = [];\n    input.forEach(element => result.push(element));\n    return result;\n}\n\nexport const DONE_RESULT: IteratorResult<any> = Object.freeze({ done: true, value: undefined });\n\n/**\n * Create a fluent iterable that filters the content of the given iterable or array.\n */\nexport function filterIterable<T>(input: Iterable<T> | ArrayLike<T>, callback: (element: T) => boolean): FluentIterable<T> {\n    return new FluentIterableImpl(\n        () => createIterator(input),\n        (iterator) => {\n            let result: IteratorResult<T>;\n            do {\n                result = iterator.next();\n            } while (!result.done && !callback(result.value));\n            return result;\n        }\n    );\n}\n\n/**\n * Create a fluent iterable that maps the content of the given iterable or array.\n */\nexport function mapIterable<T1, T2>(input: Iterable<T1> | ArrayLike<T1>, callback: (element: T1) => T2): FluentIterable<T2> {\n    return new FluentIterableImpl(\n        () => createIterator(input),\n        (iterator) => {\n            const { done, value } = iterator.next();\n            if (done)\n                return DONE_RESULT;\n            else\n                return { done: false, value: callback(value) };\n        }\n    );\n}\n\n/**\n * Create an iterator for the given iterable or array.\n */\nfunction createIterator<T>(collection: Iterable<T> | ArrayLike<T>): Iterator<T> {\n    const method = (collection as Iterable<T>)[Symbol.iterator];\n    if (typeof method === 'function') {\n        return method.call(collection);\n    }\n    const length = (collection as ArrayLike<T>).length;\n    if (typeof length === 'number' && length >= 0) {\n        return new ArrayIterator(collection as ArrayLike<T>);\n    }\n    return { next: () => DONE_RESULT };\n}\n\n/**\n * Iterator implementation for arrays.\n */\nclass ArrayIterator<T> implements IterableIterator<T> {\n    constructor(private readonly array: ArrayLike<T>) {}\n\n    private index = 0;\n\n    next(): IteratorResult<T> {\n        if (this.index < this.array.length)\n            return { done: false, value: this.array[this.index++] };\n        else\n            return DONE_RESULT;\n    }\n\n    [Symbol.iterator]() {\n        return this;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Bounds, isBounds, Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { mapIterable, FluentIterable } from \"../../utils/iterable\";\n\n/**\n * The schema of an SModelElement describes its serializable form. The actual model is created from\n * its schema with an IModelFactory.\n * Each model element must have a unique ID and a type that is used to look up its view.\n *\n * @deprecated Use `SModelElement` from `sprotty-protocol` instead.\n */\nexport interface SModelElementSchema {\n    type: string\n    id: string\n    children?: SModelElementSchema[]\n    cssClasses?: string[]\n}\n\n/**\n * Serializable schema for the root element of the model tree.\n *\n * @deprecated Use `SModelRoot` from `sprotty-protocol` instead.\n */\nexport interface SModelRootSchema extends SModelElementSchema {\n    canvasBounds?: Bounds\n    revision?: number\n}\n\n/**\n * Base class for all elements of the diagram model.\n * Each model element must have a unique ID and a type that is used to look up its view.\n */\nexport class SModelElement {\n    type: string;\n    id: string;\n    features?: FeatureSet;\n    cssClasses?: string[];\n\n    get root(): SModelRoot {\n        let current: SModelElement | undefined = this;\n        while (current) {\n            if (current instanceof SModelRoot)\n                return current;\n            else if (current instanceof SChildElement)\n                current = current.parent;\n            else\n                current = undefined;\n        }\n        throw new Error(\"Element has no root\");\n    }\n\n    get index(): ModelIndexImpl {\n        return this.root.index;\n    }\n\n    /**\n     * A feature is a symbol identifying some functionality that can be enabled or disabled for\n     * a model element. The set of supported features is determined by the `features` property.\n     */\n    hasFeature(feature: symbol): boolean {\n        return this.features !== undefined && this.features.has(feature);\n    }\n}\n\nexport interface FeatureSet {\n    has(feature: symbol): boolean\n}\n\nexport function isParent(element: SModelElementSchema | SModelElement):\n        element is SModelElementSchema & { children: SModelElementSchema[] } {\n    const children = (element as any).children;\n    return children !== undefined && children.constructor === Array;\n}\n\n/**\n * A parent element may contain child elements, thus the diagram model forms a tree.\n */\nexport class SParentElement extends SModelElement {\n    readonly children: ReadonlyArray<SChildElement> = [];\n\n    add(child: SChildElement, index?: number) {\n        const children = this.children as SChildElement[];\n        if (index === undefined) {\n            children.push(child);\n        } else {\n            if (index < 0 || index > this.children.length) {\n                throw new Error(`Child index ${index} out of bounds (0..${children.length})`);\n            }\n            children.splice(index, 0, child);\n        }\n        (child as {parent: SParentElement}).parent = this;\n        this.index.add(child);\n    }\n\n    remove(child: SChildElement) {\n        const children = this.children as SChildElement[];\n        const i = children.indexOf(child);\n        if (i < 0) {\n            throw new Error(`No such child ${child.id}`);\n        }\n        children.splice(i, 1);\n        this.index.remove(child);\n    }\n\n    removeAll(filter?: (e: SChildElement) => boolean) {\n        const children = this.children as SChildElement[];\n        if (filter !== undefined) {\n            for (let i = children.length - 1; i >= 0; i--) {\n                if (filter(children[i])) {\n                    const child = children.splice(i, 1)[0];\n                    this.index.remove(child);\n                }\n            }\n        } else {\n            children.forEach(child => {\n                this.index.remove(child);\n            });\n            children.splice(0, children.length);\n        }\n    }\n\n    move(child: SChildElement, newIndex: number) {\n        const children = this.children as SChildElement[];\n        const i = children.indexOf(child);\n        if (i === -1) {\n            throw new Error(`No such child ${child.id}`);\n        } else {\n            if (newIndex < 0 || newIndex > children.length - 1) {\n                throw new Error(`Child index ${newIndex} out of bounds (0..${children.length})`);\n            }\n            children.splice(i, 1);\n            children.splice(newIndex, 0, child);\n        }\n    }\n\n    /**\n     * Transform the given bounds from the local coordinate system of this element to the coordinate\n     * system of its parent. This function should consider any transformation that is applied to the\n     * view of this element and its contents.\n     * The base implementation assumes that this element does not define a local coordinate system,\n     * so it leaves the bounds unchanged.\n     */\n    localToParent(point: Point | Bounds): Bounds {\n        return isBounds(point) ? point : { x: point.x, y: point.y, width: -1, height: -1 };\n    }\n\n    /**\n     * Transform the given bounds from the coordinate system of this element's parent to its local\n     * coordinate system. This function should consider any transformation that is applied to the\n     * view of this element and its contents.\n     * The base implementation assumes that this element does not define a local coordinate system,\n     * so it leaves the bounds unchanged.\n     */\n    parentToLocal(point: Point | Bounds): Bounds {\n        return isBounds(point) ? point : { x: point.x, y: point.y, width: -1, height: -1 };\n    }\n}\n\n/**\n * A child element is contained in a parent element. All elements except the model root are child\n * elements. In order to keep the model class hierarchy simple, every child element is also a\n * parent element, although for many elements the array of children is empty (i.e. they are\n * leafs in the model element tree).\n */\nexport class SChildElement extends SParentElement {\n    readonly parent: SParentElement;\n}\n\n/**\n * Base class for the root element of the diagram model tree.\n */\nexport class SModelRoot extends SParentElement {\n    revision?: number;\n\n    canvasBounds: Bounds = Bounds.EMPTY;\n\n    constructor(index = new ModelIndexImpl()) {\n        super();\n          // Override the index property from SModelElement, which has a getter, with a data property\n          Object.defineProperty(this, 'index', {\n            value: index,\n            writable: false\n        });\n    }\n}\n\nconst ID_CHARS = \"0123456789abcdefghijklmnopqrstuvwxyz\";\nexport function createRandomId(length: number = 8): string {\n    let id = \"\";\n    for (let i = 0; i < length; i++) {\n        id += ID_CHARS.charAt(Math.floor(Math.random() * ID_CHARS.length));\n    }\n    return id;\n}\n\n\n/**\n * Used to speed up model element lookup by id.\n */\n export interface IModelIndex {\n    add(element: SModelElementSchema): void\n    remove(element: SModelElementSchema): void\n    contains(element: SModelElementSchema): boolean\n    getById(id: string): SModelElementSchema | undefined\n}\n\n/**\n * This index implementation is for the _internal model_ that is used for rendering.\n */\nexport class ModelIndexImpl implements IModelIndex {\n\n    private readonly id2element: Map<string, SModelElement> = new Map();\n\n    add(element: SModelElement): void {\n        if (!element.id) {\n            do {\n                element.id = createRandomId();\n            } while (this.contains(element));\n        } else if (this.contains(element)) {\n            throw new Error(\"Duplicate ID in model: \" + element.id);\n        }\n        this.id2element.set(element.id, element);\n        if (element instanceof SParentElement) {\n            for (const child of element.children) {\n                this.add(child as any);\n            }\n        }\n    }\n\n    remove(element: SModelElement): void {\n        this.id2element.delete(element.id);\n        if (element instanceof SParentElement) {\n            for (const child of element.children) {\n                this.remove(child as any);\n            }\n        }\n    }\n\n    contains(element: SModelElement): boolean {\n        return this.id2element.has(element.id);\n    }\n\n    getById(id: string): SModelElement | undefined {\n        return this.id2element.get(id);\n    }\n\n    getAttachedElements(element: SModelElement): FluentIterable<SModelElement> {\n        return [];\n    }\n\n    all(): FluentIterable<SModelElement> {\n        return mapIterable(this.id2element, ([key, value]: [string, SModelElement]) => value);\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, multiInject, optional, inject } from 'inversify';\nimport { SModelElement as SModelElementSchema, SModelRoot as SModelRootSchema } from 'sprotty-protocol/lib/model';\nimport { TYPES } from \"../types\";\nimport { FactoryRegistry } from '../../utils/registry';\nimport { SChildElement, SModelElement, SModelRoot, SParentElement, isParent, FeatureSet } from './smodel';\n\n/**\n * Model element classes registered here are considered automatically when constructring a model from its schema.\n */\n@injectable()\nexport class SModelRegistry extends FactoryRegistry<SModelElement, void> {\n    constructor(@multiInject(TYPES.SModelElementRegistration) @optional() registrations: SModelElementRegistration[]) {\n        super();\n\n        registrations.forEach(registration => {\n            let defaultFeatures = this.getDefaultFeatures(registration.constr);\n            if (!defaultFeatures && registration.features && registration.features.enable)\n                defaultFeatures = [];\n            if (defaultFeatures) {\n                const featureSet = createFeatureSet(defaultFeatures, registration.features);\n                this.register(registration.type, () => {\n                    const element = new registration.constr();\n                    element.features = featureSet;\n                    return element;\n                });\n            } else {\n                this.register(registration.type, () => new registration.constr());\n            }\n        });\n    }\n\n    protected getDefaultFeatures(constr: SModelElementConstructor): ReadonlyArray<symbol> | undefined {\n        let obj = constr;\n        do {\n            const defaultFeatures = obj.DEFAULT_FEATURES;\n            if (defaultFeatures)\n                return defaultFeatures;\n            obj = Object.getPrototypeOf(obj);\n        } while (obj);\n        return undefined;\n    }\n}\n\n/**\n * A model factory transforms a serializable model schema into the model representation that is used\n * internally by sprotty.\n */\nexport interface IModelFactory {\n    createElement(schema: SModelElementSchema | SModelElement, parent?: SParentElement): SChildElement\n\n    createRoot(schema: SModelRootSchema | SModelRoot): SModelRoot\n\n    createSchema(element: SModelElement): SModelElementSchema\n}\n\n/**\n * The default model factory creates SModelRoot for the root element and SChildElement for all other\n * model elements.\n */\n@injectable()\nexport class SModelFactory implements IModelFactory {\n\n    @inject(TYPES.SModelRegistry) protected readonly registry: SModelRegistry;\n\n    createElement(schema: SModelElementSchema | SModelElement, parent?: SParentElement): SChildElement {\n        let child: SChildElement;\n        if (this.registry.hasKey(schema.type)) {\n            const regElement = this.registry.get(schema.type, undefined);\n            if (!(regElement instanceof SChildElement))\n                throw new Error(`Element with type ${schema.type} was expected to be an SChildElement.`);\n            child = regElement;\n        } else {\n            child = new SChildElement();\n        }\n        return this.initializeChild(child, schema, parent);\n    }\n\n    createRoot(schema: SModelRootSchema | SModelRoot): SModelRoot {\n        let root: SModelRoot;\n        if (this.registry.hasKey(schema.type)) {\n            const regElement = this.registry.get(schema.type, undefined);\n            if (!(regElement instanceof SModelRoot))\n                throw new Error(`Element with type ${schema.type} was expected to be an SModelRoot.`);\n            root = regElement;\n        } else {\n            root = new SModelRoot();\n        }\n        return this.initializeRoot(root, schema);\n    }\n\n    createSchema(element: SModelElement): SModelElementSchema {\n        const schema = {};\n        for (const key in element) {\n             if (!this.isReserved(element, key)) {\n                const value: any = (element as any)[key];\n                if (typeof value !== 'function')\n                    (schema as any)[key] = value;\n            }\n        }\n        if (element instanceof SParentElement)\n            (schema as any)['children'] = element.children.map(child => this.createSchema(child));\n        return schema as SModelElementSchema;\n    }\n\n    protected initializeElement(element: SModelElement, schema: SModelElementSchema | SModelElement): SModelElement {\n        for (const key in schema) {\n            if (!this.isReserved(element, key)) {\n                const value: any = (schema as any)[key];\n                if (typeof value !== 'function')\n                    (element as any)[key] = value;\n            }\n        }\n        return element;\n    }\n\n    protected isReserved(element: SModelElement, propertyName: string) {\n        if (['children', 'parent', 'index'].indexOf(propertyName) >= 0)\n            return true;\n        let obj = element;\n        do {\n            const descriptor = Object.getOwnPropertyDescriptor(obj, propertyName);\n            if (descriptor !== undefined)\n                return descriptor.get !== undefined;\n            obj = Object.getPrototypeOf(obj);\n        } while (obj);\n        return false;\n    }\n\n    protected initializeParent(parent: SParentElement, schema: SModelElementSchema | SParentElement): SParentElement {\n        this.initializeElement(parent, schema);\n        if (isParent(schema)) {\n            (parent as any).children = schema.children.map(childSchema => this.createElement(childSchema, parent));\n        }\n        return parent;\n    }\n\n    protected initializeChild(child: SChildElement, schema: SModelElementSchema, parent?: SParentElement): SChildElement {\n        this.initializeParent(child, schema);\n        if (parent !== undefined) {\n            (child as any).parent = parent;\n        }\n        return child;\n    }\n\n    protected initializeRoot(root: SModelRoot, schema: SModelRootSchema | SModelRoot): SModelRoot {\n        this.initializeParent(root, schema);\n        root.index.add(root);\n        return root;\n    }\n}\n\nexport const EMPTY_ROOT: Readonly<SModelRootSchema> = Object.freeze({\n    type: 'NONE',\n    id: 'EMPTY'\n});\n\n/**\n * Used to bind a model element type to a class constructor in the SModelRegistry.\n */\nexport interface SModelElementRegistration {\n    type: string\n    constr: SModelElementConstructor\n    features?: CustomFeatures\n}\n\nexport interface SModelElementConstructor {\n    DEFAULT_FEATURES?: ReadonlyArray<symbol>\n    new (): SModelElement\n}\n\nexport interface CustomFeatures {\n    enable?: symbol[]\n    disable?: symbol[]\n}\n\nexport function createFeatureSet(defaults: ReadonlyArray<symbol>, custom?: CustomFeatures): FeatureSet {\n    const featureSet = new Set<symbol>(defaults);\n    if (custom && custom.enable) {\n        for (const f of custom.enable) {\n            featureSet.add(f);\n        }\n    }\n    if (custom && custom.disable) {\n        for (const f of custom.disable) {\n            featureSet.delete(f);\n        }\n    }\n    return featureSet;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from \"inversify\";\n\n@injectable()\nexport class AnimationFrameSyncer {\n\n    tasks: ((x?: number) => void) [] = [];\n    endTasks: ((x?: number) => void) [] = [];\n    triggered: boolean = false;\n\n    isAvailable(): boolean {\n        return typeof requestAnimationFrame === \"function\";\n    }\n\n    onNextFrame(task: (x?: number) => void) {\n        this.tasks.push(task);\n        this.trigger();\n    }\n\n    onEndOfNextFrame(task: (x?: number) => void) {\n        this.endTasks.push(task);\n        this.trigger();\n    }\n\n    protected trigger() {\n        if (!this.triggered) {\n            this.triggered = true;\n            if (this.isAvailable())\n                requestAnimationFrame((time: number) => this.run(time));\n            else\n                setTimeout((time: number) => this.run(time));\n        }\n    }\n\n    protected run(time: number) {\n        const tasks = this.tasks;\n        const endTasks = this.endTasks;\n        this.triggered = false;\n        this.tasks = [];\n        this.endTasks = [];\n        tasks.forEach(task => task.call(undefined, time));\n        endTasks.forEach(task => task.call(undefined, time));\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport {\n    Action, isAction, isRequestAction, isResponseAction, RedoAction, RejectAction, RequestAction,\n    ResponseAction, SetModelAction, UndoAction\n} from 'sprotty-protocol/lib/actions';\nimport { Deferred } from 'sprotty-protocol/lib/utils/async';\nimport { TYPES } from '../types';\nimport { ILogger } from '../../utils/logging';\nimport { EMPTY_ROOT } from '../model/smodel-factory';\nimport { ICommandStack } from '../commands/command-stack';\nimport { AnimationFrameSyncer } from '../animations/animation-frame-syncer';\nimport { ActionHandlerRegistry } from './action-handler';\nimport { IDiagramLocker } from './diagram-locker';\n\nexport interface IActionDispatcher {\n    dispatch(action: Action): Promise<void>\n    dispatchAll(actions: Action[]): Promise<void>\n    request<Res extends ResponseAction>(action: RequestAction<Res>): Promise<Res>\n}\n\n/**\n * Collects actions, converts them to commands and dispatches them.\n * Also acts as the proxy to model sources such as diagram servers.\n */\n@injectable()\nexport class ActionDispatcher implements IActionDispatcher {\n\n    @inject(TYPES.ActionHandlerRegistryProvider) protected actionHandlerRegistryProvider: () => Promise<ActionHandlerRegistry>;\n    @inject(TYPES.ICommandStack) protected commandStack: ICommandStack;\n    @inject(TYPES.ILogger) protected logger: ILogger;\n    @inject(TYPES.AnimationFrameSyncer) protected syncer: AnimationFrameSyncer;\n    @inject(TYPES.IDiagramLocker) protected diagramLocker: IDiagramLocker;\n\n    protected actionHandlerRegistry: ActionHandlerRegistry;\n\n    protected initialized: Promise<void> | undefined;\n    protected blockUntil?: (action: Action) => boolean;\n    protected postponedActions: PostponedAction[] = [];\n    protected readonly requests: Map<string, Deferred<ResponseAction>> = new Map();\n\n    initialize(): Promise<void> {\n        if (!this.initialized) {\n            this.initialized = this.actionHandlerRegistryProvider().then(registry => {\n                this.actionHandlerRegistry = registry;\n                this.handleAction(SetModelAction.create(EMPTY_ROOT)).catch(() => { /* Logged in handleAction method */ });\n            });\n        }\n        return this.initialized;\n    }\n\n    /**\n     * Dispatch an action by querying all handlers that are registered for its kind.\n     * The returned promise is resolved when all handler results (commands or actions)\n     * have been processed.\n     */\n    dispatch(action: Action): Promise<void> {\n        return this.initialize().then(() => {\n            if (this.blockUntil !== undefined) {\n                return this.handleBlocked(action, this.blockUntil);\n            } else if (this.diagramLocker.isAllowed(action)) {\n                return this.handleAction(action);\n            }\n            return undefined;\n        });\n    }\n\n    /**\n     * Calls `dispatch` on every action in the given array. The returned promise\n     * is resolved when the promises of all `dispatch` calls have been resolved.\n     */\n    dispatchAll(actions: Action[]): Promise<void> {\n        return Promise.all(actions.map(action => this.dispatch(action))) as Promise<any>;\n    }\n\n    /**\n     * Dispatch a request. The returned promise is resolved when a response with matching\n     * identifier is dispatched. That response is _not_ passed to the registered action\n     * handlers. Instead, it is the responsibility of the caller of this method to handle\n     * the response properly. For example, it can be sent to the registered handlers by\n     * passing it again to the `dispatch` method.\n     */\n    request<Res extends ResponseAction>(action: RequestAction<Res>): Promise<Res> {\n        if (!action.requestId) {\n            return Promise.reject(new Error('Request without requestId'));\n        }\n        const deferred = new Deferred<Res>();\n        this.requests.set(action.requestId, deferred);\n        this.dispatch(action).catch(() => { /* Logged in handleAction method */ });\n        return deferred.promise;\n    }\n\n    protected handleAction(action: Action): Promise<void> {\n        if (action.kind === UndoAction.KIND) {\n            return this.commandStack.undo().then(() => {});\n        }\n        if (action.kind === RedoAction.KIND) {\n            return this.commandStack.redo().then(() => {});\n        }\n        if (isResponseAction(action)) {\n            const deferred = this.requests.get(action.responseId);\n            if (deferred !== undefined) {\n                this.requests.delete(action.responseId);\n                if (action.kind === RejectAction.KIND) {\n                    const rejectAction = action as RejectAction;\n                    deferred.reject(new Error(rejectAction.message));\n                    this.logger.warn(this, `Request with id ${action.responseId} failed.`,\n                            rejectAction.message, rejectAction.detail);\n                } else {\n                    deferred.resolve(action);\n                }\n                return Promise.resolve();\n            }\n            this.logger.log(this, 'No matching request for response', action);\n        }\n\n        const handlers = this.actionHandlerRegistry.get(action.kind);\n        if (handlers.length === 0) {\n            this.logger.warn(this, 'Missing handler for action', action);\n            const error = new Error(`Missing handler for action '${action.kind}'`);\n            if (isRequestAction(action)) {\n                const deferred = this.requests.get(action.requestId);\n                if (deferred !== undefined) {\n                    this.requests.delete(action.requestId);\n                    deferred.reject(error);\n                }\n            }\n            return Promise.reject(error);\n        }\n        this.logger.log(this, 'Handle', action);\n        const promises: Promise<any>[] = [];\n        for (const handler of handlers) {\n            const result = handler.handle(action);\n            if (isAction(result)) {\n                promises.push(this.dispatch(result));\n            } else if (result !== undefined) {\n                promises.push(this.commandStack.execute(result));\n                this.blockUntil = result.blockUntil;\n            }\n        }\n        return Promise.all(promises) as Promise<any>;\n    }\n\n    protected handleBlocked(action: Action, predicate: (action: Action) => boolean): Promise<void> {\n        if (predicate(action)) {\n            this.blockUntil = undefined;\n            const result = this.handleAction(action);\n            const actions = this.postponedActions;\n            this.postponedActions = [];\n            for (const a of actions) {\n                this.dispatch(a.action).then(a.resolve, a.reject);\n            }\n            return result;\n        } else {\n            this.logger.log(this, 'Action is postponed due to block condition', action);\n            return new Promise((resolve, reject) => {\n                this.postponedActions.push({ action, resolve, reject });\n            });\n        }\n    }\n}\n\nexport interface PostponedAction {\n    action: Action\n    resolve: () => void\n    reject: (reason: any) => void\n}\n\nexport type IActionDispatcherProvider = () => Promise<IActionDispatcher>;\n", "/********************************************************************************\n * Copyright (c) 2019-2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport function isInjectable(constr: new (...args: unknown[]) => unknown): boolean {\n    return Reflect.getMetadata('inversify:paramtypes', constr) !== undefined;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, multiInject, optional, interfaces } from \"inversify\";\nimport { TYPES } from \"../types\";\nimport { MultiInstanceRegistry } from \"../../utils/registry\";\nimport { isInjectable } from \"../../utils/inversify\";\nimport { ICommand } from \"../commands/command\";\nimport { Action } from \"./action\";\n\n/**\n * An action handler accepts an action and reacts to it by returning either a command to be\n * executed, or another action to be dispatched.\n */\nexport interface IActionHandler {\n    handle(action: Action): ICommand | Action | void\n}\n\n/**\n * Used to bind an action kind to an action handler factory in the ActionHandlerRegistry.\n */\nexport interface ActionHandlerRegistration {\n    actionKind: string\n    factory: () => IActionHandler\n}\n\n/**\n * Initializes and registers an action handler for multiple action kinds. In most cases\n * `ActionHandlerRegistration` should be used instead.\n */\nexport interface IActionHandlerInitializer {\n    initialize(registry: ActionHandlerRegistry): void\n}\n\n/**\n * The action handler registry maps actions to their handlers using the Action.kind property.\n */\n@injectable()\nexport class ActionHandlerRegistry extends MultiInstanceRegistry<IActionHandler> {\n\n    constructor(@multiInject(TYPES.ActionHandlerRegistration) @optional() registrations: ActionHandlerRegistration[],\n                @multiInject(TYPES.IActionHandlerInitializer) @optional() initializers: IActionHandlerInitializer[]) {\n        super();\n        registrations.forEach(registration =>\n            this.register(registration.actionKind, registration.factory())\n        );\n        initializers.forEach(initializer =>\n            this.initializeActionHandler(initializer)\n        );\n    }\n\n    initializeActionHandler(initializer: IActionHandlerInitializer): void {\n        initializer.initialize(this);\n    }\n}\n\n/**\n * Utility function to register an action handler for an action kind.\n */\nexport function configureActionHandler(context: { bind: interfaces.Bind, isBound: interfaces.IsBound },\n        kind: string, constr: interfaces.ServiceIdentifier<IActionHandler>): void {\n    if (typeof constr === 'function') {\n        if (!isInjectable(constr)) {\n            throw new Error(`Action handlers should be @injectable: ${constr.name}`);\n        }\n        if (!context.isBound(constr)) {\n            context.bind(constr).toSelf();\n        }\n    }\n    context.bind(TYPES.ActionHandlerRegistration).toDynamicValue(ctx => ({\n        actionKind: kind,\n        factory: () => ctx.container.get(constr)\n    }));\n}\n\n/**\n * Utility function to register an action handler for an action kind.\n */\nexport function onAction(context: { bind: interfaces.Bind, isBound: interfaces.IsBound },\n        kind: string, handle: (action: Action) => ICommand | Action | void): void {\n    context.bind(TYPES.ActionHandlerRegistration).toConstantValue({\n        actionKind: kind,\n        factory: () => ({ handle })\n    });\n}\n", "/********************************************************************************\n * Copyright (c) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from \"inversify\";\nimport { Action } from \"sprotty-protocol/lib/actions\";\n\n/**\n * Allows to lock the diagram by preventing certain actions from being\n * dispatched.\n *\n * This could for example be used to prevent the diagram from being modified\n * when the underlying model is broken or the server is unavailable.\n */\nexport interface IDiagramLocker {\n    isAllowed(action: Action): boolean\n}\n\n@injectable()\nexport class DefaultDiagramLocker implements IDiagramLocker {\n    isAllowed(action: Action): boolean {\n        return true;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/**\n * Slows down animations towards the begin and the end.\n *\n * @param x the value between 0 (start of animation) and 1 (end of\n *     animation) linearly interpolated in time.\n * @returns {number} the eased value between 0 and 1\n */\nexport function easeInOut(x: number): number {\n    if (x < 0.5)\n        return x * x * 2;\n    else\n        return 1 - (1 - x) * (1 - x) * 2;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { CommandExecutionContext } from \"../commands/command\";\nimport { SModelRoot } from \"../model/smodel\";\nimport { easeInOut } from \"./easing\";\n\n/**\n * An animation uses the rendering loop of the browser to smoothly\n * calculate a transition between two states of a model element.\n */\nexport abstract class Animation {\n\n    constructor(protected context: CommandExecutionContext, protected ease: (x: number) => number = easeInOut) {\n    }\n\n    start(): Promise<SModelRoot> {\n        return new Promise<SModelRoot>(\n            (resolve: (model: SModelRoot) => void, reject: (model: SModelRoot) => void) => {\n                let start: number | undefined = undefined;\n                let frames = 0;\n                const lambda = (time: number) => {\n                    frames++;\n                    let dtime: number;\n                    if (start === undefined) {\n                        start = time;\n                        dtime = 0;\n                    } else {\n                        dtime = time - start;\n                    }\n                    const t = Math.min(1, dtime / this.context.duration);\n                    const current = this.tween(this.ease(t), this.context);\n                    this.context.modelChanged.update(current);\n                    if (t === 1) {\n                        this.context.logger.log(this, (frames * 1000 / this.context.duration) + ' fps');\n                        resolve(current);\n                    } else {\n                        this.context.syncer.onNextFrame(lambda);\n                    }\n                };\n                if (this.context.syncer.isAvailable()) {\n                    this.context.syncer.onNextFrame(lambda);\n                } else {\n                    const finalModel = this.tween(1, this.context);\n                    resolve(finalModel);\n                }\n            });\n    }\n\n    /**\n     * This method called by the animation at each rendering pass until\n     * the duration is reached. Implement it to interpolate the state.\n     *\n     * @param t varies between 0 (start of animation) and 1 (end of animation)\n     * @param context\n     */\n    abstract tween(t: number, context: CommandExecutionContext): SModelRoot;\n}\n\nexport class CompoundAnimation extends Animation {\n\n    constructor(protected model: SModelRoot,\n                protected override context: CommandExecutionContext,\n                public components: Animation[] = [],\n                protected override ease: (x: number) => number = easeInOut) {\n        super(context, ease);\n    }\n\n    include(animation: Animation): this {\n        this.components.push(animation);\n        return this;\n    }\n\n    tween(t: number, context: CommandExecutionContext): SModelRoot {\n        for (const a of this.components) {\n            a.tween(t, context);\n        }\n        return this.model;\n    }\n\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from \"inversify\";\nimport { Action } from \"sprotty-protocol/lib/actions\";\nimport { ILogger } from \"../../utils/logging\";\nimport { AnimationFrameSyncer } from \"../animations/animation-frame-syncer\";\nimport { SModelRoot } from \"../model/smodel\";\nimport { IModelFactory } from \"../model/smodel-factory\";\nimport { IViewer } from \"../views/viewer\";\n\n/**\n * A command holds the behaviour of an action.\n * It is executed on a command stack and can be undone / redone.\n *\n * A command should store all information it needs to undo itself at a\n * later stage. It typically resolves the model elements it is going\n * to manipulate as a first step in the execute method.\n *\n * Each command should define a static string property KIND that\n * matches the associated action. This is used as a key in the\n * ActionHandlerRegistry.\n *\n * Clients should not implement the ICommand interface directly but\n * rather inherit from one of its abstract implementators.\n */\nexport interface ICommand {\n    /**\n     * If this property is present, all following actions are blocked\n     * until the function returns `true`.\n     */\n    readonly blockUntil?: (action: Action) => boolean;\n\n    execute(context: CommandExecutionContext): CommandReturn\n\n    undo(context: CommandExecutionContext): CommandReturn\n\n    redo(context: CommandExecutionContext): CommandReturn\n}\n\n/**\n * Commands return the changed model or a Promise for it. Promises\n * serve animating commands to render some intermediate states before\n * finishing. The CommandStack is in charge of chaining these promises,\n * such that they run sequentially only one at a time. Due to that\n * chaining, it is essential that a command does not make any assumption\n * on the state of the model before execute() is called.\n */\nexport type CommandReturn = SModelRoot | Promise<SModelRoot> | CommandResult;\n\n/**\n * The `CommandResult` allows to specify whether the model has changed\n * and the original action that caused the command to be executed. In case such\n * an action is given, it is passed to the viewer in order to link any\n * subsequent response action to the original request.\n */\nexport type CommandResult = { model: SModelRoot, modelChanged: boolean, cause?: Action };\n\n/**\n * Base class for all commands.\n *\n * Command instances are created via dependency injection and should take\n * the respective action as an injected constructor parameter. They must\n * also define a static <code>KIND</code> which is used to map an\n * <code>Action#kind</code>.\n *\n * <pre>\n * export class MyCommand extends Command {\n *   static KIND = 'MyCommand'\n *   constructor(@inject(TYPES.Action) action: MyAction) {\n *   ...\n * }\n * @inject(TYPES.Action)\n * </pre>\n */\n@injectable()\nexport abstract class Command implements ICommand {\n\n    abstract execute(context: CommandExecutionContext): CommandReturn;\n\n    abstract undo(context: CommandExecutionContext): CommandReturn;\n\n    abstract redo(context: CommandExecutionContext): CommandReturn;\n}\n\n/**\n * A mergeable command can accumulate subsequent commands of the same kind.\n *\n * For example, multiple subsequent move commands can be merged to yield a\n * single command, such that undo will roll them back altogether. Otherwise\n * the user would have to push CTRL-Z for each mouse move element that\n * resuted in a command.\n */\n@injectable()\nexport abstract class MergeableCommand extends Command {\n    /**\n     * Tries to merge the given command with this.\n     *\n     * @param command\n     * @param context\n     */\n    merge(command: ICommand, context: CommandExecutionContext): boolean {\n        return false;\n    }\n}\n\n/**\n * A hidden command is used to trigger the rendering of a model on a\n * hidden canvas.\n *\n * Some graphical elements are styled using CSS, others have bounds that\n * require to layout their children before being computed. In such cases\n * we cannot tell about the size of elements without acutally rendering\n * the DOM. We render them to an invisible canvas. This can be achieved\n * using hidden commands.\n *\n * Hidden commands do not change the model directly, and are as such\n * neither undoable nor redoable. The command stack does not push them on\n * any stack and forwards the resulting model to the invisible viewer.\n */\n@injectable()\nexport abstract class HiddenCommand extends Command {\n    abstract override execute(context: CommandExecutionContext): SModelRoot | CommandResult;\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        context.logger.error(this, 'Cannot undo a hidden command');\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        context.logger.error(this, 'Cannot redo a hidden command');\n        return context.root;\n    }\n}\n\n@injectable()\nexport abstract class PopupCommand extends Command {\n}\n\n/**\n * A system command is triggered by the system, e.g. in order to update bounds\n * in the model with data fetched from the DOM.\n *\n * As it is automatically triggered it should not count as a single command in\n * undo/redo operations. Into the bargain, such an automatic command could occur\n * after an undo and as such make the next redo command invalid because it is\n * based on a model state that has changed. The command stack handles system\n * commands in a special way to overcome these issues.\n */\n@injectable()\nexport abstract class SystemCommand extends Command {\n}\n\n/**\n * A reset command deletes all undo/redo stacks and cannot be undone.\n *\n * It marks a point of no return.\n */\n@injectable()\nexport abstract class ResetCommand extends Command {\n}\n\n/**\n * The data that is passed into the execution methods of a command to give it\n * access to the context.\n */\nexport interface CommandExecutionContext {\n    /** The current Sprotty model (i.e. the main model that is visible to the user) */\n    root: SModelRoot\n\n    /** Used to turn sprotty schema elements (e.g. from the action) into model elements */\n    modelFactory: IModelFactory\n\n    /** Allows to give some feedback to the console */\n    logger: ILogger\n\n    /** Used for anmiations to trigger the rendering of a new frame */\n    modelChanged: IViewer\n\n    /** Duration of an anmiation */\n    duration: number\n\n    /** Provides the ticks for animations */\n    syncer: AnimationFrameSyncer\n}\n", "/********************************************************************************\n * Copyright (c) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, multiInject, optional, interfaces, Container } from \"inversify\";\nimport { Action } from \"sprotty-protocol/lib/actions\";\nimport { isInjectable } from \"../../utils/inversify\";\nimport { ActionHandlerRegistry, IActionHandler, IActionHandlerInitializer } from \"../actions/action-handler\";\nimport { ICommand } from \"./command\";\nimport { TYPES } from \"../types\";\n\nexport class CommandActionHandler implements IActionHandler {\n    constructor(private commandRegistration: CommandRegistration) {\n    }\n\n    handle(action: Action): ICommand {\n        return this.commandRegistration.factory(action);\n    }\n}\n\n@injectable()\nexport class CommandActionHandlerInitializer implements IActionHandlerInitializer {\n\n    constructor(@multiInject(TYPES.CommandRegistration) @optional() protected registrations: CommandRegistration[]) {\n    }\n\n    initialize(registry: ActionHandlerRegistry): void {\n        this.registrations.forEach(registration =>\n            registry.register(registration.kind, new CommandActionHandler(registration))\n        );\n    }\n}\n\nexport interface CommandRegistration {\n    kind: string\n    factory: (a: Action) => ICommand\n}\n\nexport interface ICommandConstructor<T extends Action> {\n    KIND: string\n    new (a: T, ...args: any[]): ICommand\n}\n\n/**\n * Use this method in your DI configuration to register a new command to the diagram.\n */\nexport function configureCommand<T extends Action>(context: { bind: interfaces.Bind, isBound: interfaces.IsBound },\n        constr: ICommandConstructor<T>) {\n    if (!isInjectable(constr)) {\n        throw new Error(`Commands should be @injectable: ${constr.name}`);\n    }\n    if (!context.isBound(constr)) {\n        context.bind(constr).toSelf();\n    }\n    context.bind(TYPES.CommandRegistration).toDynamicValue(ctx => ({\n        kind: constr.KIND,\n        factory: (action: Action) => {\n            const childContainer = new Container();\n            childContainer.parent = ctx.container;\n            childContainer.bind(TYPES.Action).toConstantValue(action);\n            return childContainer.get<ICommand>(constr);\n        }\n    }));\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Container } from \"inversify\";\nimport { safeAssign } from \"sprotty-protocol/lib/utils/object\";\nimport { TYPES } from '../types';\n\n/**\n * Options for the command execution\n */\nexport interface CommandStackOptions {\n    /**\n     * The default duration of an animated command in milliseconds\n     */\n    defaultDuration: number\n\n    /**\n     * The maximum number of commands that can be undone. Once the undo stack\n     * reaches this number, any additional command that is pushed will remove\n     * one from the bottom of the stack.\n     *\n     * If negative, there is no limit, which results in a memory leak.\n     */\n    undoHistoryLimit: number\n}\n\nexport function overrideCommandStackOptions(container: Container, options: Partial<CommandStackOptions>): CommandStackOptions {\n    const defaultOptions = container.get<CommandStackOptions>(TYPES.CommandStackOptions);\n    safeAssign(defaultOptions, options);\n    return defaultOptions;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from \"inversify\";\nimport { Action } from \"sprotty-protocol/lib/actions\";\nimport { TYPES } from \"../types\";\nimport { ILogger } from \"../../utils/logging\";\nimport { EMPTY_ROOT, IModelFactory } from \"../model/smodel-factory\";\nimport { SModelRoot } from \"../model/smodel\";\nimport { AnimationFrameSyncer } from \"../animations/animation-frame-syncer\";\nimport { IViewer, IViewerProvider } from \"../views/viewer\";\nimport { CommandStackOptions } from './command-stack-options';\nimport {\n    HiddenCommand, ICommand, CommandExecutionContext, CommandReturn, SystemCommand,\n    MergeableCommand, PopupCommand, ResetCommand, CommandResult\n} from './command';\n\n/**\n * The component that holds the current model and applies the commands\n * to change it.\n *\n * The command stack is called by the ActionDispatcher and forwards the\n * changed model to the Viewer that renders it.\n */\nexport interface ICommandStack {\n    /**\n     * Executes the given command on the current model and returns a\n     * Promise for the new result.\n     *\n     * Unless it is a special command, it is pushed to the undo stack\n     * such that it can be rolled back later and the redo stack is\n     * cleared.\n     */\n    execute(command: ICommand): Promise<SModelRoot>\n\n    /**\n     * Executes all of the given commands. As opposed to calling\n     * execute() multiple times, the Viewer is only updated once after\n     * the last command has been executed.\n     */\n    executeAll(commands: ICommand[]): Promise<SModelRoot>\n\n    /**\n     * Takes the topmost command from the undo stack, undoes its\n     * changes and pushes it ot the redo stack. Returns a Promise for\n     * the changed model.\n     */\n    undo(): Promise<SModelRoot>\n\n    /**\n     * Takes the topmost command from the redo stack, redoes its\n     * changes and pushes it ot the undo stack. Returns a Promise for\n     * the changed model.\n     */\n    redo(): Promise<SModelRoot>\n}\n\n/**\n * As part of the event cylce, the ICommandStack should be injected\n * using a provider to avoid cyclic injection dependencies.\n */\nexport type CommandStackProvider = () => Promise<ICommandStack>;\n\n/**\n * The implementation of the ICommandStack. Clients should not use this\n * class directly.\n *\n * The command stack holds the current model as the result of the current\n * promise. When a new command is executed/undone/redone, its execution is\n * chained using <code>Promise#then()</code> to the current Promise. This\n * way we can handle long running commands without blocking the current\n * thread.\n *\n * The command stack also does the special handling for special commands:\n *\n * System commands should be transparent to the user and as such be\n * automatically undone/redone with the next plain command. Additional care\n * must be taken that system commands that are executed after undo don't\n * break the correspondence between the topmost commands on the undo and\n * redo stacks.\n *\n * Hidden commands only tell the viewer to render a hidden model such that\n * its bounds can be extracted from the DOM and forwarded as separate actions.\n * Hidden commands should not leave any trace on the undo/redo/off stacks.\n *\n * Mergeable commands should be merged with their predecessor if possible,\n * such that e.g. multiple subsequent moves of the smae element can be undone\n * in one single step.\n */\n@injectable()\nexport class CommandStack implements ICommandStack {\n\n    @inject(TYPES.IModelFactory) protected modelFactory: IModelFactory;\n    @inject(TYPES.IViewerProvider) protected viewerProvider: IViewerProvider;\n    @inject(TYPES.ILogger) protected logger: ILogger;\n    @inject(TYPES.AnimationFrameSyncer) protected syncer: AnimationFrameSyncer;\n    @inject(TYPES.CommandStackOptions) protected options: CommandStackOptions;\n\n    protected currentPromise: Promise<CommandStackState>;\n\n    protected modelViewer?: IViewer;\n    protected hiddenModelViewer?: IViewer;\n    protected popupModelViewer?: IViewer;\n\n    protected undoStack: ICommand[] = [];\n    protected redoStack: ICommand[] = [];\n\n    /**\n     * System commands should be transparent to the user in undo/redo\n     * operations. When a system command is executed when the redo\n     * stack is not empty, it is pushed to offStack instead.\n     *\n     * On redo, all commands form this stack are undone such that the\n     * redo operation gets the exact same model as when it was executed\n     * first.\n     *\n     * On undo, all commands form this stack are undone as well as\n     * system ommands should be transparent to the user.\n     */\n    protected offStack: ICommand[] = [];\n\n    @postConstruct()\n    protected initialize() {\n        this.currentPromise = Promise.resolve({\n            main: {\n                model: this.modelFactory.createRoot(EMPTY_ROOT),\n                modelChanged: false,\n            },\n            hidden: {\n                model: this.modelFactory.createRoot(EMPTY_ROOT),\n                modelChanged: false,\n            },\n            popup: {\n                model: this.modelFactory.createRoot(EMPTY_ROOT),\n                modelChanged: false,\n            }\n        });\n    }\n\n    protected get currentModel(): Promise<SModelRoot> {\n        return this.currentPromise.then(\n            state => state.main.model\n        );\n    }\n\n    executeAll(commands: ICommand[]): Promise<SModelRoot> {\n        commands.forEach(\n            command => {\n                this.logger.log(this, 'Executing', command);\n                this.handleCommand(command, command.execute, this.mergeOrPush);\n            }\n        );\n        return this.thenUpdate();\n    }\n\n    execute(command: ICommand): Promise<SModelRoot> {\n        this.logger.log(this, 'Executing', command);\n        this.handleCommand(command, command.execute, this.mergeOrPush);\n        return this.thenUpdate();\n    }\n\n    undo(): Promise<SModelRoot> {\n        this.undoOffStackSystemCommands();\n        this.undoPreceedingSystemCommands();\n        const command = this.undoStack[this.undoStack.length - 1];\n        if (command !== undefined && !this.isBlockUndo(command)) {\n            this.undoStack.pop();\n            this.logger.log(this, 'Undoing', command);\n            this.handleCommand(command, command.undo, (c: ICommand, context: CommandExecutionContext) => {\n                this.redoStack.push(c);\n            });\n        }\n        return this.thenUpdate();\n    }\n\n    redo(): Promise<SModelRoot> {\n        this.undoOffStackSystemCommands();\n        const command = this.redoStack.pop();\n        if (command !== undefined) {\n            this.logger.log(this, 'Redoing', command);\n            this.handleCommand(command, command.redo, (c: ICommand, context: CommandExecutionContext) => {\n                this.pushToUndoStack(c);\n            });\n        }\n        this.redoFollowingSystemCommands();\n        return this.thenUpdate();\n    }\n\n    /**\n     * Chains the current promise with another Promise that performs the\n     * given operation on the given command.\n     *\n     * @param beforeResolve a function that is called directly before\n     *      resolving the Promise to return the new model. Usually puts the\n     *      command on the appropriate stack.\n     */\n    protected handleCommand(command: ICommand,\n                            operation: (context: CommandExecutionContext) => CommandReturn,\n                            beforeResolve: (command: ICommand, context: CommandExecutionContext) => void) {\n        this.currentPromise = this.currentPromise.then(state =>\n            new Promise<CommandStackState>(resolve => {\n                let target: 'main' | 'hidden' | 'popup';\n                if (command instanceof HiddenCommand)\n                    target = 'hidden';\n                else if (command instanceof PopupCommand)\n                    target = 'popup';\n                else\n                    target = 'main';\n                const context = this.createContext(state.main.model);\n\n                let commandResult: CommandReturn;\n                try {\n                    commandResult = operation.call(command, context);\n                } catch (error) {\n                    this.logger.error(this, \"Failed to execute command:\", error);\n                    commandResult = state[target].model;\n                }\n\n                const newState = copyState(state);\n                if (commandResult instanceof Promise) {\n                    commandResult.then(newModel => {\n                        if (target === 'main')\n                            beforeResolve.call(this, command, context);\n                        newState[target] = { model: newModel, modelChanged: true };\n                        resolve(newState);\n                    });\n                } else if (commandResult instanceof SModelRoot) {\n                    if (target === 'main')\n                        beforeResolve.call(this, command, context);\n                    newState[target] = { model: commandResult, modelChanged: true };\n                    resolve(newState);\n                } else {\n                    if (target === 'main')\n                        beforeResolve.call(this, command, context);\n                    newState[target] = {\n                        model: commandResult.model,\n                        modelChanged: state[target].modelChanged || commandResult.modelChanged,\n                        cause: commandResult.cause\n                    };\n                    resolve(newState);\n                }\n            })\n        );\n    }\n\n    protected pushToUndoStack(command: ICommand) {\n        this.undoStack.push(command);\n        if (this.options.undoHistoryLimit >= 0 && this.undoStack.length > this.options.undoHistoryLimit)\n            this.undoStack.splice(0, this.undoStack.length - this.options.undoHistoryLimit);\n    }\n\n    /**\n     * Notifies the Viewer to render the new model and/or the new hidden model\n     * and returns a Promise for the new model.\n     */\n    protected thenUpdate(): Promise<SModelRoot> {\n        this.currentPromise = this.currentPromise.then(state => {\n            const newState = copyState(state);\n            if (state.hidden.modelChanged) {\n                this.updateHidden(state.hidden.model, state.hidden.cause);\n                newState.hidden.modelChanged = false;\n                newState.hidden.cause = undefined;\n            }\n            if (state.main.modelChanged) {\n                this.update(state.main.model, state.main.cause);\n                newState.main.modelChanged = false;\n                newState.main.cause = undefined;\n            }\n            if (state.popup.modelChanged) {\n                this.updatePopup(state.popup.model, state.popup.cause);\n                newState.popup.modelChanged = false;\n                newState.popup.cause = undefined;\n            }\n            return newState;\n        });\n        return this.currentModel;\n    }\n\n    /**\n     * Notify the `ModelViewer` that the model has changed.\n     */\n    update(model: SModelRoot, cause?: Action): void {\n        if (this.modelViewer === undefined) {\n            this.modelViewer = this.viewerProvider.modelViewer;\n        }\n        this.modelViewer.update(model, cause);\n    }\n\n    /**\n     * Notify the `HiddenModelViewer` that the hidden model has changed.\n     */\n    updateHidden(model: SModelRoot, cause?: Action): void {\n        if (this.hiddenModelViewer === undefined) {\n            this.hiddenModelViewer = this.viewerProvider.hiddenModelViewer;\n        }\n        this.hiddenModelViewer.update(model, cause);\n    }\n\n    /**\n     * Notify the `PopupModelViewer` that the popup model has changed.\n     */\n    updatePopup(model: SModelRoot, cause?: Action): void {\n        if (this.popupModelViewer === undefined) {\n            this.popupModelViewer = this.viewerProvider.popupModelViewer;\n        }\n        this.popupModelViewer.update(model, cause);\n    }\n\n    /**\n     * Handling of commands after their execution.\n     *\n     * Hidden commands are not pushed to any stack.\n     *\n     * System commands are pushed to the <code>offStack</code> when the redo\n     * stack is not empty, allowing to undo the before a redo to keep the chain\n     * of commands consistent.\n     *\n     * Mergable commands are merged if possible.\n     */\n    protected mergeOrPush(command: ICommand, context: CommandExecutionContext): void {\n        if (this.isBlockUndo(command)) {\n            this.undoStack = [];\n            this.redoStack = [];\n            this.offStack = [];\n            this.pushToUndoStack(command);\n            return;\n        }\n        if (this.isPushToOffStack(command) && this.redoStack.length > 0) {\n            if (this.offStack.length > 0) {\n                const lastCommand = this.offStack[this.offStack.length - 1];\n                if (lastCommand instanceof MergeableCommand && lastCommand.merge(command, context))\n                    return;\n            }\n            this.offStack.push(command);\n            return;\n        }\n        if (this.isPushToUndoStack(command)) {\n            this.offStack.forEach(c => this.undoStack.push(c));\n            this.offStack = [];\n            this.redoStack = [];\n            if (this.undoStack.length > 0) {\n                const lastCommand = this.undoStack[this.undoStack.length - 1];\n                if (lastCommand instanceof MergeableCommand && lastCommand.merge(command, context))\n                    return;\n            }\n            this.pushToUndoStack(command);\n        }\n    }\n\n    /**\n     * Reverts all system commands on the offStack.\n     */\n    protected undoOffStackSystemCommands(): void {\n        let command = this.offStack.pop();\n        while (command !== undefined) {\n            this.logger.log(this, 'Undoing off-stack', command);\n            this.handleCommand(command, command.undo, () => {});\n            command = this.offStack.pop();\n        }\n    }\n\n    /**\n     * System commands should be transparent to the user, so this method\n     * is called from <code>undo()</code> to revert all system commands\n     * at the top of the undoStack.\n     */\n    protected undoPreceedingSystemCommands(): void {\n        let command = this.undoStack[this.undoStack.length - 1];\n        while (command !== undefined && this.isPushToOffStack(command)) {\n            this.undoStack.pop();\n            this.logger.log(this, 'Undoing', command);\n            this.handleCommand(command, command.undo, (c: ICommand, context: CommandExecutionContext) => {\n                this.redoStack.push(c);\n            });\n            command = this.undoStack[this.undoStack.length - 1];\n        }\n    }\n\n    /**\n     * System commands should be transparent to the user, so this method\n     * is called from <code>redo()</code> to re-execute all system commands\n     * at the top of the redoStack.\n     */\n    protected redoFollowingSystemCommands(): void {\n        let command = this.redoStack[this.redoStack.length - 1];\n        while (command !== undefined && this.isPushToOffStack(command)) {\n            this.redoStack.pop();\n            this.logger.log(this, 'Redoing ', command);\n            this.handleCommand(command, command.redo, (c: ICommand, context: CommandExecutionContext) => {\n                this.pushToUndoStack(c);\n            });\n            command = this.redoStack[this.redoStack.length - 1];\n        }\n    }\n\n    /**\n     * Assembles the context object that is passed to the commands execution method.\n     */\n    protected createContext(currentModel: SModelRoot): CommandExecutionContext {\n        return {\n            root: currentModel,\n            modelChanged: this,\n            modelFactory: this.modelFactory,\n            duration: this.options.defaultDuration,\n            logger: this.logger,\n            syncer: this.syncer\n        };\n    }\n\n    protected isPushToOffStack(command: ICommand): boolean {\n        return command instanceof SystemCommand;\n    }\n\n    protected isPushToUndoStack(command: ICommand): boolean {\n        return !(command instanceof HiddenCommand);\n    }\n\n    protected isBlockUndo(command: ICommand): boolean {\n        return command instanceof ResetCommand;\n    }\n}\n\n/**\n * Internal type to pass the results between the promises in the `CommandStack`.\n */\nexport interface CommandStackState {\n    main: CommandResult,\n    hidden: CommandResult,\n    popup: CommandResult\n}\n\nfunction copyState(state: CommandStackState): CommandStackState {\n    return {\n        main: {...state.main},\n        hidden: {...state.hidden},\n        popup: {...state.popup}\n    };\n}\n", "/********************************************************************************\n * Copyright (c) 2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Action } from './actions';\nimport { DiagramServer } from './diagram-server';\nimport { DiagramState } from './diagram-services';\n\nexport type ServerActionHandler<A extends Action = Action> = (action: A, state: DiagramState, server: DiagramServer) => Promise<void>;\n\n/**\n * Use this service to register handlers to specific actions. The `DiagramServer` queries this registry\n * when an action is received from the client, and falls back to the built-in behavior if no handlers\n * are found.\n */\nexport class ServerActionHandlerRegistry {\n\n    protected readonly handlers = new Map<string, ServerActionHandler[]>();\n\n    /**\n     * Returns the action handlers for the given action kind, or `undefined` if there are none.\n     */\n    getHandler(kind: string): ServerActionHandler[] | undefined {\n        return this.handlers.get(kind);\n    }\n\n    /**\n     * Add an action handler to be called when an action of the specified kind is received.\n     */\n    onAction<A extends Action>(kind: string, handler: ServerActionHandler<A>) {\n        if (this.handlers.has(kind)) {\n            this.handlers.get(kind)!.push(handler);\n        } else {\n            this.handlers.set(kind, [handler]);\n        }\n    }\n\n    /**\n     * Remove an action handler that was previously added with `onAction`.\n     */\n    removeActionHandler<A extends Action>(kind: string, handler: ServerActionHandler<A>) {\n        const list = this.handlers.get(kind);\n        if (list) {\n            const index = list.indexOf(handler);\n            if (index >= 0) {\n                list.splice(index, 1);\n            }\n        }\n    }\n\n}\n", "/********************************************************************************\n * Copyright (c) 2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Alignable, BoundsAware, SModelElement, SModelRoot } from '../model';\nimport { ComputedBoundsAction } from '../actions';\n\n/**\n * Clone a given model. This function requires that the model is serializable, so it's\n * free of cycles and functions.\n */\nexport function cloneModel<T extends SModelElement>(model: T): T {\n    return JSON.parse(JSON.stringify(model));\n}\n\n/**\n * Apply the computed bounds to the given model. This ensures that the model has complete\n * information about positions and sizes derived from its actual rendering in the frontend.\n */\nexport function applyBounds(root: SModelRoot, action: ComputedBoundsAction) {\n    const index = new SModelIndex();\n    index.add(root);\n    for (const b of action.bounds) {\n        const element = index.getById(b.elementId);\n        if (element) {\n            const bae = element as SModelElement & BoundsAware;\n            if (b.newPosition) {\n                bae.position = { x: b.newPosition.x, y: b.newPosition.y };\n            }\n            if (b.newSize) {\n                bae.size = { width: b.newSize.width, height: b.newSize.height };\n            }\n        }\n    }\n    if (action.alignments) {\n        for (const a of action.alignments) {\n            const element = index.getById(a.elementId);\n            if (element) {\n                const alignable = element as SModelElement & Alignable;\n                alignable.alignment = { x: a.newAlignment.x, y: a.newAlignment.y };\n            }\n        }\n    }\n}\n\n/**\n * Model element types can include a colon to separate the basic type and a sub-type. This function\n * extracts the basic type of a model element.\n */\nexport function getBasicType(element: { type: string }): string {\n    if (!element.type) {\n        return '';\n    }\n    const colonIndex = element.type.indexOf(':');\n    return colonIndex >= 0 ? element.type.substring(0, colonIndex) : element.type;\n}\n\n/**\n * Model element types can include a colon to separate the basic type and a sub-type. This function\n * extracts the sub-type of a model element.\n */\nexport function getSubType(schema: { type: string }): string {\n    if (!schema.type) {\n        return '';\n    }\n    const colonIndex = schema.type.indexOf(':');\n    return colonIndex >= 0 ? schema.type.substring(colonIndex + 1) : schema.type;\n}\n\n/**\n * Find the element with the given identifier. If you need to find multiple elements, using an\n * `SModelIndex` might be more effective.\n */\nexport function findElement(parent: SModelElement, elementId: string): SModelElement | undefined {\n    if (parent.id === elementId)\n        return parent;\n    if (parent.children !== undefined) {\n        for (const child of parent.children) {\n            const result = findElement(child, elementId);\n            if (result !== undefined)\n                return result;\n        }\n    }\n    return undefined;\n}\n\n/**\n * Used to speed up model element lookup by id.\n * This index implementation is for the serializable _external model_ defined in `sprotty-protocol`.\n */\nexport class SModelIndex {\n\n    private readonly id2element: Map<string, SModelElement> = new Map();\n    private id2parent: Map<string, SModelElement> = new Map();\n\n    add(element: SModelElement): void {\n        if (!element.id) {\n            throw new Error(\"Model element has no ID.\");\n        } else if (this.contains(element)) {\n            throw new Error(\"Duplicate ID in model: \" + element.id);\n        }\n        this.id2element.set(element.id, element);\n        if (Array.isArray(element.children)) {\n            for (const child of element.children) {\n                this.add(child as any);\n                this.id2parent.set(child.id, element);\n            }\n        }\n    }\n\n    remove(element: SModelElement): void {\n        this.id2element.delete(element.id);\n        if (Array.isArray(element.children)) {\n            for (const child of element.children) {\n                this.id2parent.delete(child.id);\n                this.remove(child as any);\n            }\n        }\n    }\n\n    contains(element: SModelElement): boolean {\n        return this.id2element.has(element.id);\n    }\n\n    getById(id: string): SModelElement | undefined {\n        return this.id2element.get(id);\n    }\n\n    getParent(id: string): SModelElement | undefined {\n        return this.id2parent.get(id);\n    }\n\n    getRoot(element: SModelElement): SModelRoot {\n        let current: SModelElement | undefined = element;\n        while (current) {\n            const parent = this.id2parent.get(current.id);\n            if (parent === undefined) {\n                return current;\n            }\n            current = parent;\n        }\n        throw new Error(\"Element has no root\");\n    }\n\n}\n", "/********************************************************************************\n * Copyright (c) 2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ServerActionHandler, ServerActionHandlerRegistry } from './action-handler';\nimport {\n    Action, isResponseAction, ResponseAction, RequestModelAction, ComputedBoundsAction, LayoutAction, RequestBoundsAction,\n    RequestAction, generateRequestId, SetModelAction, UpdateModelAction, RejectAction, isRequestAction\n} from './actions';\nimport { DiagramServices, DiagramState, IDiagramGenerator, IModelLayoutEngine } from './diagram-services';\nimport { SModelRoot } from './model';\nimport { Deferred } from './utils/async';\nimport { applyBounds, cloneModel } from './utils/model-utils';\n\n/**\n * An instance of this class is responsible for handling a single diagram client. It holds the current\n * state of the diagram and manages communication with the client via actions.\n */\nexport class DiagramServer {\n\n    readonly state: DiagramState & {\n        lastSubmittedModelType?: string\n    } = {\n        currentRoot: {\n            type: 'NONE',\n            id: 'ROOT'\n        },\n        revision: 0\n    };\n    readonly dispatch: <A extends Action>(action: A) => Promise<void>;\n\n    protected readonly diagramGenerator: IDiagramGenerator;\n    protected readonly layoutEngine?: IModelLayoutEngine;\n    protected actionHandlerRegistry?: ServerActionHandlerRegistry;\n    protected readonly requests = new Map<string, Deferred<ResponseAction>>();\n\n    constructor(dispatch: <A extends Action>(action: A) => Promise<void>,\n                services: DiagramServices) {\n        this.dispatch = dispatch;\n        this.diagramGenerator = services.DiagramGenerator;\n        this.layoutEngine = services.ModelLayoutEngine;\n        this.actionHandlerRegistry = services.ServerActionHandlerRegistry;\n    }\n\n    /**\n     * @deprecated Use the `ServerActionHandlerRegistry` service instead\n     */\n    onAction<A extends Action>(kind: string, handler: ServerActionHandler<A>) {\n        if (!this.actionHandlerRegistry) {\n            this.actionHandlerRegistry = new ServerActionHandlerRegistry();\n        }\n        this.actionHandlerRegistry.onAction(kind, handler);\n    }\n\n    /**\n     * @deprecated Use the `ServerActionHandlerRegistry` service instead\n     */\n    removeActionHandler<A extends Action>(kind: string, handler: ServerActionHandler<A>) {\n        if (this.actionHandlerRegistry) {\n            this.actionHandlerRegistry.removeActionHandler(kind, handler);\n        }\n    }\n\n    /**\n     * Set the model and submit it to the client.\n     */\n    setModel(newRoot: SModelRoot): Promise<void> {\n        newRoot.revision = ++this.state.revision;\n        this.state.currentRoot = newRoot;\n        return this.submitModel(newRoot, false);\n    }\n\n    /**\n     * Update the model to a new state and submit it to the client.\n     */\n    updateModel(newRoot: SModelRoot): Promise<void> {\n        newRoot.revision = ++this.state.revision;\n        this.state.currentRoot = newRoot;\n        return this.submitModel(newRoot, true);\n    }\n\n    /**\n     * Whether the client needs to compute the layout of parts of the model. This affects the behavior\n     * of `submitModel`.\n     *\n     * This setting is determined by the `DiagramOptions` that are received with the `RequestModelAction`\n     * from the client. If the client does not specify whether it needs client layout, the default value\n     * is `true`.\n     */\n    get needsClientLayout(): boolean {\n        if (this.state.options && this.state.options.needsClientLayout !== undefined) {\n            return !!this.state.options.needsClientLayout;\n        }\n        return true;\n    }\n\n    /**\n     * Whether the server needs to compute the layout of parts of the model. This affects the behavior\n     * of `submitModel`.\n     *\n     * This setting is determined by the `DiagramOptions` that are received with the `RequestModelAction`\n     * from the client. If the client does not specify whether it needs server layout, the default value\n     * is `false`.\n     */\n    get needsServerLayout(): boolean {\n        if (this.state.options && this.state.options.needsServerLayout !== undefined) {\n            return !!this.state.options.needsServerLayout;\n        }\n        return false;\n    }\n\n    /**\n     * Called when an action is received from the client.\n     */\n    accept(action: Action): Promise<void> {\n        if (isResponseAction(action)) {\n            const id = action.responseId;\n            const future = this.requests.get(id);\n            if (future) {\n                this.requests.delete(id);\n                if (action.kind === RejectAction.KIND) {\n                    const rejectAction: RejectAction = action as any;\n                    future.reject(new Error(rejectAction.message));\n                    console.warn(`Request with id ${action.responseId} failed: ${rejectAction.message}`, rejectAction.detail);\n                } else {\n                    future.resolve(action);\n                }\n                return Promise.resolve();\n            }\n            console.info('No matching request for response:', action);\n        }\n        return this.handleAction(action);\n    }\n\n    /**\n     * Send a request action to the client. The resulting promise is resolved when a matching\n     * response is received and rejected when a `RejectAction` is received.\n     */\n    request<Res extends ResponseAction>(action: RequestAction<Res>): Promise<Res> {\n        if (!action.requestId) {\n            action.requestId = 'server_' + generateRequestId();\n        }\n        const future = new Deferred<Res>();\n        this.requests.set(action.requestId, future as any);\n        this.dispatch(action).catch(err => {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.requests.delete(action.requestId!);\n            future.reject(err);\n        });\n        return future.promise;\n    }\n\n    /**\n     * Send a `RejectAction` to the client to notify that a request could not be fulfilled.\n     */\n    rejectRemoteRequest(action: Action | undefined, error: Error): void {\n        if (action && isRequestAction(action)) {\n            this.dispatch({\n                kind: RejectAction.KIND,\n                responseId: action.requestId,\n                message: error.message,\n                detail: error.stack\n            });\n        }\n    }\n\n    protected handleAction(action: Action): Promise<void> {\n        // Find a matching action handler in the registry\n        const handlers = this.actionHandlerRegistry?.getHandler(action.kind);\n        if (handlers && handlers.length === 1) {\n            return handlers[0](action, this.state, this);\n        } else if (handlers && handlers.length > 1) {\n            return Promise.all(handlers.map(h => h(action, this.state, this))) as Promise<any>;\n        }\n        // If no handler is registered, call one of the default handling methods\n        switch (action.kind) {\n            case RequestModelAction.KIND:\n                return this.handleRequestModel(action as RequestModelAction);\n            case ComputedBoundsAction.KIND:\n                return this.handleComputedBounds(action as ComputedBoundsAction);\n            case LayoutAction.KIND:\n                return this.handleLayout(action as LayoutAction);\n        }\n        // We don't know this action kind, sigh\n        console.warn(`Unhandled action from client: ${action.kind}`);\n        return Promise.resolve();\n    }\n\n    protected async handleRequestModel(action: RequestModelAction): Promise<void> {\n        this.state.options = action.options;\n        try {\n            const newRoot = await this.diagramGenerator.generate({\n                options: this.state.options ?? {},\n                state: this.state\n            });\n            newRoot.revision = ++this.state.revision;\n            this.state.currentRoot = newRoot;\n            await this.submitModel(this.state.currentRoot, false, action);\n        } catch (err) {\n            this.rejectRemoteRequest(action, err as Error);\n            console.error('Failed to generate diagram:', err);\n        }\n    }\n\n    /**\n     * Submit a model to the client after it has been updated in the server state.\n     */\n     protected async submitModel(newRoot: SModelRoot, update: boolean, cause?: Action): Promise<void> {\n        if (this.needsClientLayout) {\n            if (!this.needsServerLayout) {\n                // In this case the client won't send us the computed bounds\n                this.dispatch({ kind: RequestBoundsAction.KIND, newRoot });\n            } else {\n                const request = RequestBoundsAction.create(newRoot);\n                const response = await this.request<ComputedBoundsAction>(request);\n                const currentRoot = this.state.currentRoot;\n                if (response.revision === currentRoot.revision) {\n                    applyBounds(currentRoot, response);\n                    await this.doSubmitModel(currentRoot, update, cause);\n                } else {\n                    this.rejectRemoteRequest(cause, new Error(`Model revision does not match: ${response.revision}`));\n                }\n            }\n        } else {\n            await this.doSubmitModel(newRoot, update, cause);\n        }\n    }\n\n    private async doSubmitModel(newRoot: SModelRoot, update: boolean, cause?: Action): Promise<void> {\n        if (newRoot.revision !== this.state.revision) {\n            return;\n        }\n        if (this.needsServerLayout && this.layoutEngine) {\n            newRoot = await this.layoutEngine.layout(newRoot);\n        }\n        const modelType = newRoot.type;\n        if (cause && cause.kind === RequestModelAction.KIND) {\n            const requestId = (cause as RequestModelAction).requestId;\n            const response = SetModelAction.create(newRoot, requestId);\n            await this.dispatch(response);\n        } else if (update && modelType === this.state.lastSubmittedModelType) {\n            await this.dispatch({ kind: UpdateModelAction.KIND, newRoot, cause });\n        } else {\n            await this.dispatch({ kind: SetModelAction.KIND, newRoot });\n        }\n        this.state.lastSubmittedModelType = modelType;\n    }\n\n    protected handleComputedBounds(action: ComputedBoundsAction): Promise<void> {\n        if (action.revision !== this.state.currentRoot.revision) {\n            return Promise.reject();\n        }\n        applyBounds(this.state.currentRoot, action);\n        return Promise.resolve();\n    }\n\n    protected async handleLayout(action: LayoutAction): Promise<void> {\n        if (!this.layoutEngine) {\n            return;\n        }\n        if (!this.needsServerLayout) {\n            let newRoot = cloneModel(this.state.currentRoot);\n            newRoot = await this.layoutEngine.layout(newRoot);\n            newRoot.revision = ++this.state.revision;\n            this.state.currentRoot = newRoot;\n        }\n        await this.doSubmitModel(this.state.currentRoot, true, action);\n    }\n\n}\n", "/********************************************************************************\n * Copyright (c) 2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Bounds, Point, Dimension } from './utils/geometry';\nimport { hasOwnProperty } from './utils/object';\n\n/**\n * Base type for all elements of the diagram model.\n * Each model element must have a unique ID and a type that is used to look up its view.\n */\nexport interface SModelElement {\n    type: string\n    id: string\n    children?: SModelElement[]\n    cssClasses?: string[]\n}\n\n/**\n * Base type for the root element of the diagram model tree.\n */\nexport interface SModelRoot extends SModelElement {\n    canvasBounds?: Bounds\n    revision?: number\n}\n\n/**\n * Model elements that implement this interface have a position and a size.\n */\nexport interface BoundsAware {\n    position: Point\n    size: Dimension\n}\n\n/**\n * Used to adjust elements whose bounding box is not at the origin, e.g. labels\n * or pre-rendered SVG figures.\n */\nexport interface Alignable {\n    alignment: Point\n}\n\n/**\n * A viewport has a scroll position and a zoom factor. Usually these properties are\n * applied to the root element to enable navigating through the diagram.\n */\nexport interface Viewport extends Scrollable, Zoomable {\n}\n\n/**\n * A scrollable element has a scroll position, which indicates the top left corner of the\n * visible area.\n */\nexport interface Scrollable {\n    scroll: Point\n}\n\nexport function isScrollable(element: SModelElement | Scrollable): element is Scrollable {\n    return hasOwnProperty(element, 'scroll');\n}\n\n/**\n * A zoomable element can be scaled so it appears smaller or larger than its actual size.\n * The zoom value 1 is the default scale where the content is drawn with its actual size.\n */\nexport interface Zoomable {\n    zoom: number\n}\n\nexport function isZoomable(element: SModelElement | Zoomable): element is Zoomable {\n    return hasOwnProperty(element, 'zoom');\n}\n\n/**\n * Root element for graph-like models.\n */\nexport interface SGraph extends SModelRoot {\n    children: SModelElement[]\n    bounds?: Bounds\n    scroll?: Point\n    zoom?: number\n    layoutOptions?: ModelLayoutOptions\n}\n\n/**\n * Options to control the \"micro layout\" of a model element, i.e. the arrangement of its content\n * using simple algorithms such as horizontal or vertical box layout.\n */\nexport type ModelLayoutOptions = { [key: string]: string | number | boolean };\n\nexport interface SShapeElement extends SModelElement {\n    position?: Point\n    size?: Dimension\n    layoutOptions?: ModelLayoutOptions\n}\n\n/**\n * Model element class for nodes, which are the main entities in a graph. A node can be connected to\n * another node via an SEdge. Such a connection can be direct, i.e. the node is the source or target of\n * the edge, or indirect through a port, i.e. it contains an SPort which is the source or target of the edge.\n */\nexport interface SNode extends SShapeElement {\n    layout?: string\n    selected?: boolean\n    hoverFeedback?: boolean\n    opacity?: number\n    anchorKind?: string\n}\n\n/**\n * A port is a connection point for edges. It should always be contained in an SNode.\n */\nexport interface SPort extends SShapeElement {\n    selected?: boolean\n    hoverFeedback?: boolean\n    opacity?: number\n    anchorKind?: string\n}\n\n/**\n * Model element class for edges, which are the connectors in a graph. An edge has a source and a target,\n * each of which can be either a node or a port. The source and target elements are referenced via their ids.\n */\nexport interface SEdge extends SModelElement {\n    sourceId: string\n    targetId: string\n    routerKind?: string\n    routingPoints?: Point[]\n    selected?: boolean\n    hoverFeedback?: boolean\n    opacity?: number\n}\n\n/**\n * A label can be attached to a node, edge, or port, and contains some text to be rendered in its view.\n */\nexport interface SLabel extends SShapeElement {\n    text: string\n    selected?: boolean\n}\n\n/**\n * A compartment is used to group multiple child elements such as labels of a node. Usually a `vbox`\n * or `hbox` layout is used to arrange these children.\n */\nexport interface SCompartment extends SShapeElement {\n    layout?: string\n}\n\n/**\n * Root model element class for HTML content. Usually this is rendered with a `div` DOM element.\n */\nexport interface HtmlRoot extends SModelRoot {\n    classes?: string[]\n}\n\n/**\n * Pre-rendered elements contain HTML or SVG code to be transferred to the DOM. This can be useful to\n * render complex figures or to compute the view on the server instead of the client code.\n */\nexport interface PreRenderedElement extends SModelElement {\n    code: string\n}\n\n/**\n * Same as PreRenderedElement, but with a position and a size.\n */\nexport interface ShapedPreRenderedElement extends PreRenderedElement {\n    position?: Point\n    size?: Dimension\n}\n\n/**\n * A `foreignObject` element to be transferred to the DOM within the SVG.\n *\n * This can be useful to to benefit from e.g. HTML rendering features, such as line wrapping, inside of\n * the SVG diagram.  Note that `foreignObject` is not supported by all browsers and SVG viewers may not\n * support rendering the `foreignObject` content.\n *\n * If no dimensions are specified in the schema element, this element will obtain the dimension of\n * its parent to fill the entire available room. Thus, this element requires specified bounds itself\n * or bounds to be available for its parent.\n */\nexport interface ForeignObjectElement extends ShapedPreRenderedElement {\n    /** The namespace to be assigned to the elements inside of the `foreignObject`. */\n    namespace: string\n}\n", "/********************************************************************************\n * Copyright (c) 2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './actions';\nexport * from './diagram-server';\nexport * from './diagram-services';\nexport * from './model';\nexport * from './utils/async';\nexport * from './utils/geometry';\nexport * from './utils/json';\nexport * from './utils/model-utils';\nexport * from './utils/object';\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Point } from 'sprotty-protocol';\n\n/**\n * Returns whether the mouse or keyboard event includes the CMD key\n * on Mac or CTRL key on Linux / others.\n */\nexport function isCtrlOrCmd(event: KeyboardEvent | MouseEvent) {\n    if (isMac())\n        return event.metaKey;\n    else\n        return event.ctrlKey;\n}\n\nexport function isMac(): boolean {\n    return window.navigator.userAgent.indexOf(\"Mac\") !== -1;\n}\n\nexport function isCrossSite(url: string): boolean {\n    if (url && typeof window !== 'undefined' && window.location) {\n        let baseURL: string = '';\n        if (window.location.protocol)\n            baseURL += window.location.protocol + '//';\n        if (window.location.host)\n            baseURL += window.location.host;\n        return baseURL.length > 0 && !url.startsWith(baseURL);\n    }\n    return false;\n}\n\n/**\n * Returns the amount of scroll of the browser window as a point.\n */\nexport function getWindowScroll(): Point {\n    if (typeof window === 'undefined') {\n        return Point.ORIGIN;\n    }\n    return {\n        x: window.pageXOffset,\n        y: window.pageYOffset\n    };\n}\n\n/**\n * Checks whether the given mouse event hits the given DOM element.\n */\nexport function hitsMouseEvent(child: Element, event: MouseEvent): boolean {\n    const clientRect = child.getBoundingClientRect();\n    return event.clientX >= clientRect.left && event.clientX <= clientRect.right\n        && event.clientY >= clientRect.top && event.clientY <= clientRect.bottom;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from \"inversify\";\nimport { VNode } from \"snabbdom\";\nimport { Action } from \"sprotty-protocol/lib/actions\";\nimport { almostEquals, Bounds, Dimension } from \"sprotty-protocol/lib/utils/geometry\";\nimport { TYPES } from \"../types\";\nimport { IActionDispatcher } from '../actions/action-dispatcher';\nimport { IVNodePostprocessor } from \"../views/vnode-postprocessor\";\nimport { SModelElement, SModelRoot } from \"../model/smodel\";\nimport { SystemCommand, CommandExecutionContext, CommandReturn } from '../commands/command';\nimport { getWindowScroll } from \"../../utils/browser\";\n\n/**\n * Grabs the bounds from the root element in page coordinates and fires a\n * InitializeCanvasBoundsAction. This size is needed for other actions such\n * as FitToScreenAction.\n */\n@injectable()\nexport class CanvasBoundsInitializer implements IVNodePostprocessor {\n\n    protected rootAndVnode: [SModelRoot, VNode] | undefined;\n\n    @inject(TYPES.IActionDispatcher) protected actionDispatcher: IActionDispatcher;\n\n    decorate(vnode: VNode, element: SModelElement): VNode {\n        if (element instanceof SModelRoot && !Dimension.isValid(element.canvasBounds)) {\n            this.rootAndVnode = [element, vnode];\n        }\n        return vnode;\n    }\n\n    postUpdate() {\n        if (this.rootAndVnode !== undefined) {\n            const domElement = this.rootAndVnode[1].elm;\n            const oldBounds = this.rootAndVnode[0].canvasBounds;\n            if (domElement !== undefined) {\n                const newBounds = this.getBoundsInPage(domElement as Element);\n                if (!(almostEquals(newBounds.x, oldBounds.x)\n                        && almostEquals(newBounds.y, oldBounds.y)\n                        && almostEquals(newBounds.width, oldBounds.width)\n                        && almostEquals(newBounds.height, oldBounds.width)))\n                    this.actionDispatcher.dispatch(InitializeCanvasBoundsAction.create(newBounds));\n\n            }\n            this.rootAndVnode = undefined;\n        }\n    }\n\n    protected getBoundsInPage(element: Element) {\n        const bounds = element.getBoundingClientRect();\n        const scroll = getWindowScroll();\n        return {\n            x: bounds.left + scroll.x,\n            y: bounds.top + scroll.y,\n            width: bounds.width,\n            height: bounds.height\n        };\n    }\n}\n\nexport interface InitializeCanvasBoundsAction extends Action {\n    kind: typeof InitializeCanvasBoundsAction.KIND\n    newCanvasBounds: Bounds\n}\nexport namespace InitializeCanvasBoundsAction {\n    export const KIND = 'initializeCanvasBounds';\n\n    export function create(newCanvasBounds: Bounds): InitializeCanvasBoundsAction {\n        return {\n            kind: KIND,\n            newCanvasBounds\n        };\n    }\n}\n\n@injectable()\nexport class InitializeCanvasBoundsCommand extends SystemCommand {\n    static readonly KIND: string = InitializeCanvasBoundsAction.KIND;\n\n    private newCanvasBounds: Bounds;\n\n    constructor(@inject(TYPES.Action) protected readonly action: InitializeCanvasBoundsAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        this.newCanvasBounds = this.action.newCanvasBounds;\n        context.root.canvasBounds = this.newCanvasBounds;\n        return context.root;\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        return context.root;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from \"inversify\";\nimport {\n    Action, generateRequestId, RequestAction, ResponseAction,\n    RequestModelAction as ProtocolRequestModelAction, SetModelAction as ProtocolSetModelAction\n} from \"sprotty-protocol/lib/actions\";\nimport { SModelRoot as SModelRootSchema } from 'sprotty-protocol/lib/model';\nimport { JsonPrimitive } from \"sprotty-protocol/lib/utils/json\";\nimport { CommandExecutionContext, ResetCommand } from \"../commands/command\";\nimport { SModelRoot } from \"../model/smodel\";\nimport { TYPES } from \"../types\";\nimport { InitializeCanvasBoundsCommand } from './initialize-canvas';\n\n/**\n * Sent from the client to the model source (e.g. a DiagramServer) in order to request a model. Usually this\n * is the first message that is sent to the source, so it is also used to initiate the communication.\n * The response is a SetModelAction or an UpdateModelAction.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport class RequestModelAction implements RequestAction<SetModelAction>, ProtocolRequestModelAction {\n    static readonly KIND = 'requestModel';\n    readonly kind = RequestModelAction.KIND;\n\n    constructor(public readonly options?: { [key: string]: JsonPrimitive },\n        public readonly requestId = '') { }\n\n    /** Factory function to dispatch a request with the `IActionDispatcher` */\n    static create(options?: { [key: string]: JsonPrimitive }): RequestAction<SetModelAction> {\n        return new RequestModelAction(options, generateRequestId());\n    }\n}\n\n/**\n * Sent from the model source to the client in order to set the model. If a model is already present, it is replaced.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport class SetModelAction implements ResponseAction, ProtocolSetModelAction {\n    static readonly KIND = 'setModel';\n    readonly kind = SetModelAction.KIND;\n\n    constructor(public readonly newRoot: SModelRootSchema,\n        public readonly responseId = '') { }\n}\n\n@injectable()\nexport class SetModelCommand extends ResetCommand {\n    static readonly KIND = ProtocolSetModelAction.KIND;\n\n    oldRoot: SModelRoot;\n    newRoot: SModelRoot;\n\n    constructor(@inject(TYPES.Action) protected readonly action: ProtocolSetModelAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): SModelRoot {\n        this.oldRoot = context.modelFactory.createRoot(context.root);\n        this.newRoot = context.modelFactory.createRoot(this.action.newRoot);\n        return this.newRoot;\n    }\n\n    undo(context: CommandExecutionContext): SModelRoot {\n        return this.oldRoot;\n    }\n\n    redo(context: CommandExecutionContext): SModelRoot {\n        return this.newRoot;\n    }\n\n    get blockUntil(): (action: Action) => boolean {\n        return action => action.kind === InitializeCanvasBoundsCommand.KIND;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces } from \"inversify\";\nimport { SModelElement as SModelElementSchema } from 'sprotty-protocol/lib/model';\nimport { Bounds, Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { TYPES } from \"../types\";\nimport { SChildElement, SModelElement, SModelRoot, SParentElement } from \"./smodel\";\nimport { SModelElementRegistration, CustomFeatures } from \"./smodel-factory\";\n\n/**\n * Register a model element constructor for an element type.\n */\nexport function registerModelElement(context: { bind: interfaces.Bind, isBound: interfaces.IsBound },\n        type: string, constr: new () => SModelElement, features?: CustomFeatures): void {\n    context.bind<SModelElementRegistration>(TYPES.SModelElementRegistration).toConstantValue({\n        type, constr, features\n    });\n}\n\n/**\n * Model element types can include a colon to separate the basic type and a sub-type. This function\n * extracts the basic type of a model element.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport function getBasicType(schema: SModelElementSchema | SModelElement): string {\n    if (!schema.type)\n        return '';\n    const colonIndex = schema.type.indexOf(':');\n    if (colonIndex >= 0)\n        return schema.type.substring(0, colonIndex);\n    else\n        return schema.type;\n}\n\n/**\n * Model element types can include a colon to separate the basic type and a sub-type. This function\n * extracts the sub-type of a model element.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport function getSubType(schema: SModelElementSchema | SModelElement): string {\n    if (!schema.type)\n        return '';\n    const colonIndex = schema.type.indexOf(':');\n    if (colonIndex >= 0)\n        return schema.type.substring(colonIndex + 1);\n    else\n        return schema.type;\n}\n\n/**\n * Find the element with the given identifier. If you need to find multiple elements, using an\n * SModelIndex might be more effective.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport function findElement(parent: SModelElementSchema, elementId: string): SModelElementSchema | undefined {\n    if (parent.id === elementId)\n        return parent;\n    if (parent.children !== undefined) {\n        for (const child of parent.children) {\n            const result = findElement(child, elementId);\n            if (result !== undefined)\n                return result;\n        }\n    }\n    return undefined;\n}\n\n/**\n * Find a parent element that satisfies the given predicate.\n */\nexport function findParent(element: SModelElement, predicate: (e: SModelElement) => boolean): SModelElement | undefined {\n    let current: SModelElement | undefined = element;\n    while (current !== undefined) {\n        if (predicate(current))\n            return current;\n        else if (current instanceof SChildElement)\n            current = current.parent;\n        else\n            current = undefined;\n    }\n    return current;\n}\n\n/**\n * Find a parent element that implements the feature identified with the given predicate.\n */\nexport function findParentByFeature<T>(element: SModelElement, predicate: (t: SModelElement) => t is SModelElement & T): SModelElement & T | undefined {\n    let current: SModelElement | undefined = element;\n    while (current !== undefined) {\n        if (predicate(current))\n            return current;\n        else if (current instanceof SChildElement)\n            current = current.parent;\n        else\n            current = undefined;\n    }\n    return current;\n}\n\n/**\n * Translate a point from the coordinate system of the source element to the coordinate system\n * of the target element.\n */\nexport function translatePoint(point: Point, source: SModelElement, target: SModelElement): Point {\n    if (source !== target) {\n        // Translate from the source to the root element\n        while (source instanceof SChildElement) {\n            point = source.localToParent(point);\n            source = source.parent;\n            if (source === target)\n                return point;\n        }\n        // Translate from the root to the target element\n        const targetTrace = [];\n        while (target instanceof SChildElement) {\n            targetTrace.push(target);\n            target = target.parent;\n        }\n        if (source !== target)\n            throw new Error(\"Incompatible source and target: \" + source.id + \", \" + target.id);\n        for (let i = targetTrace.length - 1; i >= 0; i--) {\n            point = targetTrace[i].parentToLocal(point);\n        }\n    }\n    return point;\n}\n\n/**\n * Translate some bounds from the coordinate system of the source element to the coordinate system\n * of the target element.\n */\nexport function translateBounds(bounds: Bounds, source: SModelElement, target: SModelElement): Bounds {\n    const upperLeft = translatePoint(bounds, source, target);\n    const lowerRight = translatePoint({ x: bounds.x + bounds.width, y: bounds.y + bounds.height }, source, target);\n    return {\n        x: upperLeft.x,\n        y: upperLeft.y,\n        width: lowerRight.x - upperLeft.x,\n        height: lowerRight.y - upperLeft.y\n    };\n}\n\n/**\n * Tests if the given model contains an id of then given element or one of its descendants.\n */\nexport function containsSome(root: SModelRoot, element: SChildElement): boolean {\n    const test = (el: SChildElement) => root.index.getById(el.id) !== undefined;\n    const find = (elements: readonly SChildElement[]): boolean => elements.some(el => test(el) || find(el.children));\n    return find([element]);\n}\n\n/**\n * Transforms the local bounds all the way up to the root.\n */\nexport function  transformToRootBounds(parent: SParentElement, bounds: Bounds) {\n    while (parent instanceof SChildElement) {\n        bounds = parent.localToParent(bounds);\n        parent = parent.parent;\n    }\n    return bounds;\n}\n", "/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Action } from \"sprotty-protocol/lib/actions\";\n\n/**\n * Action to enable the tools of the specified `toolIds`.\n */\nexport interface EnableToolsAction extends Action {\n    kind: typeof EnableToolsAction.KIND\n    toolIds: string[]\n}\nexport namespace EnableToolsAction {\n    export const KIND = \"enable-tools\";\n\n    export function create(toolIds: string[]): EnableToolsAction {\n        return {\n            kind: KIND,\n            toolIds\n        };\n    }\n}\n\n/**\n * Action to disable the currently active tools and enable the default tools instead.\n */\nexport interface EnableDefaultToolsAction extends Action {\n    kind: typeof EnableDefaultToolsAction.KIND;\n}\nexport namespace EnableDefaultToolsAction {\n    export const KIND = \"enable-default-tools\";\n\n    export function create(): EnableDefaultToolsAction {\n        return {\n            kind: KIND\n        };\n    }\n}\n\n/** A tool that can be managed by a `ToolManager`. */\nexport interface Tool {\n    readonly id: string;\n    /* Notifies the tool to become active. */\n    enable(): void;\n    /* Notifies the tool to become inactive. */\n    disable(): void;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { VNode } from \"snabbdom\";\n\nexport function setAttr(vnode: VNode, name: string, value: any) {\n    getAttrs(vnode)[name] = value;\n}\n\nexport function setClass(vnode: VNode, name: string, value: boolean) {\n    getClass(vnode)[name] = value;\n}\n\nexport function setNamespace(node: VNode, ns: string) {\n    if (node.data === undefined)\n        node.data = {};\n    node.data.ns = ns;\n    const children = node.children;\n    if (children !== undefined) {\n        for (let i = 0; i < children.length; i++) {\n            const child = children[i];\n            if (typeof child !== 'string')\n                setNamespace(child, ns);\n        }\n    }\n}\n\nexport function copyClassesFromVNode(source: VNode, target: VNode) {\n    const classList = getClass(source);\n    Object.keys(classList).forEach(c => setClass(target, c, true));\n}\n\nexport function copyClassesFromElement(element: HTMLElement, target: VNode) {\n    const classList = element.classList;\n    for (let i = 0; i < classList.length; i++) {\n        const item = classList.item(i);\n        if (item)\n            setClass(target, item, true);\n    }\n}\n\nexport function mergeStyle(vnode: VNode, style: any) {\n    getData(vnode).style = {...(getData(vnode).style || {}), ...style};\n}\n\nexport function on(vnode: VNode, event: string, listener: (event: Event) => void) {\n    const val = getOn(vnode);\n    if (val[event]) {\n        throw new Error('EventListener for ' + event + ' already registered on VNode');\n    }\n    (val as any)[event] = listener;\n}\n\nexport function getAttrs(vnode: VNode) {\n    const data = getData(vnode);\n    if (!data.attrs)\n        data.attrs = {};\n    return data.attrs;\n}\n\nfunction getData(vnode: VNode) {\n    if (!vnode.data)\n        vnode.data = {};\n    return vnode.data;\n}\n\nfunction getClass(vnode: VNode) {\n    const data = getData(vnode);\n    if (!data.class)\n        data.class = {};\n    return data.class;\n}\n\nfunction getOn(vnode: VNode) {\n    const data = getData(vnode);\n    if (!data.on)\n        data.on = {};\n    return data.on;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, multiInject, optional } from \"inversify\";\nimport { VNode } from \"snabbdom\";\nimport { Action } from \"sprotty-protocol/lib/actions\";\nimport { TYPES } from \"../types\";\nimport { IActionDispatcher } from \"../actions/action-dispatcher\";\nimport { SModelElement, SModelRoot } from \"../model/smodel\";\nimport { IVNodePostprocessor } from \"./vnode-postprocessor\";\nimport { on } from \"./vnode-utils\";\n\n@injectable()\nexport class KeyTool implements IVNodePostprocessor {\n\n    @inject(TYPES.IActionDispatcher) protected actionDispatcher: IActionDispatcher;\n\n    constructor(@multiInject(TYPES.KeyListener)@optional() protected keyListeners: KeyListener[] = []) {}\n\n    register(keyListener: KeyListener) {\n        this.keyListeners.push(keyListener);\n    }\n\n    deregister(keyListener: KeyListener) {\n        const index = this.keyListeners.indexOf(keyListener);\n        if (index >= 0)\n            this.keyListeners.splice(index, 1);\n    }\n\n    protected handleEvent<K extends keyof KeyListener>(methodName: K, model: SModelRoot, event: KeyboardEvent) {\n        const actions = this.keyListeners\n            .map(listener => listener[methodName].apply(listener, [model, event]))\n            .reduce((a, b) => a.concat(b));\n        if (actions.length > 0) {\n            event.preventDefault();\n            this.actionDispatcher.dispatchAll(actions);\n        }\n    }\n\n    keyDown(element: SModelRoot, event: KeyboardEvent): void {\n        this.handleEvent('keyDown', element, event);\n    }\n\n    keyUp(element: SModelRoot, event: KeyboardEvent): void {\n        this.handleEvent('keyUp', element, event);\n    }\n\n    focus() {}\n\n    decorate(vnode: VNode, element: SModelElement): VNode {\n        if (element instanceof SModelRoot) {\n            on(vnode, 'focus', this.focus.bind(this, element));\n            on(vnode, 'keydown', this.keyDown.bind(this, element));\n            on(vnode, 'keyup', this.keyUp.bind(this, element));\n        }\n        return vnode;\n    }\n\n    postUpdate() {\n    }\n}\n\n@injectable()\nexport class KeyListener {\n    keyDown(element: SModelElement, event: KeyboardEvent): Action[] {\n        return [];\n    }\n\n    keyUp(element: SModelElement, event: KeyboardEvent): Action[] {\n        return [];\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { isMac } from './browser';\n\n/**\n * Returns whether the keyboard event matches the keystroke described by the given\n * code and modifiers. The code must comply to the format of the `code` property\n * of KeyboardEvent, but in contrast to that property, the actual keyboard layout is\n * considered by this function if possible.\n */\nexport function matchesKeystroke(event: KeyboardEvent, code: KeyCode, ...modifiers: KeyboardModifier[]): boolean {\n    if (getActualCode(event) !== code)\n        return false;\n    if (isMac()) {\n        if (event.ctrlKey !== (modifiers.findIndex(m => m === 'ctrl') >= 0))\n            return false;\n        if (event.metaKey !== (modifiers.findIndex(m => m === 'meta' || m === 'ctrlCmd') >= 0))\n            return false;\n    } else {\n        if (event.ctrlKey !== (modifiers.findIndex(m => m === 'ctrl' || m === 'ctrlCmd') >= 0))\n            return false;\n        if (event.metaKey !== (modifiers.findIndex(m => m === 'meta') >= 0))\n            return false;\n    }\n    if (event.altKey !== (modifiers.findIndex(m => m === 'alt') >= 0))\n        return false;\n    if (event.shiftKey !== (modifiers.findIndex(m => m === 'shift') >= 0))\n        return false;\n    return true;\n}\n\nexport type KeyboardModifier = 'ctrl' | 'meta' | 'ctrlCmd' | 'alt' | 'shift';\n\nexport type KeyCode =\n    'AltLeft'|'AltRight'|'ArrowDown'|'ArrowLeft'|'ArrowRight'|'ArrowUp'|'Backslash'|'Backspace'|'Backquote'\n    |'BracketLeft'|'BracketRight'|'CapsLock'|'Comma'|'ContextMenu'|'ControlLeft'|'ControlRight'|'Convert'|'Delete'\n    |'Digit0'|'Digit1'|'Digit2'|'Digit3'|'Digit4'|'Digit5'|'Digit6'|'Digit7'|'Digit8'|'Digit9'\n    |'F1'|'F2'|'F3'|'F4'|'F5'|'F6'|'F7'|'F8'|'F9'|'F10'|'F11'|'F12'|'F13'|'F14'|'F15'|'F16'|'F17'|'F18'|'F19'|'F20'|'F21'|'F22'|'F23'|'F24'\n    |'End'|'Enter'|'Equal'|'Escape'|'Home'|'Insert'|'IntlBackslash'|'IntlRo'|'IntlYen'|'KanaMode'\n    |'KeyA'|'KeyB'|'KeyC'|'KeyD'|'KeyE'|'KeyF'|'KeyG'|'KeyH'|'KeyI'|'KeyJ'|'KeyK'|'KeyL'|'KeyM'\n    |'KeyN'|'KeyO'|'KeyP'|'KeyQ'|'KeyR'|'KeyS'|'KeyT'|'KeyU'|'KeyV'|'KeyW'|'KeyX'|'KeyY'|'KeyZ'\n    |'MetaLeft'|'MetaRight'|'Minus'|'NonConvert'|'NumLock'\n    |'Numpad0'|'Numpad1'|'Numpad2'|'Numpad3'|'Numpad4'|'Numpad5'|'Numpad6'|'Numpad7'|'Numpad8'|'Numpad9'\n    |'NumpadAdd'|'NumpadComma'|'NumpadDecimal'|'NumpadDivide'|'NumpadEnter'|'NumpadEqual'|'NumpadMultiply'\n    |'NumpadSeparator'|'NumpadSubtract'|'OSLeft'|'OSRight'|'PageDown'|'PageUp'|'Pause'|'Period'|'PrintScreen'\n    |'Quote'|'ScrollLock'|'Semicolon'|'ShiftLeft'|'ShiftRight'|'Slash'|'Space'|'Tab';\n\n/**\n * Determines a key code from the given event. This is necessary because the `code` property of\n * a KeyboardEvent does not consider keyboard layouts.\n */\nexport function getActualCode(event: KeyboardEvent): KeyCode {\n    if (event.keyCode) {\n        const result = STRING_CODE[event.keyCode];\n        if (result !== undefined)\n            return result;\n    }\n    return event.code as KeyCode;\n}\n\nconst STRING_CODE: { [keyCode: number]: KeyCode } = new Array(256);\n\n(() => {\n    function addKeyCode(stringCode: KeyCode, numericCode: number): void {\n        if (STRING_CODE[numericCode] === undefined)\n            STRING_CODE[numericCode] = stringCode;\n    }\n\n    addKeyCode('Pause', 3);\n    addKeyCode('Backspace', 8);\n    addKeyCode('Tab', 9);\n    addKeyCode('Enter', 13);\n    addKeyCode('ShiftLeft', 16);\n    addKeyCode('ShiftRight', 16);\n    addKeyCode('ControlLeft', 17);\n    addKeyCode('ControlRight', 17);\n    addKeyCode('AltLeft', 18);\n    addKeyCode('AltRight', 18);\n    addKeyCode('CapsLock', 20);\n    addKeyCode('Escape', 27);\n    addKeyCode('Space', 32);\n    addKeyCode('PageUp', 33);\n    addKeyCode('PageDown', 34);\n    addKeyCode('End', 35);\n    addKeyCode('Home', 36);\n    addKeyCode('ArrowLeft', 37);\n    addKeyCode('ArrowUp', 38);\n    addKeyCode('ArrowRight', 39);\n    addKeyCode('ArrowDown', 40);\n    addKeyCode('Insert', 45);\n    addKeyCode('Delete', 46);\n\n    addKeyCode('Digit1', 49);\n    addKeyCode('Digit2', 50);\n    addKeyCode('Digit3', 51);\n    addKeyCode('Digit4', 52);\n    addKeyCode('Digit5', 53);\n    addKeyCode('Digit6', 54);\n    addKeyCode('Digit7', 55);\n    addKeyCode('Digit8', 56);\n    addKeyCode('Digit9', 57);\n    addKeyCode('Digit0', 48);\n\n    addKeyCode('KeyA', 65);\n    addKeyCode('KeyB', 66);\n    addKeyCode('KeyC', 67);\n    addKeyCode('KeyD', 68);\n    addKeyCode('KeyE', 69);\n    addKeyCode('KeyF', 70);\n    addKeyCode('KeyG', 71);\n    addKeyCode('KeyH', 72);\n    addKeyCode('KeyI', 73);\n    addKeyCode('KeyJ', 74);\n    addKeyCode('KeyK', 75);\n    addKeyCode('KeyL', 76);\n    addKeyCode('KeyM', 77);\n    addKeyCode('KeyN', 78);\n    addKeyCode('KeyO', 79);\n    addKeyCode('KeyP', 80);\n    addKeyCode('KeyQ', 81);\n    addKeyCode('KeyR', 82);\n    addKeyCode('KeyS', 83);\n    addKeyCode('KeyT', 84);\n    addKeyCode('KeyU', 85);\n    addKeyCode('KeyV', 86);\n    addKeyCode('KeyW', 87);\n    addKeyCode('KeyX', 88);\n    addKeyCode('KeyY', 89);\n    addKeyCode('KeyZ', 90);\n\n    addKeyCode('OSLeft', 91);\n    addKeyCode('MetaLeft', 91);\n    addKeyCode('OSRight', 92);\n    addKeyCode('MetaRight', 92);\n    addKeyCode('ContextMenu', 93);\n\n    addKeyCode('Numpad0', 96);\n    addKeyCode('Numpad1', 97);\n    addKeyCode('Numpad2', 98);\n    addKeyCode('Numpad3', 99);\n    addKeyCode('Numpad4', 100);\n    addKeyCode('Numpad5', 101);\n    addKeyCode('Numpad6', 102);\n    addKeyCode('Numpad7', 103);\n    addKeyCode('Numpad8', 104);\n    addKeyCode('Numpad9', 105);\n    addKeyCode('NumpadMultiply', 106);\n    addKeyCode('NumpadAdd', 107);\n    addKeyCode('NumpadSeparator', 108);\n    addKeyCode('NumpadSubtract', 109);\n    addKeyCode('NumpadDecimal', 110);\n    addKeyCode('NumpadDivide', 111);\n\n    addKeyCode('F1', 112);\n    addKeyCode('F2', 113);\n    addKeyCode('F3', 114);\n    addKeyCode('F4', 115);\n    addKeyCode('F5', 116);\n    addKeyCode('F6', 117);\n    addKeyCode('F7', 118);\n    addKeyCode('F8', 119);\n    addKeyCode('F9', 120);\n    addKeyCode('F10', 121);\n    addKeyCode('F11', 122);\n    addKeyCode('F12', 123);\n    addKeyCode('F13', 124);\n    addKeyCode('F14', 125);\n    addKeyCode('F15', 126);\n    addKeyCode('F16', 127);\n    addKeyCode('F17', 128);\n    addKeyCode('F18', 129);\n    addKeyCode('F19', 130);\n    addKeyCode('F20', 131);\n    addKeyCode('F21', 132);\n    addKeyCode('F22', 133);\n    addKeyCode('F23', 134);\n    addKeyCode('F24', 135);\n\n    addKeyCode('NumLock', 144);\n    addKeyCode('ScrollLock', 145);\n\n    addKeyCode('Semicolon', 186);\n    addKeyCode('Equal', 187);\n    addKeyCode('Comma', 188);\n    addKeyCode('Minus', 189);\n    addKeyCode('Period', 190);\n    addKeyCode('Slash', 191);\n    addKeyCode('Backquote', 192);\n    addKeyCode('IntlRo', 193);\n    addKeyCode('BracketLeft', 219);\n    addKeyCode('Backslash', 220);\n    addKeyCode('BracketRight', 221);\n    addKeyCode('Quote', 222);\n    addKeyCode('IntlYen', 255);\n})();\n", "/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { inject, injectable } from \"inversify\";\nimport { Action } from \"sprotty-protocol/lib/actions\";\nimport { TYPES } from \"../types\";\nimport { EnableDefaultToolsAction, EnableToolsAction, Tool } from \"./tool\";\nimport { IActionHandler } from \"../actions/action-handler\";\nimport { ICommand } from \"../commands/command\";\nimport { KeyListener } from \"../views/key-tool\";\nimport { SModelElement } from \"../model/smodel\";\nimport { matchesKeystroke } from \"../../utils/keyboard\";\n\n/**\n * A tool manager coordinates the state of tools in the context of an editor.\n *\n * One instance of a tool manager is intended per editor, coordinating the state of all tools within\n * this editor. A tool can be active or not. A tool manager ensures that activating a set of tools\n * will disable all other tools, allowing them to invoke behavior when they become enabled or disabled.\n */\nexport interface IToolManager {\n\n    /** All tools managed by this tool manager. */\n    readonly managedTools: Tool[];\n\n    /** The tools that are enabled by default, whenever no other tool is enabled. */\n    readonly defaultTools: Tool[];\n\n    /** The currently active tools, which are either specifically enabled tools, or the default tools. */\n    readonly activeTools: Tool[];\n\n    /**\n     * Enables the tools with the specified `toolIds`.\n     * Therefore, this manager first disables currently active tools and then enable the\n     * tools indicated in `toolIds`, making them the currently active tools. If this manager\n     * doesn't manage one or more tools specified in `toolIds`, it'll do nothing. If not a\n     * single tool that shall be enabled was found in the managed tools, it'll fall back to\n     * the default tools.\n     *\n     * @param tools The tools to be enabled.\n     */\n    enable(toolIds: string[]): void;\n\n    /**\n     * Enables all default tools.\n     */\n    enableDefaultTools(): void;\n\n    /** Disables all currently active tools. After this call, no tool will be active anymore. */\n    disableActiveTools(): void;\n\n    registerDefaultTools(...tools: Tool[]): void;\n\n    registerTools(...tools: Tool[]): void;\n}\n\n@injectable()\nexport class ToolManager implements IToolManager {\n\n    readonly tools: Tool[] = [];\n    readonly defaultTools: Tool[] = [];\n    readonly actives: Tool[] = [];\n\n    get managedTools(): Tool[] {\n        return this.defaultTools.concat(this.tools);\n    }\n\n    get activeTools(): Tool[] {\n        return this.actives;\n    }\n\n    disableActiveTools() {\n        this.actives.forEach(tool => tool.disable());\n        this.actives.splice(0, this.actives.length);\n    }\n\n    enableDefaultTools() {\n        this.enable(this.defaultTools.map(tool => tool.id));\n    }\n\n    enable(toolIds: string[]) {\n        this.disableActiveTools();\n        const tools = toolIds.map(id => this.tool(id));\n        tools.forEach(tool => {\n            if (tool !== undefined) {\n                tool.enable();\n                this.actives.push(tool);\n            }\n        });\n    }\n\n    tool(toolId: string): Tool | undefined {\n        return this.managedTools.find(tool => tool.id === toolId);\n    }\n\n    registerDefaultTools(...tools: Tool[]) {\n        for (const tool of tools) {\n            this.defaultTools.push(tool);\n        }\n    }\n\n    registerTools(...tools: Tool[]) {\n        for (const tool of tools) {\n            this.tools.push(tool);\n        }\n    }\n}\n\n@injectable()\nexport class ToolManagerActionHandler implements IActionHandler {\n    @inject(TYPES.IToolManager)\n    readonly toolManager: IToolManager;\n\n    handle(action: Action): void | ICommand | Action {\n        switch (action.kind) {\n            case EnableDefaultToolsAction.KIND:\n                this.toolManager.enableDefaultTools();\n                break;\n            case EnableToolsAction.KIND:\n                this.toolManager.enable((action as EnableToolsAction).toolIds);\n                break;\n        }\n    }\n}\n\n@injectable()\nexport class DefaultToolsEnablingKeyListener extends KeyListener {\n    override keyDown(element: SModelElement, event: KeyboardEvent): Action[] {\n        if (matchesKeystroke(event, 'Escape')) {\n            return [EnableDefaultToolsAction.create()];\n        }\n        return [];\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { inject, injectable, multiInject, optional } from \"inversify\";\nimport { Action } from \"sprotty-protocol/lib/actions\";\nimport { InstanceRegistry } from \"../../utils/registry\";\nimport { CommandExecutionContext, SystemCommand, CommandReturn } from \"../commands/command\";\nimport { TYPES } from \"../types\";\nimport { IUIExtension } from \"./ui-extension\";\n\n/**\n * The registry maintaining UI extensions registered via `TYPES.IUIExtension`.\n */\n@injectable()\nexport class UIExtensionRegistry extends InstanceRegistry<IUIExtension>  {\n    constructor(@multiInject(TYPES.IUIExtension) @optional() extensions: (IUIExtension)[] = []) {\n        super();\n        extensions.forEach((extension) => this.register(extension.id(), extension));\n    }\n}\n\n/**\n * Action to set the visibility state of the UI extension with the specified `id`.\n */\nexport interface SetUIExtensionVisibilityAction extends Action {\n    kind: typeof SetUIExtensionVisibilityAction.KIND;\n    extensionId: string\n    visible: boolean\n    contextElementsId: string[]\n}\nexport namespace SetUIExtensionVisibilityAction {\n    export const KIND = \"setUIExtensionVisibility\";\n\n    export function create(options: { extensionId: string, visible: boolean, contextElementsId?: string[] }): SetUIExtensionVisibilityAction {\n        return {\n            kind: KIND,\n            extensionId: options.extensionId,\n            visible: options.visible,\n            contextElementsId: options.contextElementsId ?? []\n        };\n    }\n}\n\n@injectable()\nexport class SetUIExtensionVisibilityCommand extends SystemCommand {\n    static readonly KIND = SetUIExtensionVisibilityAction.KIND;\n\n    @inject(TYPES.UIExtensionRegistry) protected readonly registry: UIExtensionRegistry;\n\n    constructor(@inject(TYPES.Action) protected readonly action: SetUIExtensionVisibilityAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        const extension = this.registry.get(this.action.extensionId);\n        if (extension) {\n            this.action.visible ? extension.show(context.root, ...this.action.contextElementsId) : extension.hide();\n        }\n        return { model: context.root, modelChanged: false };\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        return { model: context.root, modelChanged: false };\n    }\n    redo(context: CommandExecutionContext): CommandReturn {\n        return { model: context.root, modelChanged: false };\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { inject, injectable } from \"inversify\";\nimport { ILogger } from \"../../utils/logging\";\nimport { SModelRoot } from \"../model/smodel\";\nimport { TYPES } from \"../types\";\nimport { ViewerOptions } from \"../views/viewer-options\";\n\n/**\n * A UI extension displaying additional UI elements on top of a sprotty diagram.\n */\nexport interface IUIExtension {\n    id(): string;\n    show(root: Readonly<SModelRoot>, ...contextElementIds: string[]): void;\n    hide(): void;\n}\n\n/**\n * Abstract base class for UI extensions.\n */\n@injectable()\nexport abstract class AbstractUIExtension implements IUIExtension {\n    @inject(TYPES.ViewerOptions) protected options: ViewerOptions;\n    @inject(TYPES.ILogger) protected logger: ILogger;\n\n    protected containerElement: HTMLElement;\n    protected activeElement: Element | null;\n\n    abstract id(): string;\n    abstract containerClass(): string;\n\n    show(root: Readonly<SModelRoot>, ...contextElementIds: string[]): void {\n        this.activeElement = document.activeElement;\n        if (!this.containerElement) {\n            if (!this.initialize()) return;\n        }\n        this.onBeforeShow(this.containerElement, root, ...contextElementIds);\n        this.setContainerVisible(true);\n    }\n\n    hide(): void {\n        this.setContainerVisible(false);\n        this.restoreFocus();\n        this.activeElement = null;\n    }\n\n    protected restoreFocus() {\n        const focusedElement = this.activeElement as HTMLElement;\n        if (focusedElement) {\n            focusedElement.focus();\n        }\n    }\n\n    protected initialize(): boolean {\n        const baseDiv = document.getElementById(this.options.baseDiv);\n        if (!baseDiv) {\n            this.logger.warn(this, `Could not obtain sprotty base container for initializing UI extension ${this.id}`, this);\n            return false;\n        }\n        this.containerElement = this.getOrCreateContainer(baseDiv.id);\n        this.initializeContents(this.containerElement);\n        if (baseDiv) {\n            baseDiv.insertBefore(this.containerElement, baseDiv.firstChild);\n        }\n        return true;\n    }\n\n    protected getOrCreateContainer(baseDivId: string): HTMLElement {\n        let container = document.getElementById(this.id());\n        if (container === null) {\n            container = document.createElement('div');\n            container.id = baseDivId + \"_\" + this.id();\n            container.classList.add(this.containerClass());\n        }\n        return container;\n    }\n\n    protected setContainerVisible(visible: boolean) {\n        if (this.containerElement) {\n            if (visible) {\n                this.containerElement.style.visibility = 'visible';\n                this.containerElement.style.opacity = '1';\n            } else {\n                this.containerElement.style.visibility = 'hidden';\n                this.containerElement.style.opacity = '0';\n            }\n        }\n    }\n\n    /**\n     * Updates the `containerElement` under the given `context` before it becomes visible.\n     *\n     * Subclasses may override this method to, for instance, modifying the position of the\n     * `containerElement`, add or remove elements, etc. depending on the specified `root`\n     * or `contextElementIds`.\n     */\n    protected onBeforeShow(containerElement: HTMLElement, root: Readonly<SModelRoot>, ...contextElementIds: string[]): void {\n        // default: do nothing\n    }\n\n    /**\n     * Initializes the contents of this UI extension.\n     *\n     * Subclasses must implement this method to initialize the UI elements of this UI extension inside the specified `containerElement`.\n     */\n    protected abstract initializeContents(containerElement: HTMLElement): void;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from \"inversify\";\nimport { ViewerOptions } from \"./viewer-options\";\nimport { TYPES } from \"../types\";\nimport { SModelElement } from \"../model/smodel\";\n\n@injectable()\nexport class DOMHelper {\n\n    @inject(TYPES.ViewerOptions) private viewerOptions: ViewerOptions;\n\n    private getPrefix() {\n        const prefix = this.viewerOptions !== undefined && this.viewerOptions.baseDiv !== undefined ?\n            this.viewerOptions.baseDiv + \"_\" : \"\";\n        return prefix;\n    }\n\n    createUniqueDOMElementId(element: SModelElement): string {\n        return this.getPrefix() + element.id;\n    }\n\n    findSModelIdByDOMElement(element: Element): string {\n        return element.id.replace(this.getPrefix(), '');\n    }\n\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, multiInject, optional } from \"inversify\";\nimport { VNode } from \"snabbdom\";\nimport { Action, isAction } from \"sprotty-protocol/lib/actions\";\nimport { Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { IActionDispatcher } from \"../actions/action-dispatcher\";\nimport { SModelElement, SModelRoot } from \"../model/smodel\";\nimport { TYPES } from \"../types\";\nimport { DOMHelper } from \"./dom-helper\";\nimport { IVNodePostprocessor } from \"./vnode-postprocessor\";\nimport { on } from \"./vnode-utils\";\n\n@injectable()\nexport class MouseTool implements IVNodePostprocessor {\n\n    @inject(TYPES.IActionDispatcher) protected actionDispatcher: IActionDispatcher;\n    @inject(TYPES.DOMHelper) protected domHelper: DOMHelper;\n\n    constructor(@multiInject(TYPES.MouseListener) @optional() protected mouseListeners: MouseListener[] = []) { }\n\n    register(mouseListener: MouseListener) {\n        this.mouseListeners.push(mouseListener);\n    }\n\n    deregister(mouseListener: MouseListener) {\n        const index = this.mouseListeners.indexOf(mouseListener);\n        if (index >= 0)\n            this.mouseListeners.splice(index, 1);\n    }\n\n    protected getTargetElement(model: SModelRoot, event: MouseEvent): SModelElement | undefined {\n        let target = event.target as Element;\n        const index = model.index;\n        while (target) {\n            if (target.id) {\n                const element = index.getById(this.domHelper.findSModelIdByDOMElement(target));\n                if (element !== undefined)\n                    return element;\n            }\n            target = target.parentNode as Element;\n        }\n        return undefined;\n    }\n\n    protected handleEvent(methodName: MouseEventKind, model: SModelRoot, event: MouseEvent) {\n        this.focusOnMouseEvent(methodName, model);\n        const element = this.getTargetElement(model, event);\n        if (!element)\n            return;\n        const actions = this.mouseListeners\n            .map(listener => listener[methodName](element, event as WheelEvent))\n            .reduce((a, b) => a.concat(b));\n        if (actions.length > 0) {\n            event.preventDefault();\n            for (const actionOrPromise of actions) {\n                if (isAction(actionOrPromise)) {\n                    this.actionDispatcher.dispatch(actionOrPromise);\n                } else {\n                    actionOrPromise.then((action: Action) => {\n                        this.actionDispatcher.dispatch(action);\n                    });\n                }\n            }\n        }\n    }\n\n    protected focusOnMouseEvent<K extends keyof MouseListener>(methodName: K, model: SModelRoot) {\n        if (document && methodName === 'mouseDown') {\n            const domElement = document.getElementById(this.domHelper.createUniqueDOMElementId(model));\n            if (domElement !== null && typeof domElement.focus === 'function')\n                domElement.focus();\n        }\n    }\n\n    mouseOver(model: SModelRoot, event: MouseEvent) {\n        this.handleEvent('mouseOver', model, event);\n    }\n\n    mouseOut(model: SModelRoot, event: MouseEvent) {\n        this.handleEvent('mouseOut', model, event);\n    }\n\n    mouseEnter(model: SModelRoot, event: MouseEvent) {\n        this.handleEvent('mouseEnter', model, event);\n    }\n\n    mouseLeave(model: SModelRoot, event: MouseEvent) {\n        this.handleEvent('mouseLeave', model, event);\n    }\n\n    mouseDown(model: SModelRoot, event: MouseEvent) {\n        this.handleEvent('mouseDown', model, event);\n    }\n\n    mouseMove(model: SModelRoot, event: MouseEvent) {\n        this.handleEvent('mouseMove', model, event);\n    }\n\n    mouseUp(model: SModelRoot, event: MouseEvent) {\n        this.handleEvent('mouseUp', model, event);\n    }\n\n    wheel(model: SModelRoot, event: WheelEvent) {\n        this.handleEvent('wheel', model, event);\n    }\n\n    contextMenu(model: SModelRoot, event: MouseEvent) {\n        event.preventDefault();\n        this.handleEvent('contextMenu', model, event);\n    }\n\n    doubleClick(model: SModelRoot, event: MouseEvent) {\n        this.handleEvent('doubleClick', model, event);\n    }\n\n    decorate(vnode: VNode, element: SModelElement) {\n        if (element instanceof SModelRoot) {\n            on(vnode, 'mouseover', this.mouseOver.bind(this, element));\n            on(vnode, 'mouseout', this.mouseOut.bind(this, element));\n            on(vnode, 'mouseenter', this.mouseEnter.bind(this, element));\n            on(vnode, 'mouseleave', this.mouseLeave.bind(this, element));\n            on(vnode, 'mousedown', this.mouseDown.bind(this, element));\n            on(vnode, 'mouseup', this.mouseUp.bind(this, element));\n            on(vnode, 'mousemove', this.mouseMove.bind(this, element));\n            on(vnode, 'wheel', this.wheel.bind(this, element));\n            on(vnode, 'contextmenu', this.contextMenu.bind(this, element));\n            on(vnode, 'dblclick', this.doubleClick.bind(this, element));\n            on(vnode, 'dragover', (event: MouseEvent) => this.handleEvent('dragOver', element, event));\n            on(vnode, 'drop', (event: MouseEvent) => this.handleEvent('drop', element, event));\n        }\n        vnode = this.mouseListeners.reduce(\n            (n: VNode, listener: MouseListener) => listener.decorate(n, element),\n            vnode);\n        return vnode;\n    }\n\n    postUpdate() {\n    }\n}\n\n@injectable()\nexport class PopupMouseTool extends MouseTool {\n    constructor(@multiInject(TYPES.PopupMouseListener) @optional() protected override mouseListeners: MouseListener[] = []) {\n        super(mouseListeners);\n    }\n}\n\nexport type MouseEventKind =\n    'mouseOver' | 'mouseOut' | 'mouseEnter' | 'mouseLeave' | 'mouseDown' | 'mouseMove' | 'mouseUp'\n    | 'wheel' | 'doubleClick' | 'contextMenu' | 'dragOver' | 'drop';\n\n@injectable()\nexport class MouseListener {\n\n    mouseOver(target: SModelElement, event: MouseEvent): (Action | Promise<Action>)[] {\n        return [];\n    }\n\n    mouseOut(target: SModelElement, event: MouseEvent): (Action | Promise<Action>)[] {\n        return [];\n    }\n\n    mouseEnter(target: SModelElement, event: MouseEvent): (Action | Promise<Action>)[] {\n        return [];\n    }\n\n    mouseLeave(target: SModelElement, event: MouseEvent): (Action | Promise<Action>)[] {\n        return [];\n    }\n\n    mouseDown(target: SModelElement, event: MouseEvent): (Action | Promise<Action>)[] {\n        return [];\n    }\n\n    mouseMove(target: SModelElement, event: MouseEvent): (Action | Promise<Action>)[] {\n        return [];\n    }\n\n    mouseUp(target: SModelElement, event: MouseEvent): (Action | Promise<Action>)[] {\n        return [];\n    }\n\n    wheel(target: SModelElement, event: WheelEvent): (Action | Promise<Action>)[] {\n        return [];\n    }\n\n    doubleClick(target: SModelElement, event: MouseEvent): (Action | Promise<Action>)[] {\n        return [];\n    }\n\n    contextMenu(target: SModelElement, event: MouseEvent): (Action | Promise<Action>)[] {\n        return [];\n    }\n\n    dragOver(target: SModelElement, event: MouseEvent): (Action | Promise<Action>)[] {\n        return [];\n    }\n\n    drop(target: SModelElement, event: MouseEvent): (Action | Promise<Action>)[] {\n        return [];\n    }\n\n    decorate(vnode: VNode, element: SModelElement): VNode {\n        return vnode;\n    }\n}\n\n@injectable()\nexport class MousePositionTracker extends MouseListener {\n\n    protected lastPosition: Point | undefined;\n\n    override mouseMove(target: SModelElement, event: MouseEvent): (Action | Promise<Action>)[] {\n        this.lastPosition = target.root.parentToLocal({ x: event.offsetX, y: event.offsetY });\n        return [];\n    }\n\n    /**\n     * Returns the last tracked mouse cursor position relative to the diagram root or `undefined`\n     * if no mouse cursor position was ever tracked yet.\n     */\n    get lastPositionOnDiagram(): Point | undefined {\n        return this.lastPosition;\n    }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction createElement(tagName, options) {\n    return document.createElement(tagName, options);\n}\nfunction createElementNS(namespaceURI, qualifiedName, options) {\n    return document.createElementNS(namespaceURI, qualifiedName, options);\n}\nfunction createDocumentFragment() {\n    return parseFragment(document.createDocumentFragment());\n}\nfunction createTextNode(text) {\n    return document.createTextNode(text);\n}\nfunction createComment(text) {\n    return document.createComment(text);\n}\nfunction insertBefore(parentNode, newNode, referenceNode) {\n    if (isDocumentFragment$1(parentNode)) {\n        let node = parentNode;\n        while (node && isDocumentFragment$1(node)) {\n            const fragment = parseFragment(node);\n            node = fragment.parent;\n        }\n        parentNode = node !== null && node !== void 0 ? node : parentNode;\n    }\n    if (isDocumentFragment$1(newNode)) {\n        newNode = parseFragment(newNode, parentNode);\n    }\n    if (referenceNode && isDocumentFragment$1(referenceNode)) {\n        referenceNode = parseFragment(referenceNode).firstChildNode;\n    }\n    parentNode.insertBefore(newNode, referenceNode);\n}\nfunction removeChild(node, child) {\n    node.removeChild(child);\n}\nfunction appendChild(node, child) {\n    if (isDocumentFragment$1(child)) {\n        child = parseFragment(child, node);\n    }\n    node.appendChild(child);\n}\nfunction parentNode(node) {\n    if (isDocumentFragment$1(node)) {\n        while (node && isDocumentFragment$1(node)) {\n            const fragment = parseFragment(node);\n            node = fragment.parent;\n        }\n        return node !== null && node !== void 0 ? node : null;\n    }\n    return node.parentNode;\n}\nfunction nextSibling(node) {\n    var _a;\n    if (isDocumentFragment$1(node)) {\n        const fragment = parseFragment(node);\n        const parent = parentNode(fragment);\n        if (parent && fragment.lastChildNode) {\n            const children = Array.from(parent.childNodes);\n            const index = children.indexOf(fragment.lastChildNode);\n            return (_a = children[index + 1]) !== null && _a !== void 0 ? _a : null;\n        }\n        return null;\n    }\n    return node.nextSibling;\n}\nfunction tagName(elm) {\n    return elm.tagName;\n}\nfunction setTextContent(node, text) {\n    node.textContent = text;\n}\nfunction getTextContent(node) {\n    return node.textContent;\n}\nfunction isElement$1(node) {\n    return node.nodeType === 1;\n}\nfunction isText(node) {\n    return node.nodeType === 3;\n}\nfunction isComment(node) {\n    return node.nodeType === 8;\n}\nfunction isDocumentFragment$1(node) {\n    return node.nodeType === 11;\n}\nfunction parseFragment(fragmentNode, parentNode) {\n    var _a, _b, _c;\n    const fragment = fragmentNode;\n    (_a = fragment.parent) !== null && _a !== void 0 ? _a : (fragment.parent = parentNode !== null && parentNode !== void 0 ? parentNode : null);\n    (_b = fragment.firstChildNode) !== null && _b !== void 0 ? _b : (fragment.firstChildNode = fragmentNode.firstChild);\n    (_c = fragment.lastChildNode) !== null && _c !== void 0 ? _c : (fragment.lastChildNode = fragmentNode.lastChild);\n    return fragment;\n}\nconst htmlDomApi = {\n    createElement,\n    createElementNS,\n    createTextNode,\n    createDocumentFragment,\n    createComment,\n    insertBefore,\n    removeChild,\n    appendChild,\n    parentNode,\n    nextSibling,\n    tagName,\n    setTextContent,\n    getTextContent,\n    isElement: isElement$1,\n    isText,\n    isComment,\n    isDocumentFragment: isDocumentFragment$1,\n};\n\nfunction vnode(sel, data, children, text, elm) {\n    const key = data === undefined ? undefined : data.key;\n    return { sel, data, children, text, elm, key };\n}\n\nconst array = Array.isArray;\nfunction primitive(s) {\n    return (typeof s === \"string\" ||\n        typeof s === \"number\" ||\n        s instanceof String ||\n        s instanceof Number);\n}\n\nfunction isUndef(s) {\n    return s === undefined;\n}\nfunction isDef(s) {\n    return s !== undefined;\n}\nconst emptyNode = vnode(\"\", {}, [], undefined, undefined);\nfunction sameVnode(vnode1, vnode2) {\n    var _a, _b;\n    const isSameKey = vnode1.key === vnode2.key;\n    const isSameIs = ((_a = vnode1.data) === null || _a === void 0 ? void 0 : _a.is) === ((_b = vnode2.data) === null || _b === void 0 ? void 0 : _b.is);\n    const isSameSel = vnode1.sel === vnode2.sel;\n    const isSameTextOrFragment = !vnode1.sel && vnode1.sel === vnode2.sel\n        ? typeof vnode1.text === typeof vnode2.text\n        : true;\n    return isSameSel && isSameKey && isSameIs && isSameTextOrFragment;\n}\n/**\n * @todo Remove this function when the document fragment is considered stable.\n */\nfunction documentFragmentIsNotSupported() {\n    throw new Error(\"The document fragment is not supported on this platform.\");\n}\nfunction isElement(api, vnode) {\n    return api.isElement(vnode);\n}\nfunction isDocumentFragment(api, vnode) {\n    return api.isDocumentFragment(vnode);\n}\nfunction createKeyToOldIdx(children, beginIdx, endIdx) {\n    var _a;\n    const map = {};\n    for (let i = beginIdx; i <= endIdx; ++i) {\n        const key = (_a = children[i]) === null || _a === void 0 ? void 0 : _a.key;\n        if (key !== undefined) {\n            map[key] = i;\n        }\n    }\n    return map;\n}\nconst hooks = [\n    \"create\",\n    \"update\",\n    \"remove\",\n    \"destroy\",\n    \"pre\",\n    \"post\",\n];\nfunction init$1(modules, domApi, options) {\n    const cbs = {\n        create: [],\n        update: [],\n        remove: [],\n        destroy: [],\n        pre: [],\n        post: [],\n    };\n    const api = domApi !== undefined ? domApi : htmlDomApi;\n    for (const hook of hooks) {\n        for (const module of modules) {\n            const currentHook = module[hook];\n            if (currentHook !== undefined) {\n                cbs[hook].push(currentHook);\n            }\n        }\n    }\n    function emptyNodeAt(elm) {\n        const id = elm.id ? \"#\" + elm.id : \"\";\n        // elm.className doesn't return a string when elm is an SVG element inside a shadowRoot.\n        // https://stackoverflow.com/questions/29454340/detecting-classname-of-svganimatedstring\n        const classes = elm.getAttribute(\"class\");\n        const c = classes ? \".\" + classes.split(\" \").join(\".\") : \"\";\n        return vnode(api.tagName(elm).toLowerCase() + id + c, {}, [], undefined, elm);\n    }\n    function emptyDocumentFragmentAt(frag) {\n        return vnode(undefined, {}, [], undefined, frag);\n    }\n    function createRmCb(childElm, listeners) {\n        return function rmCb() {\n            if (--listeners === 0) {\n                const parent = api.parentNode(childElm);\n                api.removeChild(parent, childElm);\n            }\n        };\n    }\n    function createElm(vnode, insertedVnodeQueue) {\n        var _a, _b, _c, _d;\n        let i;\n        let data = vnode.data;\n        if (data !== undefined) {\n            const init = (_a = data.hook) === null || _a === void 0 ? void 0 : _a.init;\n            if (isDef(init)) {\n                init(vnode);\n                data = vnode.data;\n            }\n        }\n        const children = vnode.children;\n        const sel = vnode.sel;\n        if (sel === \"!\") {\n            if (isUndef(vnode.text)) {\n                vnode.text = \"\";\n            }\n            vnode.elm = api.createComment(vnode.text);\n        }\n        else if (sel !== undefined) {\n            // Parse selector\n            const hashIdx = sel.indexOf(\"#\");\n            const dotIdx = sel.indexOf(\".\", hashIdx);\n            const hash = hashIdx > 0 ? hashIdx : sel.length;\n            const dot = dotIdx > 0 ? dotIdx : sel.length;\n            const tag = hashIdx !== -1 || dotIdx !== -1\n                ? sel.slice(0, Math.min(hash, dot))\n                : sel;\n            const elm = (vnode.elm =\n                isDef(data) && isDef((i = data.ns))\n                    ? api.createElementNS(i, tag, data)\n                    : api.createElement(tag, data));\n            if (hash < dot)\n                elm.setAttribute(\"id\", sel.slice(hash + 1, dot));\n            if (dotIdx > 0)\n                elm.setAttribute(\"class\", sel.slice(dot + 1).replace(/\\./g, \" \"));\n            for (i = 0; i < cbs.create.length; ++i)\n                cbs.create[i](emptyNode, vnode);\n            if (array(children)) {\n                for (i = 0; i < children.length; ++i) {\n                    const ch = children[i];\n                    if (ch != null) {\n                        api.appendChild(elm, createElm(ch, insertedVnodeQueue));\n                    }\n                }\n            }\n            else if (primitive(vnode.text)) {\n                api.appendChild(elm, api.createTextNode(vnode.text));\n            }\n            const hook = vnode.data.hook;\n            if (isDef(hook)) {\n                (_b = hook.create) === null || _b === void 0 ? void 0 : _b.call(hook, emptyNode, vnode);\n                if (hook.insert) {\n                    insertedVnodeQueue.push(vnode);\n                }\n            }\n        }\n        else if (((_c = options === null || options === void 0 ? void 0 : options.experimental) === null || _c === void 0 ? void 0 : _c.fragments) && vnode.children) {\n            vnode.elm = ((_d = api.createDocumentFragment) !== null && _d !== void 0 ? _d : documentFragmentIsNotSupported)();\n            for (i = 0; i < cbs.create.length; ++i)\n                cbs.create[i](emptyNode, vnode);\n            for (i = 0; i < vnode.children.length; ++i) {\n                const ch = vnode.children[i];\n                if (ch != null) {\n                    api.appendChild(vnode.elm, createElm(ch, insertedVnodeQueue));\n                }\n            }\n        }\n        else {\n            vnode.elm = api.createTextNode(vnode.text);\n        }\n        return vnode.elm;\n    }\n    function addVnodes(parentElm, before, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n        for (; startIdx <= endIdx; ++startIdx) {\n            const ch = vnodes[startIdx];\n            if (ch != null) {\n                api.insertBefore(parentElm, createElm(ch, insertedVnodeQueue), before);\n            }\n        }\n    }\n    function invokeDestroyHook(vnode) {\n        var _a, _b;\n        const data = vnode.data;\n        if (data !== undefined) {\n            (_b = (_a = data === null || data === void 0 ? void 0 : data.hook) === null || _a === void 0 ? void 0 : _a.destroy) === null || _b === void 0 ? void 0 : _b.call(_a, vnode);\n            for (let i = 0; i < cbs.destroy.length; ++i)\n                cbs.destroy[i](vnode);\n            if (vnode.children !== undefined) {\n                for (let j = 0; j < vnode.children.length; ++j) {\n                    const child = vnode.children[j];\n                    if (child != null && typeof child !== \"string\") {\n                        invokeDestroyHook(child);\n                    }\n                }\n            }\n        }\n    }\n    function removeVnodes(parentElm, vnodes, startIdx, endIdx) {\n        var _a, _b;\n        for (; startIdx <= endIdx; ++startIdx) {\n            let listeners;\n            let rm;\n            const ch = vnodes[startIdx];\n            if (ch != null) {\n                if (isDef(ch.sel)) {\n                    invokeDestroyHook(ch);\n                    listeners = cbs.remove.length + 1;\n                    rm = createRmCb(ch.elm, listeners);\n                    for (let i = 0; i < cbs.remove.length; ++i)\n                        cbs.remove[i](ch, rm);\n                    const removeHook = (_b = (_a = ch === null || ch === void 0 ? void 0 : ch.data) === null || _a === void 0 ? void 0 : _a.hook) === null || _b === void 0 ? void 0 : _b.remove;\n                    if (isDef(removeHook)) {\n                        removeHook(ch, rm);\n                    }\n                    else {\n                        rm();\n                    }\n                }\n                else if (ch.children) {\n                    // Fragment node\n                    invokeDestroyHook(ch);\n                    removeVnodes(parentElm, ch.children, 0, ch.children.length - 1);\n                }\n                else {\n                    // Text node\n                    api.removeChild(parentElm, ch.elm);\n                }\n            }\n        }\n    }\n    function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue) {\n        let oldStartIdx = 0;\n        let newStartIdx = 0;\n        let oldEndIdx = oldCh.length - 1;\n        let oldStartVnode = oldCh[0];\n        let oldEndVnode = oldCh[oldEndIdx];\n        let newEndIdx = newCh.length - 1;\n        let newStartVnode = newCh[0];\n        let newEndVnode = newCh[newEndIdx];\n        let oldKeyToIdx;\n        let idxInOld;\n        let elmToMove;\n        let before;\n        while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n            if (oldStartVnode == null) {\n                oldStartVnode = oldCh[++oldStartIdx]; // Vnode might have been moved left\n            }\n            else if (oldEndVnode == null) {\n                oldEndVnode = oldCh[--oldEndIdx];\n            }\n            else if (newStartVnode == null) {\n                newStartVnode = newCh[++newStartIdx];\n            }\n            else if (newEndVnode == null) {\n                newEndVnode = newCh[--newEndIdx];\n            }\n            else if (sameVnode(oldStartVnode, newStartVnode)) {\n                patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n                oldStartVnode = oldCh[++oldStartIdx];\n                newStartVnode = newCh[++newStartIdx];\n            }\n            else if (sameVnode(oldEndVnode, newEndVnode)) {\n                patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n                oldEndVnode = oldCh[--oldEndIdx];\n                newEndVnode = newCh[--newEndIdx];\n            }\n            else if (sameVnode(oldStartVnode, newEndVnode)) {\n                // Vnode moved right\n                patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n                api.insertBefore(parentElm, oldStartVnode.elm, api.nextSibling(oldEndVnode.elm));\n                oldStartVnode = oldCh[++oldStartIdx];\n                newEndVnode = newCh[--newEndIdx];\n            }\n            else if (sameVnode(oldEndVnode, newStartVnode)) {\n                // Vnode moved left\n                patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n                api.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n                oldEndVnode = oldCh[--oldEndIdx];\n                newStartVnode = newCh[++newStartIdx];\n            }\n            else {\n                if (oldKeyToIdx === undefined) {\n                    oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n                }\n                idxInOld = oldKeyToIdx[newStartVnode.key];\n                if (isUndef(idxInOld)) {\n                    // New element\n                    api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);\n                }\n                else {\n                    elmToMove = oldCh[idxInOld];\n                    if (elmToMove.sel !== newStartVnode.sel) {\n                        api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);\n                    }\n                    else {\n                        patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n                        oldCh[idxInOld] = undefined;\n                        api.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);\n                    }\n                }\n                newStartVnode = newCh[++newStartIdx];\n            }\n        }\n        if (newStartIdx <= newEndIdx) {\n            before = newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].elm;\n            addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n        }\n        if (oldStartIdx <= oldEndIdx) {\n            removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n        }\n    }\n    function patchVnode(oldVnode, vnode, insertedVnodeQueue) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        const hook = (_a = vnode.data) === null || _a === void 0 ? void 0 : _a.hook;\n        (_b = hook === null || hook === void 0 ? void 0 : hook.prepatch) === null || _b === void 0 ? void 0 : _b.call(hook, oldVnode, vnode);\n        const elm = (vnode.elm = oldVnode.elm);\n        if (oldVnode === vnode)\n            return;\n        if (vnode.data !== undefined ||\n            (isDef(vnode.text) && vnode.text !== oldVnode.text)) {\n            (_c = vnode.data) !== null && _c !== void 0 ? _c : (vnode.data = {});\n            (_d = oldVnode.data) !== null && _d !== void 0 ? _d : (oldVnode.data = {});\n            for (let i = 0; i < cbs.update.length; ++i)\n                cbs.update[i](oldVnode, vnode);\n            (_g = (_f = (_e = vnode.data) === null || _e === void 0 ? void 0 : _e.hook) === null || _f === void 0 ? void 0 : _f.update) === null || _g === void 0 ? void 0 : _g.call(_f, oldVnode, vnode);\n        }\n        const oldCh = oldVnode.children;\n        const ch = vnode.children;\n        if (isUndef(vnode.text)) {\n            if (isDef(oldCh) && isDef(ch)) {\n                if (oldCh !== ch)\n                    updateChildren(elm, oldCh, ch, insertedVnodeQueue);\n            }\n            else if (isDef(ch)) {\n                if (isDef(oldVnode.text))\n                    api.setTextContent(elm, \"\");\n                addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n            }\n            else if (isDef(oldCh)) {\n                removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n            }\n            else if (isDef(oldVnode.text)) {\n                api.setTextContent(elm, \"\");\n            }\n        }\n        else if (oldVnode.text !== vnode.text) {\n            if (isDef(oldCh)) {\n                removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n            }\n            api.setTextContent(elm, vnode.text);\n        }\n        (_h = hook === null || hook === void 0 ? void 0 : hook.postpatch) === null || _h === void 0 ? void 0 : _h.call(hook, oldVnode, vnode);\n    }\n    return function patch(oldVnode, vnode) {\n        let i, elm, parent;\n        const insertedVnodeQueue = [];\n        for (i = 0; i < cbs.pre.length; ++i)\n            cbs.pre[i]();\n        if (isElement(api, oldVnode)) {\n            oldVnode = emptyNodeAt(oldVnode);\n        }\n        else if (isDocumentFragment(api, oldVnode)) {\n            oldVnode = emptyDocumentFragmentAt(oldVnode);\n        }\n        if (sameVnode(oldVnode, vnode)) {\n            patchVnode(oldVnode, vnode, insertedVnodeQueue);\n        }\n        else {\n            elm = oldVnode.elm;\n            parent = api.parentNode(elm);\n            createElm(vnode, insertedVnodeQueue);\n            if (parent !== null) {\n                api.insertBefore(parent, vnode.elm, api.nextSibling(elm));\n                removeVnodes(parent, [oldVnode], 0, 0);\n            }\n        }\n        for (i = 0; i < insertedVnodeQueue.length; ++i) {\n            insertedVnodeQueue[i].data.hook.insert(insertedVnodeQueue[i]);\n        }\n        for (i = 0; i < cbs.post.length; ++i)\n            cbs.post[i]();\n        return vnode;\n    };\n}\n\nfunction addNS(data, children, sel) {\n    data.ns = \"http://www.w3.org/2000/svg\";\n    if (sel !== \"foreignObject\" && children !== undefined) {\n        for (let i = 0; i < children.length; ++i) {\n            const child = children[i];\n            if (typeof child === \"string\")\n                continue;\n            const childData = child.data;\n            if (childData !== undefined) {\n                addNS(childData, child.children, child.sel);\n            }\n        }\n    }\n}\nfunction h(sel, b, c) {\n    let data = {};\n    let children;\n    let text;\n    let i;\n    if (c !== undefined) {\n        if (b !== null) {\n            data = b;\n        }\n        if (array(c)) {\n            children = c;\n        }\n        else if (primitive(c)) {\n            text = c.toString();\n        }\n        else if (c && c.sel) {\n            children = [c];\n        }\n    }\n    else if (b !== undefined && b !== null) {\n        if (array(b)) {\n            children = b;\n        }\n        else if (primitive(b)) {\n            text = b.toString();\n        }\n        else if (b && b.sel) {\n            children = [b];\n        }\n        else {\n            data = b;\n        }\n    }\n    if (children !== undefined) {\n        for (i = 0; i < children.length; ++i) {\n            if (primitive(children[i]))\n                children[i] = vnode(undefined, undefined, undefined, children[i], undefined);\n        }\n    }\n    if (sel[0] === \"s\" &&\n        sel[1] === \"v\" &&\n        sel[2] === \"g\" &&\n        (sel.length === 3 || sel[3] === \".\" || sel[3] === \"#\")) {\n        addNS(data, children, sel);\n    }\n    return vnode(sel, data, children, text, undefined);\n}\n/**\n * @experimental\n */\nfunction fragment(children) {\n    let c;\n    let text;\n    if (array(children)) {\n        c = children;\n    }\n    else if (primitive(c)) {\n        text = children;\n    }\n    else if (c && c.sel) {\n        c = [children];\n    }\n    if (c !== undefined) {\n        for (let i = 0; i < c.length; ++i) {\n            if (primitive(c[i]))\n                c[i] = vnode(undefined, undefined, undefined, c[i], undefined);\n        }\n    }\n    return vnode(undefined, {}, c, text, undefined);\n}\n\nfunction copyToThunk(vnode, thunk) {\n    var _a;\n    const ns = (_a = thunk.data) === null || _a === void 0 ? void 0 : _a.ns;\n    vnode.data.fn = thunk.data.fn;\n    vnode.data.args = thunk.data.args;\n    thunk.data = vnode.data;\n    thunk.children = vnode.children;\n    thunk.text = vnode.text;\n    thunk.elm = vnode.elm;\n    if (ns)\n        addNS(thunk.data, thunk.children, thunk.sel);\n}\nfunction init(thunk) {\n    const cur = thunk.data;\n    const vnode = cur.fn(...cur.args);\n    copyToThunk(vnode, thunk);\n}\nfunction prepatch(oldVnode, thunk) {\n    let i;\n    const old = oldVnode.data;\n    const cur = thunk.data;\n    const oldArgs = old.args;\n    const args = cur.args;\n    if (old.fn !== cur.fn || oldArgs.length !== args.length) {\n        copyToThunk(cur.fn(...args), thunk);\n        return;\n    }\n    for (i = 0; i < args.length; ++i) {\n        if (oldArgs[i] !== args[i]) {\n            copyToThunk(cur.fn(...args), thunk);\n            return;\n        }\n    }\n    copyToThunk(oldVnode, thunk);\n}\nconst thunk = function thunk(sel, key, fn, args) {\n    if (args === undefined) {\n        args = fn;\n        fn = key;\n        key = undefined;\n    }\n    return h(sel, {\n        key: key,\n        hook: { init, prepatch },\n        fn: fn,\n        args: args,\n    });\n};\n\nfunction pre(vnode, newVnode) {\n    const attachData = vnode.data.attachData;\n    // Copy created placeholder and real element from old vnode\n    newVnode.data.attachData.placeholder = attachData.placeholder;\n    newVnode.data.attachData.real = attachData.real;\n    // Mount real element in vnode so the patch process operates on it\n    vnode.elm = vnode.data.attachData.real;\n}\nfunction post(_, vnode) {\n    // Mount dummy placeholder in vnode so potential reorders use it\n    vnode.elm = vnode.data.attachData.placeholder;\n}\nfunction destroy(vnode) {\n    // Remove placeholder\n    if (vnode.elm !== undefined) {\n        vnode.elm.parentNode.removeChild(vnode.elm);\n    }\n    // Remove real element from where it was inserted\n    vnode.elm = vnode.data.attachData.real;\n}\nfunction create(_, vnode) {\n    const real = vnode.elm;\n    const attachData = vnode.data.attachData;\n    const placeholder = document.createElement(\"span\");\n    // Replace actual element with dummy placeholder\n    // Snabbdom will then insert placeholder instead\n    vnode.elm = placeholder;\n    attachData.target.appendChild(real);\n    attachData.real = real;\n    attachData.placeholder = placeholder;\n}\nfunction attachTo(target, vnode) {\n    if (vnode.data === undefined)\n        vnode.data = {};\n    if (vnode.data.hook === undefined)\n        vnode.data.hook = {};\n    const data = vnode.data;\n    const hook = vnode.data.hook;\n    data.attachData = { target: target, placeholder: undefined, real: undefined };\n    hook.create = create;\n    hook.prepatch = pre;\n    hook.postpatch = post;\n    hook.destroy = destroy;\n    return vnode;\n}\n\nfunction toVNode(node, domApi) {\n    const api = domApi !== undefined ? domApi : htmlDomApi;\n    let text;\n    if (api.isElement(node)) {\n        const id = node.id ? \"#\" + node.id : \"\";\n        const cn = node.getAttribute(\"class\");\n        const c = cn ? \".\" + cn.split(\" \").join(\".\") : \"\";\n        const sel = api.tagName(node).toLowerCase() + id + c;\n        const attrs = {};\n        const dataset = {};\n        const data = {};\n        const children = [];\n        let name;\n        let i, n;\n        const elmAttrs = node.attributes;\n        const elmChildren = node.childNodes;\n        for (i = 0, n = elmAttrs.length; i < n; i++) {\n            name = elmAttrs[i].nodeName;\n            if (name[0] === \"d\" &&\n                name[1] === \"a\" &&\n                name[2] === \"t\" &&\n                name[3] === \"a\" &&\n                name[4] === \"-\") {\n                dataset[name.slice(5)] = elmAttrs[i].nodeValue || \"\";\n            }\n            else if (name !== \"id\" && name !== \"class\") {\n                attrs[name] = elmAttrs[i].nodeValue;\n            }\n        }\n        for (i = 0, n = elmChildren.length; i < n; i++) {\n            children.push(toVNode(elmChildren[i], domApi));\n        }\n        if (Object.keys(attrs).length > 0)\n            data.attrs = attrs;\n        if (Object.keys(dataset).length > 0)\n            data.dataset = dataset;\n        if (sel[0] === \"s\" &&\n            sel[1] === \"v\" &&\n            sel[2] === \"g\" &&\n            (sel.length === 3 || sel[3] === \".\" || sel[3] === \"#\")) {\n            addNS(data, children, sel);\n        }\n        return vnode(sel, data, children, undefined, node);\n    }\n    else if (api.isText(node)) {\n        text = api.getTextContent(node);\n        return vnode(undefined, undefined, undefined, text, node);\n    }\n    else if (api.isComment(node)) {\n        text = api.getTextContent(node);\n        return vnode(\"!\", {}, [], text, node);\n    }\n    else {\n        return vnode(\"\", {}, [], undefined, node);\n    }\n}\n\nconst xlinkNS = \"http://www.w3.org/1999/xlink\";\nconst xmlNS = \"http://www.w3.org/XML/1998/namespace\";\nconst colonChar = 58;\nconst xChar = 120;\nfunction updateAttrs(oldVnode, vnode) {\n    let key;\n    const elm = vnode.elm;\n    let oldAttrs = oldVnode.data.attrs;\n    let attrs = vnode.data.attrs;\n    if (!oldAttrs && !attrs)\n        return;\n    if (oldAttrs === attrs)\n        return;\n    oldAttrs = oldAttrs || {};\n    attrs = attrs || {};\n    // update modified attributes, add new attributes\n    for (key in attrs) {\n        const cur = attrs[key];\n        const old = oldAttrs[key];\n        if (old !== cur) {\n            if (cur === true) {\n                elm.setAttribute(key, \"\");\n            }\n            else if (cur === false) {\n                elm.removeAttribute(key);\n            }\n            else {\n                if (key.charCodeAt(0) !== xChar) {\n                    elm.setAttribute(key, cur);\n                }\n                else if (key.charCodeAt(3) === colonChar) {\n                    // Assume xml namespace\n                    elm.setAttributeNS(xmlNS, key, cur);\n                }\n                else if (key.charCodeAt(5) === colonChar) {\n                    // Assume xlink namespace\n                    elm.setAttributeNS(xlinkNS, key, cur);\n                }\n                else {\n                    elm.setAttribute(key, cur);\n                }\n            }\n        }\n    }\n    // remove removed attributes\n    // use `in` operator since the previous `for` iteration uses it (.i.e. add even attributes with undefined value)\n    // the other option is to remove all attributes with value == undefined\n    for (key in oldAttrs) {\n        if (!(key in attrs)) {\n            elm.removeAttribute(key);\n        }\n    }\n}\nconst attributesModule = {\n    create: updateAttrs,\n    update: updateAttrs,\n};\n\nfunction updateClass(oldVnode, vnode) {\n    let cur;\n    let name;\n    const elm = vnode.elm;\n    let oldClass = oldVnode.data.class;\n    let klass = vnode.data.class;\n    if (!oldClass && !klass)\n        return;\n    if (oldClass === klass)\n        return;\n    oldClass = oldClass || {};\n    klass = klass || {};\n    for (name in oldClass) {\n        if (oldClass[name] && !Object.prototype.hasOwnProperty.call(klass, name)) {\n            // was `true` and now not provided\n            elm.classList.remove(name);\n        }\n    }\n    for (name in klass) {\n        cur = klass[name];\n        if (cur !== oldClass[name]) {\n            elm.classList[cur ? \"add\" : \"remove\"](name);\n        }\n    }\n}\nconst classModule = { create: updateClass, update: updateClass };\n\nconst CAPS_REGEX = /[A-Z]/g;\nfunction updateDataset(oldVnode, vnode) {\n    const elm = vnode.elm;\n    let oldDataset = oldVnode.data.dataset;\n    let dataset = vnode.data.dataset;\n    let key;\n    if (!oldDataset && !dataset)\n        return;\n    if (oldDataset === dataset)\n        return;\n    oldDataset = oldDataset || {};\n    dataset = dataset || {};\n    const d = elm.dataset;\n    for (key in oldDataset) {\n        if (!dataset[key]) {\n            if (d) {\n                if (key in d) {\n                    delete d[key];\n                }\n            }\n            else {\n                elm.removeAttribute(\"data-\" + key.replace(CAPS_REGEX, \"-$&\").toLowerCase());\n            }\n        }\n    }\n    for (key in dataset) {\n        if (oldDataset[key] !== dataset[key]) {\n            if (d) {\n                d[key] = dataset[key];\n            }\n            else {\n                elm.setAttribute(\"data-\" + key.replace(CAPS_REGEX, \"-$&\").toLowerCase(), dataset[key]);\n            }\n        }\n    }\n}\nconst datasetModule = {\n    create: updateDataset,\n    update: updateDataset,\n};\n\nfunction invokeHandler(handler, vnode, event) {\n    if (typeof handler === \"function\") {\n        // call function handler\n        handler.call(vnode, event, vnode);\n    }\n    else if (typeof handler === \"object\") {\n        // call multiple handlers\n        for (let i = 0; i < handler.length; i++) {\n            invokeHandler(handler[i], vnode, event);\n        }\n    }\n}\nfunction handleEvent(event, vnode) {\n    const name = event.type;\n    const on = vnode.data.on;\n    // call event handler(s) if exists\n    if (on && on[name]) {\n        invokeHandler(on[name], vnode, event);\n    }\n}\nfunction createListener() {\n    return function handler(event) {\n        handleEvent(event, handler.vnode);\n    };\n}\nfunction updateEventListeners(oldVnode, vnode) {\n    const oldOn = oldVnode.data.on;\n    const oldListener = oldVnode.listener;\n    const oldElm = oldVnode.elm;\n    const on = vnode && vnode.data.on;\n    const elm = (vnode && vnode.elm);\n    let name;\n    // optimization for reused immutable handlers\n    if (oldOn === on) {\n        return;\n    }\n    // remove existing listeners which no longer used\n    if (oldOn && oldListener) {\n        // if element changed or deleted we remove all existing listeners unconditionally\n        if (!on) {\n            for (name in oldOn) {\n                // remove listener if element was changed or existing listeners removed\n                oldElm.removeEventListener(name, oldListener, false);\n            }\n        }\n        else {\n            for (name in oldOn) {\n                // remove listener if existing listener removed\n                if (!on[name]) {\n                    oldElm.removeEventListener(name, oldListener, false);\n                }\n            }\n        }\n    }\n    // add new listeners which has not already attached\n    if (on) {\n        // reuse existing listener or create new\n        const listener = (vnode.listener =\n            oldVnode.listener || createListener());\n        // update vnode for listener\n        listener.vnode = vnode;\n        // if element changed or added we add all needed listeners unconditionally\n        if (!oldOn) {\n            for (name in on) {\n                // add listener if element was changed or new listeners added\n                elm.addEventListener(name, listener, false);\n            }\n        }\n        else {\n            for (name in on) {\n                // add listener if new listener added\n                if (!oldOn[name]) {\n                    elm.addEventListener(name, listener, false);\n                }\n            }\n        }\n    }\n}\nconst eventListenersModule = {\n    create: updateEventListeners,\n    update: updateEventListeners,\n    destroy: updateEventListeners,\n};\n\nfunction updateProps(oldVnode, vnode) {\n    let key;\n    let cur;\n    let old;\n    const elm = vnode.elm;\n    let oldProps = oldVnode.data.props;\n    let props = vnode.data.props;\n    if (!oldProps && !props)\n        return;\n    if (oldProps === props)\n        return;\n    oldProps = oldProps || {};\n    props = props || {};\n    for (key in props) {\n        cur = props[key];\n        old = oldProps[key];\n        if (old !== cur && (key !== \"value\" || elm[key] !== cur)) {\n            elm[key] = cur;\n        }\n    }\n}\nconst propsModule = { create: updateProps, update: updateProps };\n\n// Bindig `requestAnimationFrame` like this fixes a bug in IE/Edge. See #360 and #409.\nconst raf = (typeof window !== \"undefined\" &&\n    window.requestAnimationFrame.bind(window)) ||\n    setTimeout;\nconst nextFrame = function (fn) {\n    raf(function () {\n        raf(fn);\n    });\n};\nlet reflowForced = false;\nfunction setNextFrame(obj, prop, val) {\n    nextFrame(function () {\n        obj[prop] = val;\n    });\n}\nfunction updateStyle(oldVnode, vnode) {\n    let cur;\n    let name;\n    const elm = vnode.elm;\n    let oldStyle = oldVnode.data.style;\n    let style = vnode.data.style;\n    if (!oldStyle && !style)\n        return;\n    if (oldStyle === style)\n        return;\n    oldStyle = oldStyle || {};\n    style = style || {};\n    const oldHasDel = \"delayed\" in oldStyle;\n    for (name in oldStyle) {\n        if (!style[name]) {\n            if (name[0] === \"-\" && name[1] === \"-\") {\n                elm.style.removeProperty(name);\n            }\n            else {\n                elm.style[name] = \"\";\n            }\n        }\n    }\n    for (name in style) {\n        cur = style[name];\n        if (name === \"delayed\" && style.delayed) {\n            for (const name2 in style.delayed) {\n                cur = style.delayed[name2];\n                if (!oldHasDel || cur !== oldStyle.delayed[name2]) {\n                    setNextFrame(elm.style, name2, cur);\n                }\n            }\n        }\n        else if (name !== \"remove\" && cur !== oldStyle[name]) {\n            if (name[0] === \"-\" && name[1] === \"-\") {\n                elm.style.setProperty(name, cur);\n            }\n            else {\n                elm.style[name] = cur;\n            }\n        }\n    }\n}\nfunction applyDestroyStyle(vnode) {\n    let style;\n    let name;\n    const elm = vnode.elm;\n    const s = vnode.data.style;\n    if (!s || !(style = s.destroy))\n        return;\n    for (name in style) {\n        elm.style[name] = style[name];\n    }\n}\nfunction applyRemoveStyle(vnode, rm) {\n    const s = vnode.data.style;\n    if (!s || !s.remove) {\n        rm();\n        return;\n    }\n    if (!reflowForced) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        vnode.elm.offsetLeft;\n        reflowForced = true;\n    }\n    let name;\n    const elm = vnode.elm;\n    let i = 0;\n    const style = s.remove;\n    let amount = 0;\n    const applied = [];\n    for (name in style) {\n        applied.push(name);\n        elm.style[name] = style[name];\n    }\n    const compStyle = getComputedStyle(elm);\n    const props = compStyle[\"transition-property\"].split(\", \");\n    for (; i < props.length; ++i) {\n        if (applied.indexOf(props[i]) !== -1)\n            amount++;\n    }\n    elm.addEventListener(\"transitionend\", function (ev) {\n        if (ev.target === elm)\n            --amount;\n        if (amount === 0)\n            rm();\n    });\n}\nfunction forceReflow() {\n    reflowForced = false;\n}\nconst styleModule = {\n    pre: forceReflow,\n    create: updateStyle,\n    update: updateStyle,\n    destroy: applyDestroyStyle,\n    remove: applyRemoveStyle,\n};\n\n/* eslint-disable @typescript-eslint/no-namespace, import/export */\nfunction Fragment(data, ...children) {\n    const flatChildren = flattenAndFilter(children, []);\n    if (flatChildren.length === 1 &&\n        !flatChildren[0].sel &&\n        flatChildren[0].text) {\n        // only child is a simple text node, pass as text for a simpler vtree\n        return vnode(undefined, undefined, undefined, flatChildren[0].text, undefined);\n    }\n    else {\n        return vnode(undefined, data !== null && data !== void 0 ? data : {}, flatChildren, undefined, undefined);\n    }\n}\nfunction flattenAndFilter(children, flattened) {\n    for (const child of children) {\n        // filter out falsey children, except 0 since zero can be a valid value e.g inside a chart\n        if (child !== undefined &&\n            child !== null &&\n            child !== false &&\n            child !== \"\") {\n            if (Array.isArray(child)) {\n                flattenAndFilter(child, flattened);\n            }\n            else if (typeof child === \"string\" ||\n                typeof child === \"number\" ||\n                typeof child === \"boolean\") {\n                flattened.push(vnode(undefined, undefined, undefined, String(child), undefined));\n            }\n            else {\n                flattened.push(child);\n            }\n        }\n    }\n    return flattened;\n}\n/**\n * jsx/tsx compatible factory function\n * see: https://www.typescriptlang.org/docs/handbook/jsx.html#factory-functions\n */\nfunction jsx(tag, data, ...children) {\n    const flatChildren = flattenAndFilter(children, []);\n    if (typeof tag === \"function\") {\n        // tag is a function component\n        return tag(data, flatChildren);\n    }\n    else {\n        if (flatChildren.length === 1 &&\n            !flatChildren[0].sel &&\n            flatChildren[0].text) {\n            // only child is a simple text node, pass as text for a simpler vtree\n            return h(tag, data, flatChildren[0].text);\n        }\n        else {\n            return h(tag, data, flatChildren);\n        }\n    }\n}\n(function (jsx) {\n})(jsx || (jsx = {}));\n\nexports.Fragment = Fragment;\nexports.array = array;\nexports.attachTo = attachTo;\nexports.attributesModule = attributesModule;\nexports.classModule = classModule;\nexports.datasetModule = datasetModule;\nexports.eventListenersModule = eventListenersModule;\nexports.fragment = fragment;\nexports.h = h;\nexports.htmlDomApi = htmlDomApi;\nexports.init = init$1;\nexports.jsx = jsx;\nexports.primitive = primitive;\nexports.propsModule = propsModule;\nexports.styleModule = styleModule;\nexports.thunk = thunk;\nexports.toVNode = toVNode;\nexports.vnode = vnode;\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { h, VNode, VNodeData } from \"snabbdom\";\nimport { SModelElement } from \"../model/smodel\";\nimport { RenderingContext, IView } from \"./view\";\nimport { injectable } from \"inversify\";\n\n/**\n * An view that avoids calculation and patching of VNodes unless some model properties have changed.\n * Based on snabbdom's thunks.\n */\n@injectable()\nexport abstract class ThunkView implements IView {\n\n    /**\n     * Returns the array of values that are watched for changes.\n     * If they haven't change since the last rendering, the VNode is neither recalculated nor patched.\n     */\n    abstract watchedArgs(model: SModelElement): any[];\n\n    /**\n     * Returns the selector of the VNode root, i.e. it's element type.\n     */\n    abstract selector(model: SModelElement): string;\n\n    /**\n     * Calculate the VNode from the input data. Only called if the watched properties change.\n     */\n    abstract doRender(model: SModelElement, context: RenderingContext): VNode;\n\n    render(model: SModelElement, context: RenderingContext): VNode {\n        return h(this.selector(model), {\n            key: model.id,\n            hook: {\n                init: this.init.bind(this),\n                prepatch: this.prepatch.bind(this)},\n            fn: () => this.renderAndDecorate(model, context),\n            args: this.watchedArgs(model),\n            thunk: true\n        });\n    }\n\n    protected renderAndDecorate(model: SModelElement, context: RenderingContext): VNode {\n        const vnode = this.doRender(model, context);\n        context.decorate(vnode, model);\n        return vnode;\n    }\n\n    protected copyToThunk(vnode: VNode, thunk: VNode): void {\n        thunk.elm = vnode.elm;\n        (vnode.data as VNodeData).fn = (thunk.data as VNodeData).fn;\n        (vnode.data as VNodeData).args = (thunk.data as VNodeData).args;\n        thunk.data = vnode.data;\n        thunk.children = vnode.children;\n        thunk.text = vnode.text;\n        thunk.elm = vnode.elm;\n    }\n\n    protected init(thunk: VNode): void {\n        const cur = thunk.data as VNodeData;\n        const vnode = (cur.fn as any).apply(undefined, cur.args);\n        this.copyToThunk(vnode, thunk);\n    }\n\n    protected prepatch(oldVnode: VNode, thunk: VNode): void {\n        const old = oldVnode.data as VNodeData, cur = thunk.data as VNodeData;\n        if (!this.equals(old.args as any[], cur.args as any[]))\n            this.copyToThunk((cur.fn as any).apply(undefined, cur.args), thunk);\n        else\n            this.copyToThunk(oldVnode, thunk);\n    }\n\n    protected equals(oldArg: any, newArg: any) {\n        if (Array.isArray(oldArg) && Array.isArray(newArg)) {\n            if (oldArg.length !== newArg.length)\n                return false;\n            for (let i = 0; i < newArg.length; ++i) {\n                if (!this.equals(oldArg[i], newArg[i]))\n                    return false;\n            }\n        } else if (typeof oldArg === 'object' && typeof newArg === 'object') {\n            if (Object.keys(oldArg).length !== Object.keys(newArg).length)\n                return false;\n            for (const key in oldArg) {\n                if (key !== 'parent' && key !== 'root' && (!(key in newArg) || !this.equals(oldArg[key], newArg[key])))\n                    return false;\n            }\n        } else if (oldArg !== newArg) {\n            return false;\n        }\n        return true;\n    }\n}\n\nexport interface ThunkVNode extends VNode {\n    thunk: boolean\n}\n\nexport function isThunk(vnode: VNode): vnode is ThunkVNode {\n    return 'thunk' in vnode;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { VNodeData, JsxVNodeChildren, JsxVNodeChild, jsx, FunctionComponent } from \"snabbdom\";\n\n\ndeclare global {\n  // eslint-disable-next-line no-redeclare\n  namespace JSX {\n      // Based on the tag list in github:DefinitelyTyped/DefinitelyTyped:React\n      interface IntrinsicElements {\n          [elemName: string]: VNodeData\n      }\n  }\n}\n\nconst modulesNS = ['hook', 'on', 'style', 'class', 'props', 'attrs', 'dataset'];\nconst SVGNS = 'http://www.w3.org/2000/svg';\n\nfunction normalizeAttrs(source: VNodeData | null, defNS: string, namespace?: string) {\n  const data: VNodeData = {};\n\n  if (namespace) {\n    data.ns = namespace;\n  }\n  if (source === null) {\n    return data;\n  }\n\n  modulesNS.forEach(mod => {\n    if (source[mod]) {\n      data[mod] = source[mod];\n    }\n  });\n  Object.keys(source).forEach(key => {\n    if (key === 'key' || key === 'classNames' || key === 'selector') return;\n    const idx = key.indexOf('-');\n    if (idx > 0)\n      addAttr(key.slice(0, idx), key.slice(idx + 1), source[key]);\n    else if (!data[key])\n      addAttr(defNS, key, source[key]);\n  });\n  return data;\n\n  function addAttr(modname: string, key: string, val: JsxVNodeChildren) {\n    const mod = data[modname] || (data[modname] = {});\n    mod[key] = val;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction JSX(namespace?: string, defNS: string = 'props') {\n  return (tag: FunctionComponent | string, attrs: VNodeData | null, ...children: JsxVNodeChild[]) => jsx(tag, normalizeAttrs(attrs, defNS, namespace), children);\n}\n\nconst html = JSX();\nconst svg = JSX(SVGNS, 'attrs');\n\nexport { html, svg, JSX };\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/** @jsx svg */\nimport { svg } from '../../lib/jsx';\n\nimport { injectable, multiInject, optional, interfaces } from 'inversify';\nimport { VNode } from 'snabbdom';\nimport { TYPES } from '../types';\nimport { InstanceRegistry } from '../../utils/registry';\nimport { isInjectable } from '../../utils/inversify';\nimport { SModelElement, SModelRoot, SParentElement } from '../model/smodel';\nimport { EMPTY_ROOT, CustomFeatures } from '../model/smodel-factory';\nimport { registerModelElement } from '../model/smodel-utils';\nimport { Point } from 'sprotty-protocol';\n\n/**\n * Arguments for `IView` rendering.\n */\nexport interface IViewArgs {\n    parentArgs?: IViewArgs;\n    [key: string]: any;\n}\n\n/**\n * Searches for the property specified in `key` in the specified `args`,\n * including its direct or indirect `IRenderingArgs#parentArgs`.\n *\n * @param arg the rendering arguments.\n * @param key the key to search for.\n * @returns the found value or `undefined.\n */\nexport function findArgValue<T>(arg: IViewArgs | undefined, key: string): T | undefined {\n    while (arg !== undefined && !(key in arg) && arg.parentArgs) {\n        arg = arg.parentArgs;\n    }\n    return arg ? arg[key] : undefined;\n}\n\n/**\n * Base interface for the components that turn GModelElements into virtual DOM elements.\n */\nexport interface IView<A extends IViewArgs = {}> {\n    render(model: Readonly<SModelElement>, context: RenderingContext, args?: A): VNode | undefined\n}\n\n/**\n * Indicates the target of the view rendering. `main` is the actually visible diagram,\n * `popup` is the mouse hover popup, and `hidden` is for computing element bounds prior\n * to the main rendering.\n */\nexport type RenderingTargetKind = 'main' | 'popup' | 'hidden';\n\n/**\n * Bundles additional data that is passed to views for VNode creation.\n */\nexport interface RenderingContext {\n    readonly viewRegistry: ViewRegistry\n    readonly targetKind: RenderingTargetKind;\n    readonly parentArgs?: IViewArgs;\n\n    decorate(vnode: VNode, element: Readonly<SModelElement>): VNode\n\n    renderElement(element: Readonly<SModelElement>): VNode | undefined\n\n    renderChildren(element: Readonly<SParentElement>, args?: IViewArgs): VNode[]\n}\n\n/**\n * Used to bind a model element type to a view factory in the ViewRegistry.\n */\nexport interface ViewRegistration {\n    type: string\n    factory: () => IView\n}\n\nexport type ViewRegistrationFactory = () => ViewRegistration;\n\n/**\n * Allows to look up the IView for a given SModelElement based on its type.\n */\n@injectable()\nexport class ViewRegistry extends InstanceRegistry<IView> {\n    constructor(@multiInject(TYPES.ViewRegistration) @optional() registrations: ViewRegistration[]) {\n        super();\n        this.registerDefaults();\n        registrations.forEach(registration =>\n            this.register(registration.type, registration.factory())\n        );\n    }\n\n    protected registerDefaults() {\n        this.register(EMPTY_ROOT.type, new EmptyView());\n    }\n\n    override missing(key: string): IView {\n        return new MissingView();\n    }\n}\n\n/**\n * Combines `registerModelElement` and `configureView`.\n */\nexport function configureModelElement(context: { bind: interfaces.Bind, isBound: interfaces.IsBound },\n        type: string, modelConstr: new () => SModelElement, viewConstr: interfaces.ServiceIdentifier<IView>,\n        features?: CustomFeatures): void {\n    registerModelElement(context, type, modelConstr, features);\n    configureView(context, type, viewConstr);\n}\n\n/**\n * Utility function to register a view for a model element type.\n */\nexport function configureView(context: { bind: interfaces.Bind, isBound: interfaces.IsBound },\n        type: string, constr: interfaces.ServiceIdentifier<IView>): void {\n    if (typeof constr === 'function') {\n        if (!isInjectable(constr)) {\n            throw new Error(`Views should be @injectable: ${constr.name}`);\n        }\n        if (!context.isBound(constr)) {\n            context.bind(constr).toSelf();\n        }\n    }\n    context.bind(TYPES.ViewRegistration).toDynamicValue(ctx => ({\n        type,\n        factory: () => ctx.container.get(constr)\n    }));\n}\n\n/**\n * This view is used when the model is the EMPTY_ROOT.\n */\n@injectable()\nexport class EmptyView implements IView {\n    render(model: SModelRoot, context: RenderingContext): VNode {\n        return <svg class-sprotty-empty={true} />;\n    }\n}\n\n/**\n * This view is used when no view has been registered for a model element type.\n */\n@injectable()\nexport class MissingView implements IView {\n    render(model: Readonly<SModelElement>, context: RenderingContext): VNode {\n        const position: Point = (model as any).position || Point.ORIGIN;\n        return <text class-sprotty-missing={true} x={position.x} y={position.y}>?{model.id}?</text>;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from \"inversify\";\nimport { Action } from \"sprotty-protocol/lib/actions\";\nimport { SModelRoot } from \"../model/smodel\";\nimport { TYPES } from \"../types\";\nimport { AnimationFrameSyncer } from \"../animations/animation-frame-syncer\";\nimport { IViewer } from \"./viewer\";\n\n/**\n * Updating the view is rather expensive, and it doesn't make sense to calculate\n * more then one update per animation (rendering) frame. So this class batches\n * all incoming model changes and only renders the last one when the next animation\n * frame comes.\n */\n@injectable()\nexport class ViewerCache implements IViewer {\n\n    @inject(TYPES.IViewer) protected delegate: IViewer;\n    @inject(TYPES.AnimationFrameSyncer) protected syncer: AnimationFrameSyncer;\n\n    protected cachedModel?: SModelRoot;\n\n    update(model: SModelRoot, cause?: Action): void {\n        if (cause !== undefined) {\n            // Forward the update immediately in order to pass the cause action\n            this.delegate.update(model, cause);\n            this.cachedModel = undefined;\n        } else {\n            const isCacheEmpty = this.cachedModel === undefined;\n            this.cachedModel = model;\n            if (isCacheEmpty) {\n                this.scheduleUpdate();\n            }\n        }\n    }\n\n    protected scheduleUpdate() {\n        this.syncer.onEndOfNextFrame(() => {\n            if (this.cachedModel) {\n                this.delegate.update(this.cachedModel);\n                this.cachedModel = undefined;\n            }\n        });\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Container, interfaces } from \"inversify\";\nimport { safeAssign } from \"sprotty-protocol/lib/utils/object\";\nimport { TYPES } from \"../types\";\n\nexport interface ViewerOptions {\n    baseDiv: string\n    baseClass: string\n    hiddenDiv: string\n    hiddenClass: string\n    popupDiv: string\n    popupClass: string\n    popupClosedClass: string\n    needsClientLayout: boolean\n    needsServerLayout: boolean\n    popupOpenDelay: number\n    popupCloseDelay: number\n}\n\nexport const defaultViewerOptions = () => (<ViewerOptions>{\n    baseDiv: 'sprotty',\n    baseClass: 'sprotty',\n    hiddenDiv: 'sprotty-hidden',\n    hiddenClass: 'sprotty-hidden',\n    popupDiv: 'sprotty-popup',\n    popupClass: 'sprotty-popup',\n    popupClosedClass: 'sprotty-popup-closed',\n    needsClientLayout: true,\n    needsServerLayout: false,\n    popupOpenDelay: 1000,\n    popupCloseDelay: 300\n});\n\n/**\n * Utility function to partially set viewer options. Default values (from `defaultViewerOptions`) are used for\n * options that are not specified.\n */\nexport function configureViewerOptions(context: { bind: interfaces.Bind, isBound: interfaces.IsBound, rebind: interfaces.Rebind },\n        options: Partial<ViewerOptions>): void {\n    const opt: ViewerOptions = {\n        ...defaultViewerOptions(),\n        ...options\n    };\n    if (context.isBound(TYPES.ViewerOptions))\n        context.rebind(TYPES.ViewerOptions).toConstantValue(opt);\n    else\n        context.bind(TYPES.ViewerOptions).toConstantValue(opt);\n}\n\n/**\n * Utility function to partially override the currently configured viewer options in a DI container.\n */\nexport function overrideViewerOptions(container: Container, options: Partial<ViewerOptions>): ViewerOptions {\n    const opt = container.get<ViewerOptions>(TYPES.ViewerOptions);\n    safeAssign(opt, options);\n    return opt;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/** @jsx html */\nimport { inject, injectable, multiInject, optional } from 'inversify';\nimport { attributesModule, classModule, eventListenersModule, init, Module, propsModule, styleModule, VNode } from 'snabbdom';\nimport { Action } from 'sprotty-protocol/lib/actions';\nimport { html } from '../../lib/jsx'; // must be html here, as we're creating a div\nimport { getWindowScroll } from '../../utils/browser';\nimport { ILogger } from '../../utils/logging';\nimport { IActionDispatcher } from '../actions/action-dispatcher';\nimport { InitializeCanvasBoundsAction } from '../features/initialize-canvas';\nimport { SModelElement, SModelRoot, SParentElement } from '../model/smodel';\nimport { EMPTY_ROOT } from '../model/smodel-factory';\nimport { TYPES } from '../types';\nimport { isThunk } from './thunk-view';\nimport { IViewArgs, RenderingContext, RenderingTargetKind, ViewRegistry } from './view';\nimport { ViewerOptions } from './viewer-options';\nimport { IVNodePostprocessor } from './vnode-postprocessor';\nimport { copyClassesFromElement, copyClassesFromVNode, setAttr, setClass } from './vnode-utils';\n\n\nexport interface IViewer {\n    update(model: SModelRoot, cause?: Action): void\n}\n\nexport interface IViewerProvider {\n    readonly modelViewer: IViewer\n    readonly hiddenModelViewer: IViewer\n    readonly popupModelViewer: IViewer\n}\n\nexport class ModelRenderer implements RenderingContext {\n\n    constructor(readonly viewRegistry: ViewRegistry,\n        readonly targetKind: RenderingTargetKind,\n        private postprocessors: IVNodePostprocessor[],\n        protected args: IViewArgs = {}) {\n    }\n\n    decorate(vnode: VNode, element: Readonly<SModelElement>): VNode {\n        if (isThunk(vnode)) {\n            return vnode;\n        }\n        return this.postprocessors.reduce(\n            (n: VNode, processor: IVNodePostprocessor) => processor.decorate(n, element),\n            vnode);\n    }\n\n    renderElement(element: Readonly<SModelElement>): VNode | undefined {\n        const view = this.viewRegistry.get(element.type);\n        const vnode = view.render(element, this, this.args);\n        if (vnode) {\n            return this.decorate(vnode, element);\n        } else {\n            return undefined;\n        }\n    }\n\n    renderChildren(element: Readonly<SParentElement>, args?: IViewArgs): VNode[] {\n        const context = args ?\n            new ModelRenderer(\n                this.viewRegistry,\n                this.targetKind,\n                this.postprocessors,\n                { ...args, parentArgs: this.args }\n            ) : this;\n        return element.children\n            .map(child => context.renderElement(child))\n            .filter(vnode => vnode !== undefined) as VNode[];\n    }\n\n    postUpdate(cause?: Action) {\n        this.postprocessors.forEach(processor => processor.postUpdate(cause));\n    }\n}\n\nexport type ModelRendererFactory = (\n    targetKind: RenderingTargetKind,\n    postprocessors: IVNodePostprocessor[],\n    args?: IViewArgs\n) => ModelRenderer;\n\nexport type Patcher = (oldRoot: VNode | Element, newRoot: VNode) => VNode;\n\n@injectable()\nexport class PatcherProvider {\n\n    readonly patcher: Patcher;\n\n    constructor() {\n        this.patcher = init(this.createModules());\n    }\n\n    protected createModules(): Module[] {\n        return [\n            propsModule,\n            attributesModule,\n            classModule,\n            styleModule,\n            eventListenersModule\n        ];\n    }\n\n}\n\n/**\n * The component that turns the model into an SVG DOM.\n * Uses a VDOM based on snabbdom.js for performance.\n */\n@injectable()\nexport class ModelViewer implements IViewer {\n\n    @inject(TYPES.ViewerOptions) protected options: ViewerOptions;\n    @inject(TYPES.ILogger) protected logger: ILogger;\n    @inject(TYPES.IActionDispatcher) protected actiondispatcher: IActionDispatcher;\n\n    constructor(@inject(TYPES.ModelRendererFactory) modelRendererFactory: ModelRendererFactory,\n        @inject(TYPES.PatcherProvider) patcherProvider: PatcherProvider,\n        @multiInject(TYPES.IVNodePostprocessor) @optional() postprocessors: IVNodePostprocessor[]) {\n        this.renderer = modelRendererFactory('main', postprocessors);\n        this.patcher = patcherProvider.patcher;\n    }\n\n    protected readonly renderer: ModelRenderer;\n    protected readonly patcher: Patcher;\n\n    protected lastVDOM: VNode;\n\n    update(model: Readonly<SModelRoot>, cause?: Action): void {\n        this.logger.log(this, 'rendering', model);\n        const newVDOM = <div id={this.options.baseDiv}>\n            {this.renderer.renderElement(model)}\n        </div>;\n        if (this.lastVDOM !== undefined) {\n            const hadFocus = this.hasFocus();\n            copyClassesFromVNode(this.lastVDOM, newVDOM);\n            this.lastVDOM = this.patcher.call(this, this.lastVDOM, newVDOM);\n            this.restoreFocus(hadFocus);\n        } else if (typeof document !== 'undefined') {\n            const placeholder = document.getElementById(this.options.baseDiv);\n            if (placeholder !== null) {\n                if (typeof window !== 'undefined') {\n                    window.addEventListener('resize', () => {\n                        this.onWindowResize(newVDOM);\n                    });\n                }\n                copyClassesFromElement(placeholder, newVDOM);\n                setClass(newVDOM, this.options.baseClass, true);\n                this.lastVDOM = this.patcher.call(this, placeholder, newVDOM);\n            } else {\n                this.logger.error(this, 'element not in DOM:', this.options.baseDiv);\n            }\n        }\n        this.renderer.postUpdate(cause);\n    }\n\n    protected hasFocus(): boolean {\n        if (typeof document !== 'undefined' && document.activeElement && this.lastVDOM.children && this.lastVDOM.children.length > 0) {\n            const lastRootVNode = this.lastVDOM.children[0];\n            if (typeof lastRootVNode === 'object') {\n                const lastElement = (lastRootVNode as VNode).elm;\n                return document.activeElement === lastElement;\n            }\n        }\n        return false;\n    }\n\n    protected restoreFocus(focus: boolean) {\n        if (focus && this.lastVDOM.children && this.lastVDOM.children.length > 0) {\n            const lastRootVNode = this.lastVDOM.children[0];\n            if (typeof lastRootVNode === 'object') {\n                const lastElement = (lastRootVNode as VNode).elm;\n                if (lastElement && typeof (lastElement as any).focus === 'function')\n                    (lastElement as any).focus();\n            }\n        }\n    }\n\n    protected onWindowResize(vdom: VNode): void {\n        const baseDiv = document.getElementById(this.options.baseDiv);\n        if (baseDiv !== null) {\n            const newBounds = this.getBoundsInPage(baseDiv as Element);\n            this.actiondispatcher.dispatch(InitializeCanvasBoundsAction.create(newBounds));\n        }\n    }\n\n    protected getBoundsInPage(element: Element) {\n        const bounds = element.getBoundingClientRect();\n        const scroll = getWindowScroll();\n        return {\n            x: bounds.left + scroll.x,\n            y: bounds.top + scroll.y,\n            width: bounds.width,\n            height: bounds.height\n        };\n    }\n\n}\n\n/**\n * Viewer for the _hidden_ model. This serves as an intermediate step to compute bounds\n * of elements. The model is rendered in a section that is not visible to the user,\n * and then the bounds are extracted from the DOM.\n */\n@injectable()\nexport class HiddenModelViewer implements IViewer {\n\n    @inject(TYPES.ViewerOptions) protected options: ViewerOptions;\n    @inject(TYPES.ILogger) protected logger: ILogger;\n\n    constructor(@inject(TYPES.ModelRendererFactory) modelRendererFactory: ModelRendererFactory,\n        @inject(TYPES.PatcherProvider) patcherProvider: PatcherProvider,\n        @multiInject(TYPES.HiddenVNodePostprocessor) @optional() hiddenPostprocessors: IVNodePostprocessor[]) {\n        this.hiddenRenderer = modelRendererFactory('hidden', hiddenPostprocessors);\n        this.patcher = patcherProvider.patcher;\n    }\n\n    protected readonly hiddenRenderer: ModelRenderer;\n    protected readonly patcher: Patcher;\n\n    protected lastHiddenVDOM: VNode;\n\n    update(hiddenModel: Readonly<SModelRoot>, cause?: Action): void {\n        this.logger.log(this, 'rendering hidden');\n\n        let newVDOM: VNode;\n        if (hiddenModel.type === EMPTY_ROOT.type) {\n            newVDOM = <div id={this.options.hiddenDiv}></div>;\n        } else {\n            const hiddenVNode = this.hiddenRenderer.renderElement(hiddenModel);\n            if (hiddenVNode) {\n                setAttr(hiddenVNode, 'opacity', 0);\n            }\n            newVDOM = <div id={this.options.hiddenDiv}>\n                {hiddenVNode}\n            </div>;\n        }\n\n        if (this.lastHiddenVDOM !== undefined) {\n            copyClassesFromVNode(this.lastHiddenVDOM, newVDOM);\n            this.lastHiddenVDOM = this.patcher.call(this, this.lastHiddenVDOM, newVDOM);\n        } else {\n            let placeholder = document.getElementById(this.options.hiddenDiv);\n            if (placeholder === null) {\n                placeholder = document.createElement('div');\n                document.body.appendChild(placeholder);\n            } else {\n                copyClassesFromElement(placeholder, newVDOM);\n            }\n            setClass(newVDOM, this.options.baseClass, true);\n            setClass(newVDOM, this.options.hiddenClass, true);\n            this.lastHiddenVDOM = this.patcher.call(this, placeholder, newVDOM);\n        }\n        this.hiddenRenderer.postUpdate(cause);\n    }\n\n}\n\n@injectable()\nexport class PopupModelViewer implements IViewer {\n\n    @inject(TYPES.ViewerOptions) protected options: ViewerOptions;\n    @inject(TYPES.ILogger) protected logger: ILogger;\n\n    constructor(@inject(TYPES.ModelRendererFactory) protected readonly modelRendererFactory: ModelRendererFactory,\n        @inject(TYPES.PatcherProvider) patcherProvider: PatcherProvider,\n        @multiInject(TYPES.PopupVNodePostprocessor) @optional() popupPostprocessors: IVNodePostprocessor[]) {\n        this.popupRenderer = this.modelRendererFactory('popup', popupPostprocessors);\n        this.patcher = patcherProvider.patcher;\n    }\n\n    protected readonly popupRenderer: ModelRenderer;\n    protected readonly patcher: Patcher;\n\n    protected lastPopupVDOM: VNode;\n\n    update(model: Readonly<SModelRoot>, cause?: Action): void {\n        this.logger.log(this, 'rendering popup', model);\n\n        const popupClosed = model.type === EMPTY_ROOT.type;\n        let newVDOM: VNode;\n        if (popupClosed) {\n            newVDOM = <div id={this.options.popupDiv}></div>;\n        } else {\n            const position = model.canvasBounds;\n            const inlineStyle = {\n                top: position.y + 'px',\n                left: position.x + 'px'\n            };\n            newVDOM = <div id={this.options.popupDiv} style={inlineStyle}>\n                {this.popupRenderer.renderElement(model)}\n            </div>;\n        }\n\n        if (this.lastPopupVDOM !== undefined) {\n            copyClassesFromVNode(this.lastPopupVDOM, newVDOM);\n            setClass(newVDOM, this.options.popupClosedClass, popupClosed);\n            this.lastPopupVDOM = this.patcher.call(this, this.lastPopupVDOM, newVDOM);\n        } else if (typeof document !== 'undefined') {\n            let placeholder = document.getElementById(this.options.popupDiv);\n            if (placeholder === null) {\n                placeholder = document.createElement('div');\n                document.body.appendChild(placeholder);\n            } else {\n                copyClassesFromElement(placeholder, newVDOM);\n            }\n            setClass(newVDOM, this.options.popupClass, true);\n            setClass(newVDOM, this.options.popupClosedClass, popupClosed);\n            this.lastPopupVDOM = this.patcher.call(this, placeholder, newVDOM);\n        }\n        this.popupRenderer.postUpdate(cause);\n    }\n\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from \"inversify\";\nimport { VNode } from \"snabbdom\";\nimport { Action } from \"sprotty-protocol/lib/actions\";\nimport { SModelElement } from \"../model/smodel\";\nimport { setAttr } from \"./vnode-utils\";\n\n/**\n * Manipulates a created VNode after it has been created.\n * Used to register listeners and add animations.\n */\nexport interface IVNodePostprocessor {\n    decorate(vnode: VNode, element: SModelElement): VNode\n    postUpdate(cause?: Action): void\n}\n\n@injectable()\nexport class FocusFixPostprocessor implements IVNodePostprocessor {\n\n    decorate(vnode: VNode, element: SModelElement): VNode {\n        if (vnode.sel && vnode.sel.startsWith('svg'))\n            // allows to set focus in Firefox\n            setAttr(vnode, 'tabindex', 0);\n        return vnode;\n    }\n\n    postUpdate(): void {\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from \"inversify\";\nimport { TYPES } from \"../base/types\";\nimport { ViewerOptions } from \"../base/views/viewer-options\";\n\nexport interface ILogger {\n    logLevel: LogLevel\n\n    error(thisArg: any, message: string, ...params: any[]): void\n    warn(thisArg: any, message: string, ...params: any[]): void\n    info(thisArg: any, message: string, ...params: any[]): void\n    log(thisArg: any, message: string, ...params: any[]): void\n}\n\nexport enum LogLevel { none = 0, error = 1, warn = 2, info = 3, log = 4 }\n\n@injectable()\nexport class NullLogger implements ILogger {\n    logLevel: LogLevel = LogLevel.none;\n\n    error(thisArg: any, message: string, ...params: any[]): void {}\n    warn(thisArg: any, message: string, ...params: any[]): void {}\n    info(thisArg: any, message: string, ...params: any[]): void {}\n    log(thisArg: any, message: string, ...params: any[]): void {}\n}\n\n@injectable()\nexport class ConsoleLogger implements ILogger {\n\n    @inject(TYPES.LogLevel) public logLevel: LogLevel = LogLevel.log;\n    @inject(TYPES.ViewerOptions) protected viewOptions: ViewerOptions = { baseDiv: '' } as ViewerOptions;\n\n    error(thisArg: any, message: string, ...params: any[]): void {\n        if (this.logLevel >= LogLevel.error)\n            try {\n                console.error.apply(thisArg, this.consoleArguments(thisArg, message, params));\n            } catch (error) {}\n    }\n\n    warn(thisArg: any, message: string, ...params: any[]): void {\n        if (this.logLevel >= LogLevel.warn)\n            try {\n                console.warn.apply(thisArg, this.consoleArguments(thisArg, message, params));\n            } catch (error) {}\n    }\n\n    info(thisArg: any, message: string, ...params: any[]): void {\n        if (this.logLevel >= LogLevel.info)\n            try {\n                console.info.apply(thisArg, this.consoleArguments(thisArg, message, params));\n            } catch (error) {}\n    }\n\n    log(thisArg: any, message: string, ...params: any[]): void {\n        if (this.logLevel >= LogLevel.log)\n            try {\n                console.log.apply(thisArg, this.consoleArguments(thisArg, message, params));\n            } catch (error) {}\n    }\n\n    protected consoleArguments(thisArg: any, message: string, params: any[]): any[] {\n        let caller: any;\n        if (typeof thisArg === 'object')\n            caller = thisArg.constructor.name;\n        else\n            caller = thisArg;\n        const date = new Date();\n        return [date.toLocaleTimeString() + ' ' + this.viewOptions.baseDiv + ' ' + caller + ': ' + message, ...params];\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from \"inversify\";\nimport { VNode } from \"snabbdom\";\nimport { TYPES } from \"../types\";\nimport { ILogger } from \"../../utils/logging\";\nimport { SModelElement } from \"../model/smodel\";\nimport { IVNodePostprocessor } from \"./vnode-postprocessor\";\nimport { DOMHelper } from \"./dom-helper\";\nimport { getAttrs } from \"./vnode-utils\";\n\n@injectable()\nexport class IdPostprocessor implements IVNodePostprocessor {\n\n    @inject(TYPES.ILogger) protected logger: ILogger;\n    @inject(TYPES.DOMHelper) protected domHelper: DOMHelper;\n\n    decorate(vnode: VNode, element: SModelElement): VNode {\n        const attrs = getAttrs(vnode);\n        if (attrs.id !== undefined)\n            this.logger.warn(vnode, 'Overriding id of vnode (' + attrs.id + '). Make sure not to set it manually in view.');\n        attrs.id = this.domHelper.createUniqueDOMElementId(element);\n        if (!vnode.key)\n            vnode.key = element.id;\n        return vnode;\n    }\n\n    postUpdate(): void {\n    }\n\n}\n", "/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { IVNodePostprocessor } from \"./vnode-postprocessor\";\nimport { VNode } from \"snabbdom\";\nimport { getSubType } from 'sprotty-protocol/lib/utils/model-utils';\nimport { SModelElement } from \"../model/smodel\";\nimport { setClass } from \"./vnode-utils\";\nimport { injectable } from \"inversify\";\n\n@injectable()\nexport class CssClassPostprocessor implements IVNodePostprocessor {\n    decorate(vnode: VNode, element: SModelElement): VNode {\n        if (element.cssClasses) {\n            for (const cssClass of element.cssClasses)\n                setClass(vnode, cssClass, true);\n        }\n        // append model subtype as class\n        const subType = getSubType(element);\n        if (subType && subType !== element.type) {\n            setClass(vnode, subType, true);\n        }\n        return vnode;\n    }\n\n    postUpdate(): void {\n        // empty\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"./types\";\nimport { CanvasBoundsInitializer, InitializeCanvasBoundsCommand } from './features/initialize-canvas';\nimport { LogLevel, NullLogger } from \"../utils/logging\";\nimport { ActionDispatcher, IActionDispatcher } from \"./actions/action-dispatcher\";\nimport { ActionHandlerRegistry, configureActionHandler } from \"./actions/action-handler\";\nimport { CommandStack, ICommandStack } from \"./commands/command-stack\";\nimport { CommandStackOptions } from \"./commands/command-stack-options\";\nimport { SModelFactory, SModelRegistry } from './model/smodel-factory';\nimport { AnimationFrameSyncer } from \"./animations/animation-frame-syncer\";\nimport { IViewer, ModelViewer, HiddenModelViewer, PopupModelViewer, ModelRenderer, PatcherProvider } from \"./views/viewer\";\nimport { ViewerOptions, defaultViewerOptions } from \"./views/viewer-options\";\nimport { MouseTool, PopupMouseTool, MousePositionTracker } from \"./views/mouse-tool\";\nimport { KeyTool } from \"./views/key-tool\";\nimport { FocusFixPostprocessor, IVNodePostprocessor } from \"./views/vnode-postprocessor\";\nimport { ViewRegistry, RenderingTargetKind, IViewArgs } from \"./views/view\";\nimport { ViewerCache } from \"./views/viewer-cache\";\nimport { DOMHelper } from \"./views/dom-helper\";\nimport { IdPostprocessor } from \"./views/id-postprocessor\";\nimport { configureCommand, CommandActionHandlerInitializer } from \"./commands/command-registration\";\nimport { CssClassPostprocessor } from \"./views/css-class-postprocessor\";\nimport { ToolManager, DefaultToolsEnablingKeyListener, ToolManagerActionHandler } from \"./tool-manager/tool-manager\";\nimport { EnableDefaultToolsAction, EnableToolsAction } from \"./tool-manager/tool\";\nimport { SetModelCommand } from \"./features/set-model\";\nimport { UIExtensionRegistry, SetUIExtensionVisibilityCommand } from \"./ui-extensions/ui-extension-registry\";\nimport { DefaultDiagramLocker } from \"./actions/diagram-locker\";\n\nconst defaultContainerModule = new ContainerModule((bind, _unbind, isBound) => {\n    // Logging ---------------------------------------------\n    bind(TYPES.ILogger).to(NullLogger).inSingletonScope();\n    bind(TYPES.LogLevel).toConstantValue(LogLevel.warn);\n\n    // Registries ---------------------------------------------\n    bind(TYPES.SModelRegistry).to(SModelRegistry).inSingletonScope();\n    bind(ActionHandlerRegistry).toSelf().inSingletonScope();\n    bind(TYPES.ActionHandlerRegistryProvider).toProvider<ActionHandlerRegistry>(ctx => {\n        return () => {\n            return new Promise<ActionHandlerRegistry>((resolve) => {\n                resolve(ctx.container.get<ActionHandlerRegistry>(ActionHandlerRegistry));\n            });\n        };\n    });\n    bind(TYPES.ViewRegistry).to(ViewRegistry).inSingletonScope();\n\n    // Model Creation ---------------------------------------------\n    bind(TYPES.IModelFactory).to(SModelFactory).inSingletonScope();\n\n    // Action Dispatcher ---------------------------------------------\n    bind(TYPES.IActionDispatcher).to(ActionDispatcher).inSingletonScope();\n    bind(TYPES.IActionDispatcherProvider).toProvider<IActionDispatcher>(ctx => {\n        return () => {\n            return new Promise<IActionDispatcher>((resolve) => {\n                resolve(ctx.container.get<IActionDispatcher>(TYPES.IActionDispatcher));\n            });\n        };\n    });\n    bind(TYPES.IDiagramLocker).to(DefaultDiagramLocker).inSingletonScope();\n\n    // Action handler\n    bind(TYPES.IActionHandlerInitializer).to(CommandActionHandlerInitializer);\n\n    // Command Stack ---------------------------------------------\n    bind(TYPES.ICommandStack).to(CommandStack).inSingletonScope();\n    bind(TYPES.ICommandStackProvider).toProvider<ICommandStack>(ctx => {\n        return () => {\n            return new Promise<ICommandStack>((resolve) => {\n                resolve(ctx.container.get<ICommandStack>(TYPES.ICommandStack));\n            });\n        };\n    });\n    bind<CommandStackOptions>(TYPES.CommandStackOptions).toConstantValue({\n        defaultDuration: 250,\n        undoHistoryLimit: 50\n    });\n\n    // Viewer ---------------------------------------------\n    bind(ModelViewer).toSelf().inSingletonScope();\n    bind(HiddenModelViewer).toSelf().inSingletonScope();\n    bind(PopupModelViewer).toSelf().inSingletonScope();\n    bind(TYPES.ModelViewer).toDynamicValue(ctx => {\n        const container = ctx.container.createChild();\n        container.bind(TYPES.IViewer).toService(ModelViewer);\n        container.bind(ViewerCache).toSelf();\n        return container.get(ViewerCache);\n    }).inSingletonScope();\n    bind(TYPES.PopupModelViewer).toDynamicValue(ctx => {\n        const container = ctx.container.createChild();\n        container.bind(TYPES.IViewer).toService(PopupModelViewer);\n        container.bind(ViewerCache).toSelf();\n        return container.get(ViewerCache);\n    }).inSingletonScope();\n    bind(TYPES.HiddenModelViewer).toService(HiddenModelViewer);\n    bind(TYPES.IViewerProvider).toDynamicValue(ctx => {\n        return {\n            get modelViewer() {\n                return ctx.container.get<IViewer>(TYPES.ModelViewer);\n            },\n            get hiddenModelViewer() {\n                return ctx.container.get<IViewer>(TYPES.HiddenModelViewer);\n            },\n            get popupModelViewer() {\n                return ctx.container.get<IViewer>(TYPES.PopupModelViewer);\n            }\n        };\n    });\n    bind<ViewerOptions>(TYPES.ViewerOptions).toConstantValue(defaultViewerOptions());\n    bind(TYPES.PatcherProvider).to(PatcherProvider).inSingletonScope();\n    bind(TYPES.DOMHelper).to(DOMHelper).inSingletonScope();\n    bind(TYPES.ModelRendererFactory).toFactory<ModelRenderer>(ctx => {\n        return (targetKind: RenderingTargetKind, processors: IVNodePostprocessor[], args: IViewArgs = {}) => {\n            const viewRegistry = ctx.container.get<ViewRegistry>(TYPES.ViewRegistry);\n            return new ModelRenderer(viewRegistry, targetKind, processors, args);\n        };\n    });\n\n    // Tools & Postprocessors --------------------------------------\n    bind(IdPostprocessor).toSelf().inSingletonScope();\n    bind(TYPES.IVNodePostprocessor).toService(IdPostprocessor);\n    bind(TYPES.HiddenVNodePostprocessor).toService(IdPostprocessor);\n    bind(CssClassPostprocessor).toSelf().inSingletonScope();\n    bind(TYPES.IVNodePostprocessor).toService(CssClassPostprocessor);\n    bind(TYPES.HiddenVNodePostprocessor).toService(CssClassPostprocessor);\n    bind(MouseTool).toSelf().inSingletonScope();\n    bind(TYPES.IVNodePostprocessor).toService(MouseTool);\n    bind(KeyTool).toSelf().inSingletonScope();\n    bind(TYPES.IVNodePostprocessor).toService(KeyTool);\n    bind(FocusFixPostprocessor).toSelf().inSingletonScope();\n    bind(TYPES.IVNodePostprocessor).toService(FocusFixPostprocessor);\n    bind(TYPES.PopupVNodePostprocessor).toService(IdPostprocessor);\n    bind(PopupMouseTool).toSelf().inSingletonScope();\n    bind(TYPES.PopupVNodePostprocessor).toService(PopupMouseTool);\n\n    // Animation Frame Sync ------------------------------------------\n    bind(TYPES.AnimationFrameSyncer).to(AnimationFrameSyncer).inSingletonScope();\n\n    // Canvas Initialization ---------------------------------------------\n    const context = { bind, isBound };\n    configureCommand(context, InitializeCanvasBoundsCommand);\n    bind(CanvasBoundsInitializer).toSelf().inSingletonScope();\n    bind(TYPES.IVNodePostprocessor).toService(CanvasBoundsInitializer);\n\n    // Model commands ---------------------------------------------\n    configureCommand(context, SetModelCommand);\n\n    // Tool manager initialization ------------------------------------\n    bind(TYPES.IToolManager).to(ToolManager).inSingletonScope();\n    bind(DefaultToolsEnablingKeyListener).toSelf().inSingletonScope();\n    bind(TYPES.KeyListener).toService(DefaultToolsEnablingKeyListener);\n    bind(ToolManagerActionHandler).toSelf().inSingletonScope();\n    configureActionHandler(context, EnableDefaultToolsAction.KIND, ToolManagerActionHandler);\n    configureActionHandler(context, EnableToolsAction.KIND, ToolManagerActionHandler);\n\n    // UIExtension registry initialization ------------------------------------\n    bind(TYPES.UIExtensionRegistry).to(UIExtensionRegistry).inSingletonScope();\n    configureCommand(context, SetUIExtensionVisibilityCommand);\n\n    // Tracker for last known mouse position on diagram ------------------------\n    bind(MousePositionTracker).toSelf().inSingletonScope();\n    bind(TYPES.MouseListener).toService(MousePositionTracker);\n});\n\nexport default defaultContainerModule;\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Bounds, Dimension, isBounds, Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { SModelElement as SModelElementSchema } from 'sprotty-protocol/lib/model';\nimport { SChildElement, SModelElement, SModelRoot, SParentElement } from '../../base/model/smodel';\nimport { SModelExtension } from '../../base/model/smodel-extension';\nimport { findParentByFeature } from '../../base/model/smodel-utils';\nimport { DOMHelper } from '../../base/views/dom-helper';\nimport { ViewerOptions } from '../../base/views/viewer-options';\nimport { getWindowScroll } from '../../utils/browser';\nimport type { Locateable } from '../move/model';\n\nexport const boundsFeature = Symbol('boundsFeature');\nexport const layoutContainerFeature = Symbol('layoutContainerFeature');\nexport const layoutableChildFeature = Symbol('layoutableChildFeature');\nexport const alignFeature = Symbol('alignFeature');\n\n/**\n * Model elements that implement this interface have a position and a size.\n * Note that this definition differs from the one in `sprotty-protocol` because this is\n * used in the _internal model_, while the other is used in the _external model_.\n */\nexport interface BoundsAware extends SModelExtension {\n    bounds: Bounds\n}\n\n/**\n * Used to identify model elements that specify a layout to apply to their children.\n */\nexport interface LayoutContainer extends LayoutableChild {\n    layout: string\n}\n\nexport type ModelLayoutOptions = { [key: string]: string | number | boolean };\n\nexport interface LayoutableChild extends SModelExtension, BoundsAware {\n    layoutOptions?: ModelLayoutOptions\n}\n\n/**\n * Used to adjust elements whose bounding box is not at the origin, e.g.\n * labels, or pre-rendered SVG figures.\n */\nexport interface Alignable extends SModelExtension {\n    alignment: Point\n}\n\nexport function isBoundsAware(element: SModelElement): element is SModelElement & BoundsAware {\n    return 'bounds' in element;\n}\n\nexport function isLayoutContainer(element: SModelElement): element is SParentElement & LayoutContainer {\n    return isBoundsAware(element)\n        && element.hasFeature(layoutContainerFeature)\n        && 'layout' in element;\n}\n\nexport function isLayoutableChild(element: SModelElement): element is SChildElement & LayoutableChild {\n    return isBoundsAware(element)\n        && element.hasFeature(layoutableChildFeature);\n}\n\nexport function isSizeable(element: SModelElement): element is SModelElement & BoundsAware {\n    return element.hasFeature(boundsFeature) && isBoundsAware(element);\n}\n\nexport function isAlignable(element: SModelElement): element is SModelElement & Alignable {\n    return element.hasFeature(alignFeature)\n        && 'alignment' in element;\n}\n\nexport function getAbsoluteBounds(element: SModelElement): Bounds {\n    const boundsAware = findParentByFeature(element, isBoundsAware);\n    if (boundsAware !== undefined) {\n        let bounds = boundsAware.bounds;\n        let current: SModelElement = boundsAware;\n        while (current instanceof SChildElement) {\n            const parent = current.parent;\n            bounds = parent.localToParent(bounds);\n            current = parent;\n        }\n        return bounds;\n    } else if (element instanceof SModelRoot) {\n        const canvasBounds = element.canvasBounds;\n        return { x: 0, y: 0, width: canvasBounds.width, height: canvasBounds.height };\n    } else {\n        return Bounds.EMPTY;\n    }\n}\n\n/**\n * Returns the \"client-absolute\" bounds of the specified `element`.\n *\n * The client-absolute bounds are relative to the entire browser page.\n *\n * @param element The element to get the bounds for.\n * @param domHelper The dom helper to obtain the SVG element's id.\n * @param viewerOptions The viewer options to obtain sprotty's container div id.\n */\nexport function getAbsoluteClientBounds(element: SModelElement, domHelper: DOMHelper, viewerOptions: ViewerOptions): Bounds {\n    let x = 0;\n    let y = 0;\n    let width = 0;\n    let height = 0;\n\n    const svgElementId = domHelper.createUniqueDOMElementId(element);\n    const svgElement = document.getElementById(svgElementId);\n    if (svgElement) {\n        const rect = svgElement.getBoundingClientRect();\n        const scroll = getWindowScroll();\n        x = rect.left + scroll.x;\n        y = rect.top + scroll.y;\n        width = rect.width;\n        height = rect.height;\n    }\n\n    let container = document.getElementById(viewerOptions.baseDiv);\n    if (container) {\n        while (container.offsetParent instanceof HTMLElement\n            && (container = <HTMLElement>container.offsetParent)) {\n            x -= container.offsetLeft;\n            y -= container.offsetTop;\n        }\n    }\n\n    return { x, y, width, height };\n}\n\nexport function findChildrenAtPosition(parent: SParentElement, point: Point): SModelElement[] {\n    const matches: SModelElement[] = [];\n    doFindChildrenAtPosition(parent, point, matches);\n    return matches;\n}\n\nfunction doFindChildrenAtPosition(parent: SParentElement, point: Point, matches: SModelElement[]) {\n    parent.children.forEach(child => {\n        if (isBoundsAware(child) && Bounds.includes(child.bounds, point))\n            matches.push(child);\n        if (child instanceof SParentElement) {\n            const newPoint = child.parentToLocal(point);\n            doFindChildrenAtPosition(child, newPoint, matches);\n        }\n    });\n}\n\n/**\n * Serializable schema for SShapeElement.\n *\n * @deprecated Use `SShapeElement` from `sprotty-protocol` instead.\n */\nexport interface SShapeElementSchema extends SModelElementSchema {\n    position?: Point\n    size?: Dimension\n    layoutOptions?: ModelLayoutOptions\n}\n\n/**\n * Abstract class for elements with a position and a size.\n */\nexport abstract class SShapeElement extends SChildElement implements BoundsAware, Locateable, LayoutableChild {\n    position: Point = Point.ORIGIN;\n    size: Dimension = Dimension.EMPTY;\n    layoutOptions?: ModelLayoutOptions;\n\n    get bounds(): Bounds {\n        return {\n            x: this.position.x,\n            y: this.position.y,\n            width: this.size.width,\n            height: this.size.height\n        };\n    }\n\n    set bounds(newBounds: Bounds) {\n        this.position = {\n            x: newBounds.x,\n            y: newBounds.y\n        };\n        this.size = {\n            width: newBounds.width,\n            height: newBounds.height\n        };\n    }\n\n    override localToParent(point: Point | Bounds): Bounds {\n        const result = {\n            x: point.x + this.position.x,\n            y: point.y + this.position.y,\n            width: -1,\n            height: -1\n        };\n        if (isBounds(point)) {\n            result.width = point.width;\n            result.height = point.height;\n        }\n        return result;\n    }\n\n    override parentToLocal(point: Point | Bounds): Bounds {\n        const result = {\n            x: point.x - this.position.x,\n            y: point.y - this.position.y,\n            width: -1,\n            height: -1\n        };\n        if (isBounds(point)) {\n            result.width = point.width;\n            result.height = point.height;\n        }\n        return result;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from \"inversify\";\nimport {\n    Action, generateRequestId, RequestAction, ResponseAction} from 'sprotty-protocol/lib/actions';\nimport * as protocol from \"sprotty-protocol/lib/actions\";\nimport { SModelRoot as SModelRootSchema } from 'sprotty-protocol/lib/model';\nimport { Bounds, Dimension, Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { CommandExecutionContext, CommandResult, CommandReturn, HiddenCommand, SystemCommand } from \"../../base/commands/command\";\nimport { SModelElement } from \"../../base/model/smodel\";\nimport { TYPES } from \"../../base/types\";\nimport { Alignable, BoundsAware, isBoundsAware } from './model';\n\n/**\n * Sent from the model source (e.g. a DiagramServer) to the client to update the bounds of some\n * (or all) model elements.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport class SetBoundsAction implements Action, protocol.SetBoundsAction {\n    static readonly KIND = 'setBounds';\n    readonly kind = SetBoundsAction.KIND;\n\n    constructor(public readonly bounds: ElementAndBounds[]) {\n    }\n}\n\n/**\n * Sent from the model source to the client to request bounds for the given model. The model is\n * rendered invisibly so the bounds can derived from the DOM. The response is a ComputedBoundsAction.\n * This hidden rendering round-trip is necessary if the client is responsible for parts of the layout\n * (see `needsClientLayout` viewer option).\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport class RequestBoundsAction implements RequestAction<ComputedBoundsAction>, protocol.RequestBoundsAction {\n    static readonly KIND = 'requestBounds';\n    readonly kind = RequestBoundsAction.KIND;\n\n    constructor(public readonly newRoot: SModelRootSchema,\n        public readonly requestId: string = '') { }\n\n    /** Factory function to dispatch a request with the `IActionDispatcher` */\n    static create(newRoot: SModelRootSchema): RequestAction<ComputedBoundsAction> {\n        return new RequestBoundsAction(newRoot, generateRequestId());\n    }\n}\n\n/**\n * Sent from the client to the model source (e.g. a DiagramServer) to transmit the result of bounds\n * computation as a response to a RequestBoundsAction. If the server is responsible for parts of\n * the layout (see `needsServerLayout` viewer option), it can do so after applying the computed bounds\n * received with this action. Otherwise there is no need to send the computed bounds to the server,\n * so they can be processed locally by the client.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport class ComputedBoundsAction implements ResponseAction, protocol.ComputedBoundsAction {\n    static readonly KIND = 'computedBounds';\n    readonly kind = ComputedBoundsAction.KIND;\n\n    constructor(public readonly bounds: ElementAndBounds[],\n        public readonly revision?: number,\n        public readonly alignments?: ElementAndAlignment[],\n        public readonly responseId = '') { }\n}\n\n/**\n * Associates new bounds with a model element, which is referenced via its id.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface ElementAndBounds extends protocol.ElementAndBounds {\n    elementId: string\n    newPosition?: Point\n    newSize: Dimension\n}\n\n/**\n * Associates a new alignment with a model element, which is referenced via its id.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface ElementAndAlignment extends protocol.ElementAndAlignment{\n    elementId: string\n    newAlignment: Point\n}\n\n/**\n * Request a layout of the diagram or the selected elements only.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport class LayoutAction implements Action, protocol.LayoutAction {\n    static readonly KIND = 'layout';\n    readonly kind = LayoutAction.KIND;\n\n    layoutType: string;\n    elementIds: string[];\n}\n\nexport interface ResolvedElementAndBounds {\n    element: SModelElement & BoundsAware\n    oldBounds: Bounds\n    newPosition?: Point\n    newSize: Dimension\n}\n\nexport interface ResolvedElementAndAlignment {\n    element: SModelElement & Alignable\n    oldAlignment: Point\n    newAlignment: Point\n}\n\n@injectable()\nexport class SetBoundsCommand extends SystemCommand {\n    static readonly KIND: string = protocol.SetBoundsAction.KIND;\n\n    protected bounds: ResolvedElementAndBounds[] = [];\n\n    constructor(@inject(TYPES.Action) protected readonly action: protocol.SetBoundsAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        this.action.bounds.forEach(\n            b => {\n                const element = context.root.index.getById(b.elementId);\n                if (element && isBoundsAware(element)) {\n                    this.bounds.push({\n                        element: element,\n                        oldBounds: element.bounds,\n                        newPosition: b.newPosition,\n                        newSize: b.newSize\n                    });\n                }\n            }\n        );\n        return this.redo(context);\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        this.bounds.forEach(\n            b => b.element.bounds = b.oldBounds\n        );\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        this.bounds.forEach(\n            b => {\n                if (b.newPosition)\n                    b.element.bounds = {\n                        ...b.newPosition,\n                        ...b.newSize,\n                    };\n                else\n                    // keep the position\n                    b.element.bounds = {\n                        x: b.element.bounds.x,\n                        y: b.element.bounds.y,\n                        ...b.newSize\n                    };\n            }\n        );\n        return context.root;\n    }\n}\n\n@injectable()\nexport class RequestBoundsCommand extends HiddenCommand {\n    static readonly KIND: string = protocol.RequestBoundsAction.KIND;\n\n    constructor(@inject(TYPES.Action) protected action: protocol.RequestBoundsAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandResult {\n        return {\n            model: context.modelFactory.createRoot(this.action.newRoot),\n            modelChanged: true,\n            cause: this.action\n        };\n    }\n\n    get blockUntil(): (action: Action) => boolean {\n        return action => action.kind === ComputedBoundsAction.KIND;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, interfaces, multiInject, optional } from \"inversify\";\nimport { Bounds } from \"sprotty-protocol/lib/utils/geometry\";\nimport { TYPES } from \"../../base/types\";\nimport { ILogger } from '../../utils/logging';\nimport { InstanceRegistry } from \"../../utils/registry\";\nimport { SParentElement, SModelElement } from \"../../base/model/smodel\";\nimport { isLayoutContainer, LayoutContainer } from \"./model\";\nimport { BoundsData } from \"./hidden-bounds-updater\";\nimport { isInjectable } from \"../../utils/inversify\";\n\n@injectable()\nexport class LayoutRegistry extends InstanceRegistry<ILayout> {\n\n    @inject(TYPES.ILogger) logger: ILogger;\n\n    constructor(@multiInject(TYPES.LayoutRegistration) @optional() layouts: (LayoutRegistration)[] = []) {\n        super();\n        layouts.forEach(layout => {\n            if (this.hasKey(layout.layoutKind)) {\n                this.logger.warn('Layout kind is already defined: ', layout.layoutKind);\n            } else {\n                this.register(layout.layoutKind, layout.factory());\n            }\n        });\n    }\n}\n\nexport interface LayoutRegistration {\n    layoutKind: string;\n    factory: () => ILayout;\n}\n\n@injectable()\nexport class Layouter {\n\n    @inject(TYPES.LayoutRegistry) protected layoutRegistry: LayoutRegistry;\n    @inject(TYPES.ILogger) protected logger: ILogger;\n\n    layout(element2boundsData: Map<SModelElement\u200B\u200B , BoundsData>) {\n        new StatefulLayouter(element2boundsData, this.layoutRegistry, this.logger).layout();\n    }\n}\n\nexport class StatefulLayouter {\n\n    private toBeLayouted: (SParentElement & LayoutContainer)[];\n\n    constructor(private readonly element2boundsData: Map<SModelElement\u200B\u200B , BoundsData>,\n                private readonly layoutRegistry: LayoutRegistry,\n                public readonly log: ILogger) {\n        this.toBeLayouted = [];\n        element2boundsData.forEach(\n            (data, element) => {\n                if (isLayoutContainer(element))\n                    this.toBeLayouted.push(element);\n            });\n    }\n\n    getBoundsData(element: SModelElement): BoundsData {\n        let boundsData = this.element2boundsData.get(element);\n        let bounds = (element as any).bounds;\n        if (isLayoutContainer(element) && this.toBeLayouted.indexOf(element) >= 0) {\n            bounds = this.doLayout(element);\n        }\n        if (!boundsData) {\n            boundsData = {\n                bounds: bounds,\n                boundsChanged: false,\n                alignmentChanged: false\n            };\n            this.element2boundsData.set(element, boundsData);\n        }\n        return boundsData;\n    }\n\n    layout(): void {\n        while (this.toBeLayouted.length > 0) {\n            const element = this.toBeLayouted[0];\n            this.doLayout(element);\n        }\n    }\n\n    protected doLayout(element: SParentElement & LayoutContainer): Bounds {\n        const index = this.toBeLayouted.indexOf(element);\n        if (index >= 0)\n            this.toBeLayouted.splice(index, 1);\n        const layout = this.layoutRegistry.get(element.layout);\n        if (layout)\n            layout.layout(element, this);\n        const boundsData = this.element2boundsData.get(element);\n        if (boundsData !== undefined && boundsData.bounds !== undefined) {\n            return boundsData.bounds;\n        } else {\n            this.log.error(element, 'Layout failed');\n            return Bounds.EMPTY;\n        }\n    }\n}\n\nexport interface ILayout {\n    layout(container: SParentElement & LayoutContainer,\n           layouter: StatefulLayouter): void\n}\n\n\nexport function configureLayout(context: { bind: interfaces.Bind, isBound: interfaces.IsBound },\n    kind: string, constr: interfaces.ServiceIdentifier<ILayout>) {\n\n    if (typeof constr === 'function') {\n        if (!isInjectable(constr)) {\n            throw new Error(`Layouts be @injectable: ${constr.name}`);\n        }\n        if (!context.isBound(constr)) {\n            context.bind(constr).toSelf();\n        }\n    }\n    context.bind(TYPES.LayoutRegistration).toDynamicValue(ctx => ({\n        layoutKind: kind,\n        factory: () => ctx.container.get(constr)\n    }));\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from \"inversify\";\nimport { VNode } from \"snabbdom\";\nimport { Action, ComputedBoundsAction, ElementAndAlignment, ElementAndBounds, RequestBoundsAction } from \"sprotty-protocol/lib/actions\";\nimport { almostEquals, Bounds, Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { ILogger } from \"../../utils/logging\";\nimport { IActionDispatcher } from \"../../base/actions/action-dispatcher\";\nimport { SChildElement, SModelElement, SModelRoot } from \"../../base/model/smodel\";\nimport { TYPES } from \"../../base/types\";\nimport { IVNodePostprocessor } from \"../../base/views/vnode-postprocessor\";\nimport { Layouter } from \"./layout\";\nimport { BoundsAware, isAlignable, isLayoutContainer, isSizeable } from \"./model\";\n\nexport class BoundsData {\n    vnode?: VNode;\n    bounds?: Bounds;\n    alignment?: Point;\n    boundsChanged: boolean;\n    alignmentChanged: boolean;\n}\n\n/**\n * Grabs the bounds from hidden SVG DOM elements, applies layouts and fires\n * ComputedBoundsActions.\n *\n * The actual bounds of an element can usually not be determined from the SModel\n * as they depend on the view implementation and CSS stylings. So the best way is\n * to grab them from a live (but hidden) SVG using getBBox().\n *\n * If an element is Alignable, and the top-left corner of its bounding box is not\n * the origin, we also issue a realign with the ComputedBoundsAction.\n */\n@injectable()\nexport class HiddenBoundsUpdater implements IVNodePostprocessor {\n\n    @inject(TYPES.ILogger) protected logger: ILogger;\n    @inject(TYPES.IActionDispatcher) protected actionDispatcher: IActionDispatcher;\n    @inject(TYPES.Layouter) protected layouter: Layouter;\n\n    private readonly element2boundsData: Map<SModelElement, BoundsData> = new Map;\n\n    root: SModelRoot | undefined;\n\n    decorate(vnode: VNode, element: SModelElement): VNode {\n        if (isSizeable(element) || isLayoutContainer(element)) {\n            this.element2boundsData.set(element, {\n                vnode: vnode,\n                bounds: element.bounds,\n                boundsChanged: false,\n                alignmentChanged: false\n            });\n        }\n        if (element instanceof SModelRoot)\n            this.root = element;\n        return vnode;\n    }\n\n    postUpdate(cause?: Action) {\n        if (cause === undefined || cause.kind !== RequestBoundsAction.KIND) {\n            return;\n        }\n        const request = cause as RequestBoundsAction;\n        this.getBoundsFromDOM();\n        this.layouter.layout(this.element2boundsData);\n        const resizes: ElementAndBounds[] = [];\n        const alignments: ElementAndAlignment[] = [];\n        this.element2boundsData.forEach(\n            (boundsData, element) => {\n                if (boundsData.boundsChanged && boundsData.bounds !== undefined) {\n                    const resize: ElementAndBounds = {\n                        elementId: element.id,\n                        newSize: {\n                            width: boundsData.bounds.width,\n                            height: boundsData.bounds.height\n                        }\n                    };\n                    // don't copy position if the element is layouted by the server\n                    if (element instanceof SChildElement && isLayoutContainer(element.parent)) {\n                        resize.newPosition = {\n                            x: boundsData.bounds.x,\n                            y: boundsData.bounds.y,\n                        };\n                    }\n                    resizes.push(resize);\n                }\n                if (boundsData.alignmentChanged && boundsData.alignment !== undefined) {\n                    alignments.push({\n                        elementId: element.id,\n                        newAlignment: boundsData.alignment\n                    });\n                }\n            });\n        const revision = (this.root !== undefined) ? this.root.revision : undefined;\n        this.actionDispatcher.dispatch(ComputedBoundsAction.create(resizes, { revision, alignments, requestId: request.requestId }));\n        this.element2boundsData.clear();\n    }\n\n    protected getBoundsFromDOM() {\n        this.element2boundsData.forEach(\n            (boundsData, element) => {\n                if (boundsData.bounds && isSizeable(element)) {\n                    const vnode = boundsData.vnode;\n                    if (vnode && vnode.elm) {\n                        const boundingBox = this.getBounds(vnode.elm, element);\n                        if (isAlignable(element) && !(\n                            almostEquals(boundingBox.x, 0) && almostEquals(boundingBox.y, 0)\n                        )) {\n                            boundsData.alignment = {\n                                x: -boundingBox.x,\n                                y: -boundingBox.y\n                            };\n                            boundsData.alignmentChanged = true;\n                        }\n                        const newBounds = {\n                            x: element.bounds.x,\n                            y: element.bounds.y,\n                            width: boundingBox.width,\n                            height: boundingBox.height\n                        };\n                        if (!(almostEquals(newBounds.x, element.bounds.x)\n                            && almostEquals(newBounds.y, element.bounds.y)\n                            && almostEquals(newBounds.width, element.bounds.width)\n                            && almostEquals(newBounds.height, element.bounds.height))) {\n                            boundsData.bounds = newBounds;\n                            boundsData.boundsChanged = true;\n                        }\n                    }\n                }\n            }\n        );\n    }\n\n    protected getBounds(elm: any, element: BoundsAware): Bounds {\n        if (typeof elm.getBBox !== 'function') {\n            this.logger.error(this, 'Not an SVG element:', elm);\n            return Bounds.EMPTY;\n        }\n        const bounds = elm.getBBox();\n        return {\n            x: bounds.x,\n            y: bounds.y,\n            width: bounds.width,\n            height: bounds.height\n        };\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Bounds, Dimension, Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { SParentElement, SModelElement, SChildElement } from \"../../base/model/smodel\";\nimport { isLayoutContainer, isLayoutableChild, LayoutContainer, isBoundsAware } from \"./model\";\nimport { ILayout, StatefulLayouter } from './layout';\nimport { AbstractLayoutOptions, HAlignment, VAlignment } from './layout-options';\nimport { BoundsData } from './hidden-bounds-updater';\nimport { injectable } from \"inversify\";\n\n@injectable()\nexport abstract class AbstractLayout<T extends AbstractLayoutOptions> implements ILayout {\n\n    layout(container: SParentElement & LayoutContainer,\n           layouter: StatefulLayouter) {\n        const boundsData = layouter.getBoundsData(container);\n        const options = this.getLayoutOptions(container);\n        const childrenSize = this.getChildrenSize(container, options, layouter);\n        const maxWidth = options.paddingFactor * (\n            options.resizeContainer\n            ? childrenSize.width\n            : Math.max(0, this.getFixedContainerBounds(container, options, layouter).width) - options.paddingLeft - options.paddingRight);\n        const maxHeight =  options.paddingFactor * (\n            options.resizeContainer\n            ? childrenSize.height\n            : Math.max(0, this.getFixedContainerBounds(container, options, layouter).height) - options.paddingTop - options.paddingBottom);\n        if (maxWidth > 0 && maxHeight > 0) {\n            const offset = this.layoutChildren(container, layouter, options, maxWidth, maxHeight);\n            boundsData.bounds = this.getFinalContainerBounds(container, offset, options, maxWidth, maxHeight);\n            boundsData.boundsChanged = true;\n        }\n    }\n    protected abstract layoutChild(child: SChildElement,\n                                boundsData: BoundsData, bounds: Bounds,\n                                childOptions: T, containerOptions: T,\n                                currentOffset: Point,\n                                maxWidth: number, maxHeight: number): Point;\n\n    protected getFinalContainerBounds(container: SParentElement & LayoutContainer,\n                                    lastOffset: Point,\n                                    options: T,\n                                    maxWidth: number,\n                                    maxHeight: number): Bounds {\n        return {\n            x: container.bounds.x,\n            y: container.bounds.y,\n            width: Math.max(options.minWidth, maxWidth + options.paddingLeft + options.paddingRight),\n            height: Math.max(options.minHeight, maxHeight + options.paddingTop + options.paddingBottom)\n        };\n    }\n\n    protected getFixedContainerBounds(\n            container: SModelElement,\n            layoutOptions: T,\n            layouter: StatefulLayouter): Bounds {\n        let currentContainer = container;\n        while (true) {\n            if (isBoundsAware(currentContainer)) {\n                const bounds = currentContainer.bounds;\n                if (isLayoutContainer(currentContainer) && layoutOptions.resizeContainer)\n                    layouter.log.error(currentContainer, 'Resizable container found while detecting fixed bounds');\n                if (Dimension.isValid(bounds))\n                    return bounds;\n            }\n            if (currentContainer instanceof SChildElement) {\n                currentContainer = currentContainer.parent;\n            } else {\n                layouter.log.error(currentContainer, 'Cannot detect fixed bounds');\n                return Bounds.EMPTY;\n            }\n        }\n    }\n\n    protected abstract getChildrenSize(container: SParentElement & LayoutContainer,\n                               containerOptions: T,\n                               layouter: StatefulLayouter): Dimension;\n\n    protected layoutChildren(container: SParentElement & LayoutContainer,\n                            layouter: StatefulLayouter,\n                            containerOptions: T,\n                            maxWidth: number,\n                            maxHeight: number): Point {\n        let currentOffset: Point = {\n            x: containerOptions.paddingLeft + 0.5 * (maxWidth - (maxWidth / containerOptions.paddingFactor)),\n            y: containerOptions.paddingTop + 0.5 * (maxHeight - (maxHeight / containerOptions.paddingFactor))};\n        container.children.forEach(\n            child => {\n                if (isLayoutableChild(child)) {\n                    const boundsData = layouter.getBoundsData(child);\n                    const bounds = boundsData.bounds;\n                    const childOptions = this.getChildLayoutOptions(child, containerOptions);\n                    if (bounds !== undefined && Dimension.isValid(bounds)) {\n                        currentOffset = this.layoutChild(child, boundsData, bounds,\n                            childOptions, containerOptions, currentOffset,\n                            maxWidth, maxHeight);\n                    }\n                }\n            }\n        );\n        return currentOffset;\n    }\n\n    protected getDx(hAlign: HAlignment, bounds: Bounds, maxWidth: number): number {\n        switch (hAlign) {\n            case 'left':\n                return 0;\n            case 'center':\n                return 0.5 * (maxWidth - bounds.width);\n            case 'right':\n                return maxWidth - bounds.width;\n        }\n    }\n\n    protected getDy(vAlign: VAlignment, bounds: Bounds, maxHeight: number): number {\n        switch (vAlign) {\n            case 'top':\n                return 0;\n            case 'center':\n                return 0.5 * (maxHeight - bounds.height);\n            case 'bottom':\n                return maxHeight - bounds.height;\n        }\n    }\n\n    protected getChildLayoutOptions(child: SChildElement, containerOptions: T): T {\n        const layoutOptions = (child as any).layoutOptions;\n        if (layoutOptions === undefined)\n            return containerOptions;\n        else\n            return this.spread(containerOptions, layoutOptions);\n    }\n\n    protected getLayoutOptions(element: SModelElement): T {\n        let current = element;\n        const allOptions: T[] = [];\n        while (current !== undefined) {\n            const layoutOptions = (current as any).layoutOptions;\n            if (layoutOptions !== undefined)\n                allOptions.push(layoutOptions);\n            if (current instanceof SChildElement)\n                current = current.parent;\n            else\n                break;\n        }\n        return allOptions.reverse().reduce(\n            (a, b) => { return this.spread(a, b); }, this.getDefaultLayoutOptions());\n    }\n\n    protected abstract getDefaultLayoutOptions(): T;\n\n    protected abstract spread(a: T, b: T): T;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { Bounds, Dimension, Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { SParentElement, SChildElement } from \"../../base/model/smodel\";\nimport { AbstractLayout } from './abstract-layout';\nimport { AbstractLayoutOptions, HAlignment } from './layout-options';\nimport { BoundsData } from './hidden-bounds-updater';\nimport { LayoutContainer, isLayoutableChild } from './model';\nimport { StatefulLayouter } from './layout';\n\nexport interface VBoxLayoutOptions extends AbstractLayoutOptions {\n    vGap: number\n    hAlign: HAlignment\n}\n\n/**\n * Layouts children of a container in vertical (top->bottom) direction.\n */\n@injectable()\nexport class VBoxLayouter extends AbstractLayout<VBoxLayoutOptions> {\n\n    static KIND = 'vbox';\n\n    protected getChildrenSize(container: SParentElement & LayoutContainer,\n                               containerOptions: VBoxLayoutOptions,\n                               layouter: StatefulLayouter) {\n        let maxWidth = -1;\n        let maxHeight = 0;\n        let isFirst = true;\n        container.children.forEach(\n            child => {\n                if (isLayoutableChild(child)) {\n                    const bounds = layouter.getBoundsData(child).bounds;\n                    if (bounds !== undefined && Dimension.isValid(bounds)) {\n                        maxHeight += bounds.height;\n                        if (isFirst)\n                            isFirst = false;\n                        else\n                            maxHeight += containerOptions.vGap;\n                        maxWidth = Math.max(maxWidth, bounds.width);\n                    }\n                }\n            }\n        );\n        return {\n            width: maxWidth,\n            height: maxHeight\n        };\n    }\n\n    protected layoutChild(child: SChildElement,\n                        boundsData: BoundsData,\n                        bounds: Bounds,\n                        childOptions: VBoxLayoutOptions,\n                        containerOptions: VBoxLayoutOptions,\n                        currentOffset: Point,\n                        maxWidth: number,\n                        maxHeight: number) {\n        const dx = this.getDx(childOptions.hAlign, bounds, maxWidth);\n        boundsData.bounds = {\n            x: containerOptions.paddingLeft + (child as any).bounds.x - bounds.x + dx,\n            y: currentOffset.y + (child as any).bounds.y - bounds.y,\n            width: bounds.width,\n            height: bounds.height\n        };\n        boundsData.boundsChanged = true;\n        return {\n            x: currentOffset.x,\n            y: currentOffset.y + bounds.height + containerOptions.vGap\n        };\n    }\n\n    protected getDefaultLayoutOptions(): VBoxLayoutOptions {\n        return {\n            resizeContainer: true,\n            paddingTop: 5,\n            paddingBottom: 5,\n            paddingLeft: 5,\n            paddingRight: 5,\n            paddingFactor: 1,\n            vGap: 1,\n            hAlign: 'center',\n            minWidth: 0,\n            minHeight: 0\n        };\n    }\n\n    protected spread(a: VBoxLayoutOptions, b: VBoxLayoutOptions): VBoxLayoutOptions {\n        return { ...a, ...b };\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { Bounds, Dimension, Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { SParentElement, SChildElement } from \"../../base/model/smodel\";\nimport { AbstractLayout } from './abstract-layout';\nimport { AbstractLayoutOptions, VAlignment } from './layout-options';\nimport { BoundsData } from './hidden-bounds-updater';\nimport { LayoutContainer, isLayoutableChild } from './model';\nimport { StatefulLayouter } from './layout';\n\nexport interface HBoxLayoutOptions extends AbstractLayoutOptions {\n    hGap: number\n    vAlign: VAlignment\n}\n\n/**\n * Layouts children of a container in horizontal (left->right) direction.\n */\n@injectable()\nexport class HBoxLayouter extends AbstractLayout<HBoxLayoutOptions> {\n\n    static KIND = 'hbox';\n\n    protected getChildrenSize(container: SParentElement & LayoutContainer,\n                               containerOptions: HBoxLayoutOptions,\n                               layouter: StatefulLayouter) {\n        let maxWidth = 0;\n        let maxHeight = -1;\n        let isFirst = true;\n        container.children.forEach(\n            child => {\n                if (isLayoutableChild(child)) {\n                    const bounds = layouter.getBoundsData(child).bounds;\n                    if (bounds !== undefined && Dimension.isValid(bounds)) {\n                        if (isFirst)\n                            isFirst = false;\n                        else\n                            maxWidth += containerOptions.hGap;\n                        maxWidth += bounds.width;\n                        maxHeight = Math.max(maxHeight, bounds.height);\n                    }\n                }\n            }\n        );\n        return {\n            width: maxWidth,\n            height: maxHeight\n        };\n    }\n\n    protected layoutChild(child: SChildElement,\n                        boundsData: BoundsData,\n                        bounds: Bounds,\n                        childOptions: HBoxLayoutOptions,\n                        containerOptions: HBoxLayoutOptions,\n                        currentOffset: Point,\n                        maxWidth: number,\n                        maxHeight: number): Point {\n        const dy = this.getDy(childOptions.vAlign, bounds, maxHeight);\n        boundsData.bounds = {\n            x: currentOffset.x + (child as any).bounds.x - bounds.x,\n            y: containerOptions.paddingTop + (child as any).bounds.y - bounds.y + dy,\n            width: bounds.width,\n            height: bounds.height\n        };\n        boundsData.boundsChanged = true;\n        return {\n            x: currentOffset.x + bounds.width + containerOptions.hGap,\n            y: currentOffset.y\n        };\n    }\n\n    protected getDefaultLayoutOptions(): HBoxLayoutOptions {\n        return {\n            resizeContainer: true,\n            paddingTop: 5,\n            paddingBottom: 5,\n            paddingLeft: 5,\n            paddingRight: 5,\n            paddingFactor: 1,\n            hGap: 1,\n            vAlign: 'center',\n            minWidth: 0,\n            minHeight: 0\n        };\n    }\n\n    protected spread(a: HBoxLayoutOptions, b: HBoxLayoutOptions): HBoxLayoutOptions {\n        return { ...a, ...b };\n    }\n\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { Bounds, Dimension, Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { SParentElement, SChildElement } from \"../../base/model/smodel\";\nimport { AbstractLayout } from './abstract-layout';\nimport { AbstractLayoutOptions, HAlignment, VAlignment } from './layout-options';\nimport { BoundsData } from './hidden-bounds-updater';\nimport { LayoutContainer, isLayoutableChild } from './model';\nimport { StatefulLayouter } from './layout';\n\nexport interface StackLayoutOptions extends AbstractLayoutOptions {\n    paddingFactor: number\n    vAlign: VAlignment\n    hAlign: HAlignment\n}\n\n@injectable()\nexport class StackLayouter extends AbstractLayout<StackLayoutOptions> {\n\n    static KIND = 'stack';\n\n    protected getChildrenSize(container: SParentElement & LayoutContainer,\n                            options: StackLayoutOptions,\n                            layouter: StatefulLayouter) {\n        let maxWidth = -1;\n        let maxHeight = -1;\n        container.children.forEach(\n            child => {\n                if (isLayoutableChild(child)) {\n                    const bounds = layouter.getBoundsData(child).bounds;\n                    if (bounds !== undefined && Dimension.isValid(bounds)) {\n                        maxWidth = Math.max(maxWidth, bounds.width);\n                        maxHeight = Math.max(maxHeight, bounds.height);\n                    }\n                }\n            }\n        );\n        return {\n            width: maxWidth,\n            height: maxHeight\n        };\n    }\n\n    protected layoutChild(child: SChildElement,\n                        boundsData: BoundsData,\n                        bounds: Bounds,\n                        childOptions: StackLayoutOptions,\n                        containerOptions: StackLayoutOptions,\n                        currentOffset: Point,\n                        maxWidth: number, maxHeight: number): Point {\n        const dx = this.getDx(childOptions.hAlign, bounds, maxWidth);\n        const dy = this.getDy(childOptions.vAlign, bounds, maxHeight);\n        boundsData.bounds = {\n            x: containerOptions.paddingLeft + (child as any).bounds.x - bounds.x + dx,\n            y: containerOptions.paddingTop + (child as any).bounds.y - bounds.y + dy,\n            width: bounds.width,\n            height: bounds.height\n        };\n        boundsData.boundsChanged = true;\n        return currentOffset;\n    }\n\n    protected getDefaultLayoutOptions(): StackLayoutOptions {\n        return {\n            resizeContainer: true,\n            paddingTop: 5,\n            paddingBottom: 5,\n            paddingLeft: 5,\n            paddingRight: 5,\n            paddingFactor: 1,\n            hAlign: 'center',\n            vAlign: 'center',\n            minWidth: 0,\n            minHeight: 0\n        };\n    }\n\n    protected spread(a: StackLayoutOptions, b: StackLayoutOptions): StackLayoutOptions {\n        return { ...a, ...b };\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { VNode } from 'snabbdom';\nimport { Dimension } from 'sprotty-protocol/lib/utils/geometry';\nimport { IViewArgs, IView, RenderingContext } from '../../base/views/view';\nimport { getAbsoluteBounds, BoundsAware } from './model';\nimport { SChildElement } from '../../base/model/smodel';\n\n@injectable()\nexport abstract class ShapeView implements IView {\n\n    /**\n     * Check whether the given model element is in the current viewport. Use this method\n     * in your `render` implementation to skip rendering in case the element is not visible.\n     * This can greatly enhance performance for large models.\n     */\n    isVisible(model: Readonly<SChildElement & BoundsAware>, context: RenderingContext): boolean {\n        if (context.targetKind === 'hidden') {\n            // Don't hide any element for hidden rendering\n            return true;\n        }\n        if (!Dimension.isValid(model.bounds)) {\n            // We should hide only if we know the element's bounds\n            return true;\n        }\n        const ab = getAbsoluteBounds(model);\n        const canvasBounds = model.root.canvasBounds;\n        return ab.x <= canvasBounds.width\n            && ab.x + ab.width >= 0\n            && ab.y <= canvasBounds.height\n            && ab.y + ab.height >= 0;\n    }\n\n    abstract render(model: Readonly<SChildElement>, context: RenderingContext, args?: IViewArgs): VNode | undefined;\n\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, interfaces, multiInject, optional } from 'inversify';\nimport { Action } from 'sprotty-protocol/lib/actions';\nimport { InstanceRegistry } from '../../utils/registry';\nimport { TYPES } from '../../base/types';\nimport { SButton } from './model';\nimport { isInjectable } from '../../utils/inversify';\n\nexport interface IButtonHandler {\n    buttonPressed(button: SButton): (Action | Promise<Action>)[]\n}\n\n/** @deprecated deprecated since 0.12.0 - please use `configureButtonHandler` */\nexport interface IButtonHandlerFactory {\n    TYPE: string\n    new(): IButtonHandler\n}\n\nexport interface IButtonHandlerRegistration {\n    TYPE: string\n    factory: () => IButtonHandler\n}\n\n@injectable()\nexport class ButtonHandlerRegistry extends InstanceRegistry<IButtonHandler> {\n\n    constructor(\n        @multiInject(TYPES.IButtonHandlerRegistration)@optional() buttonHandlerRegistrations: IButtonHandlerRegistration[],\n        // deprecated, but keep support for now\n        @multiInject(TYPES.IButtonHandler)@optional() buttonHandlerFactories: IButtonHandlerFactory[]) {\n        super();\n        buttonHandlerRegistrations.forEach(factory => this.register(factory.TYPE, factory.factory()));\n        // deprecated, but keep support for now\n        buttonHandlerFactories.forEach(factory => this.register(factory.TYPE, new factory()));\n    }\n}\n\n/**\n * Utility function to register a button handler for an button type.\n */\nexport function configureButtonHandler(context: { bind: interfaces.Bind, isBound: interfaces.IsBound },\n    type: string, constr: interfaces.ServiceIdentifier<IButtonHandler>): void {\n    if (typeof constr === 'function') {\n        if (!isInjectable(constr)) {\n            throw new Error(`Button handlers should be @injectable: ${constr.name}`);\n        }\n        if (!context.isBound(constr)) {\n            context.bind(constr).toSelf();\n        }\n    }\n    context.bind(TYPES.IButtonHandlerRegistration).toDynamicValue(ctx => ({\n        TYPE: type,\n        factory: () => ctx.container.get(constr)\n    }));\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SModelElement } from '../../base/model/smodel';\nimport { SModelExtension } from '../../base/model/smodel-extension';\n\nexport const fadeFeature = Symbol('fadeFeature');\n\nexport interface Fadeable extends SModelExtension {\n    opacity: number\n}\n\nexport function isFadeable(element: SModelElement): element is SModelElement & Fadeable {\n    return element.hasFeature(fadeFeature) && (element as any)['opacity'] !== undefined;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { boundsFeature, layoutableChildFeature, SShapeElement, SShapeElementSchema } from '../bounds/model';\nimport { fadeFeature } from '../fade/model';\n\nexport interface SButtonSchema extends SShapeElementSchema {\n    pressed: boolean\n    enabled: boolean\n}\n\nexport class SButton extends SShapeElement {\n    static readonly DEFAULT_FEATURES = [boundsFeature, layoutableChildFeature, fadeFeature];\n\n    enabled = true;\n}\n", "/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SModelElement } from '../../base/model/smodel';\nimport { SModelExtension } from '../../base/model/smodel-extension';\n\nexport const nameFeature = Symbol('nameableFeature');\n\nexport interface Nameable extends SModelExtension {\n    name: string\n}\n\nexport function isNameable(element: SModelElement): element is SModelElement & Nameable {\n    return element.hasFeature(nameFeature);\n}\n\nexport function name(element: SModelElement): string|undefined {\n    if (isNameable(element)) {\n        return element.name;\n    } else {\n        return undefined;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, multiInject, optional } from \"inversify\";\nimport { CenterAction, SelectAction, SelectAllAction } from \"sprotty-protocol/lib/actions\";\nimport { Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { LabeledAction } from \"../../base/actions/action\";\nimport { SModelRoot } from \"../../base/model/smodel\";\nimport { TYPES } from \"../../base/types\";\nimport { toArray } from \"../../utils/iterable\";\nimport { ILogger } from \"../../utils/logging\";\nimport { isNameable, name } from \"../nameable/model\";\n\nexport interface ICommandPaletteActionProvider {\n    getActions(root: Readonly<SModelRoot>, text: string, lastMousePosition?: Point, index?: number): Promise<LabeledAction[]>;\n}\n\n@injectable()\nexport class CommandPaletteActionProviderRegistry implements ICommandPaletteActionProvider {\n\n    constructor(@multiInject(TYPES.ICommandPaletteActionProvider) @optional() protected actionProviders: ICommandPaletteActionProvider[] = []) {\n    }\n\n    getActions(root: Readonly<SModelRoot>, text: string, lastMousePosition?: Point, index?: number) {\n        const actionLists = this.actionProviders.map(provider => provider.getActions(root, text, lastMousePosition, index));\n        return Promise.all(actionLists).then(p => p.reduce((acc, promise) => promise !== undefined ? acc.concat(promise) : acc));\n    }\n}\n\n@injectable()\nexport class RevealNamedElementActionProvider implements ICommandPaletteActionProvider {\n\n    constructor(@inject(TYPES.ILogger) protected logger: ILogger) { }\n\n    getActions(root: Readonly<SModelRoot>, text: string, lastMousePosition?: Point, index?: number) {\n        if (index !== undefined && index % 2 === 0)\n            return Promise.resolve(this.createSelectActions(root));\n        else\n            return Promise.resolve([new LabeledAction(\"Select all\", [SelectAllAction.create()])]);\n    }\n\n    createSelectActions(modelRoot: SModelRoot): LabeledAction[] {\n        const nameables = toArray(modelRoot.index.all().filter(element => isNameable(element)));\n        return nameables.map(nameable => new LabeledAction(`Reveal ${name(nameable)}`,\n            [SelectAction.create({ selectedElementsIDs: [nameable.id] }), CenterAction.create([nameable.id])], 'eye'));\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2021 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport const ACTION_ITEM = 'action-item';\nexport const ANIMATION_SPIN = 'animation-spin';\n\nexport function codiconCSSString(codiconId: string, actionItem = false, animationSpin = false, additionalCSS: string[] = []): string {\n    return codiconCSSClasses(codiconId, actionItem, animationSpin, additionalCSS).join(' ');\n}\n\nexport function codiconCSSClasses(codiconId: string, actionItem = false, animationSpin = false, additionalCSS: string[] = []): string[] {\n    const cssClassArray = ['codicon', `codicon-${codiconId}`];\n    if (actionItem) {\n        cssClassArray.push(ACTION_ITEM);\n    }\n    if (animationSpin) {\n        cssClassArray.push(ANIMATION_SPIN);\n    }\n    if (additionalCSS.length > 0) {\n        cssClassArray.push(...additionalCSS);\n    }\n    return cssClassArray;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SModelElement } from '../../base/model/smodel';\nimport { SModelExtension } from '../../base/model/smodel-extension';\n\nexport const selectFeature = Symbol('selectFeature');\n\nexport interface Selectable extends SModelExtension {\n    selected: boolean\n}\n\nexport function isSelectable(element: SModelElement): element is SModelElement & Selectable {\n    return element.hasFeature(selectFeature);\n}\n\nexport function isSelected(element: SModelElement | undefined): element is SModelElement & Selectable {\n    return element !== undefined && isSelectable(element) && element.selected;\n}\n", "/*\n * https://github.com/kraaden/autocomplete\n * Copyright (c) 2016 Denys Krasnoshchok\n * MIT License\n */\n\nexport const enum EventTrigger {\n    Keyboard = 0,\n    Focus = 1\n}\n\nexport interface AutocompleteItem {\n    label?: string;\n    group?: string;\n}\n\nexport interface AutocompleteSettings<T extends AutocompleteItem> {\n    /**\n     * Autocomplete will be attached to this element.\n     */\n    input: HTMLInputElement | HTMLTextAreaElement;\n\n    /**\n     * Provide your own container for the widget.\n     * If not specified, a new DIV element will be created.\n     */\n    container?: HTMLDivElement;\n\n    /**\n     * This method allows you to override the default rendering function for items.\n     * It must return a DIV element or undefined to skip rendering.\n     */\n    render?: (item: T, currentValue: string, index: number) => HTMLDivElement | undefined;\n\n    /**\n     * This method allows you to override the default rendering function for item groups.\n     * It must return a DIV element or undefined to skip rendering.\n     */\n    renderGroup?: (name: string, currentValue: string) => HTMLDivElement | undefined;\n\n    /**\n     * If specified, the autocomplete DOM element will have this class assigned to it.\n     */\n    className?: string;\n\n    /**\n     * Specify the minimum text length required to show autocomplete.\n     */\n    minLength?: number;\n\n    /**\n     * The message that will be showed when there are no suggestions that match the entered value.\n     */\n    emptyMsg?: string;\n\n    /**\n     * This method will be called when user choose an item in autocomplete. The selected item will be passed as the first parameter.\n     */\n    onSelect: (item: T, input: HTMLInputElement | HTMLTextAreaElement) => void;\n\n    /**\n     * Show autocomplete on focus event. Focus event will ignore the `minLength` property and will always call `fetch`.\n     */\n    showOnFocus?: boolean;\n\n    /**\n     * This method will be called to prepare suggestions and then pass them to autocomplete.\n     * @param {string} text - text in the input field\n     * @param {(items: T[] | false) => void} update - a callback function that must be called after suggestions are prepared\n     * @param {EventTrigger} trigger - type of the event that triggered the fetch\n     * @param {number} cursorPos - position of the cursor in the input field\n     */\n    fetch: (text: string, update: (items: T[] | false) => void, trigger: EventTrigger, cursorPos: number) => void;\n\n    /**\n     * Enforces that the fetch function will only be called once within the specified time frame (in milliseconds) and\n     * delays execution. This prevents flooding your server with AJAX requests.\n     */\n    debounceWaitMs?: number;\n\n    /**\n     * Callback for additional autocomplete customization\n     * @param {HTMLInputElement | HTMLTextAreaElement} input - input box associated with autocomplete\n     * @param {ClientRect | DOMRect} inputRect - size of the input box and its position relative to the viewport\n     * @param {HTMLDivElement} container - container with suggestions\n     * @param {number} maxHeight - max height that can be used by autocomplete\n     */\n    customize?: (input: HTMLInputElement | HTMLTextAreaElement, inputRect: ClientRect | DOMRect, container: HTMLDivElement, maxHeight: number) => void;\n\n    /**\n     * Prevents automatic form submit when ENTER is pressed\n     */\n    preventSubmit?: boolean;\n\n    /**\n     * Prevents the first item in the list from being selected automatically. This option allows you\n     * to submit a custom text by pressing ENTER even when autocomplete is displayed.\n     */\n    disableAutoSelect?: boolean;\n\n    /**\n     * Keys that will be ignored and not trigger the fetch callback.\n     */\n    keysToIgnore?: Keys[];\n}\n\nexport interface AutocompleteResult {\n    destroy: () => void;\n}\n\nexport const enum Keys {\n    Enter = 13,\n    Esc = 27,\n    Up = 38,\n    Down = 40,\n    Left = 37,\n    Right = 39,\n    Shift = 16,\n    Ctrl = 17,\n    Alt = 18,\n    CapsLock = 20,\n    WindowsKey = 91,\n    Tab = 9,\n    F1 = 112,\n    F12 = 123\n}\n\nexport default function autocomplete<T extends AutocompleteItem>(settings: AutocompleteSettings<T>): AutocompleteResult {\n\n    // just an alias to minimize JS file size\n    const doc = document;\n\n    const container: HTMLDivElement = settings.container || doc.createElement(\"div\");\n    container.id = container.id || \"autocomplete-\" + uid();\n    const containerStyle = container.style;\n    const debounceWaitMs = settings.debounceWaitMs || 0;\n    const preventSubmit = settings.preventSubmit || false;\n    const disableAutoSelect = settings.disableAutoSelect || false;\n\n    let items: T[] = [];\n    let inputValue = \"\";\n    let minLen = 2;\n    const showOnFocus = settings.showOnFocus;\n    let selected: T | undefined;\n    let keypressCounter = 0;\n    let debounceTimer: number | undefined;\n\n    if (settings.minLength !== undefined) {\n        minLen = settings.minLength;\n    }\n\n    if (!settings.input) {\n        throw new Error(\"input undefined\");\n    }\n\n    const input: HTMLInputElement | HTMLTextAreaElement = settings.input;\n\n    container.className = \"autocomplete \" + (settings.className || \"\");\n    container.setAttribute(\"role\", \"listbox\");\n\n    input.setAttribute(\"role\", \"combobox\");\n    input.setAttribute(\"aria-expanded\", \"false\");\n    input.setAttribute(\"aria-autocomplete\", \"list\");\n    input.setAttribute(\"aria-controls\", container.id);\n    input.setAttribute(\"aria-owns\", container.id);\n    input.setAttribute(\"aria-activedescendant\", \"\");\n    input.setAttribute(\"aria-haspopup\", \"listbox\");\n\n    // IOS implementation for fixed positioning has many bugs, so we will use absolute positioning\n    containerStyle.position = \"absolute\";\n\n    /**\n     * Generate a unique ID\n     */\n    function uid(): string {\n        return Date.now().toString(36) + Math.random().toString(36).substring(2);\n    }\n\n    /**\n     * Detach the container from DOM\n     */\n    function detach(): void {\n        const parent = container.parentNode;\n        if (parent) {\n            parent.removeChild(container);\n        }\n    }\n\n    /**\n     * Clear debouncing timer if assigned\n     */\n    function clearDebounceTimer(): void {\n        if (debounceTimer) {\n            window.clearTimeout(debounceTimer);\n        }\n    }\n\n    /**\n     * Attach the container to DOM\n     */\n    function attach(): void {\n        if (!container.parentNode) {\n            doc.body.appendChild(container);\n        }\n    }\n\n    /**\n     * Check if container for autocomplete is displayed\n     */\n    function containerDisplayed(): boolean {\n        return !!container.parentNode;\n    }\n\n    /**\n     * Clear autocomplete state and hide container\n     */\n    function clear(): void {\n        // prevent the update call if there are pending AJAX requests\n        keypressCounter++;\n\n        items = [];\n        inputValue = \"\";\n        selected = undefined;\n        input.setAttribute(\"aria-activedescendant\", \"\");\n        input.setAttribute(\"aria-expanded\", \"false\");\n        detach();\n    }\n\n    /**\n     * Update autocomplete position\n     */\n    function updatePosition(): void {\n        if (!containerDisplayed()) {\n            return;\n        }\n\n        input.setAttribute(\"aria-expanded\", \"true\");\n\n        containerStyle.height = \"auto\";\n        containerStyle.width = input.offsetWidth + \"px\";\n\n        let maxHeight = 0;\n        let inputRect: ClientRect | DOMRect | undefined;\n\n        function calc() {\n            const docEl = doc.documentElement as HTMLElement;\n            const clientTop = docEl.clientTop || doc.body.clientTop || 0;\n            const clientLeft = docEl.clientLeft || doc.body.clientLeft || 0;\n            const scrollTop = window.pageYOffset || docEl.scrollTop;\n            const scrollLeft = window.pageXOffset || docEl.scrollLeft;\n\n            inputRect = input.getBoundingClientRect();\n\n            const top = inputRect.top + input.offsetHeight + scrollTop - clientTop;\n            const left = inputRect.left + scrollLeft - clientLeft;\n\n            containerStyle.top = top + \"px\";\n            containerStyle.left = left + \"px\";\n\n            maxHeight = window.innerHeight - (inputRect.top + input.offsetHeight);\n\n            if (maxHeight < 0) {\n                maxHeight = 0;\n            }\n\n            containerStyle.top = top + \"px\";\n            containerStyle.bottom = \"\";\n            containerStyle.left = left + \"px\";\n            containerStyle.maxHeight = maxHeight + \"px\";\n        }\n\n        // the calc method must be called twice, otherwise the calculation may be wrong on resize event (chrome browser)\n        calc();\n        calc();\n\n        if (settings.customize && inputRect) {\n            settings.customize(input, inputRect, container, maxHeight);\n        }\n    }\n\n    /**\n     * Redraw the autocomplete div element with suggestions\n     */\n    function update(): void {\n\n        // delete all children from autocomplete DOM container\n        while (container.firstChild) {\n            container.removeChild(container.firstChild);\n        }\n\n        input.setAttribute(\"aria-activedescendant\", \"\");\n\n        // function for rendering autocomplete suggestions\n        let render = function (item: T, _: string, __: number): HTMLDivElement | undefined {\n            const itemElement = doc.createElement(\"div\");\n            itemElement.textContent = item.label || \"\";\n            return itemElement;\n        };\n        if (settings.render) {\n            render = settings.render;\n        }\n\n        // function to render autocomplete groups\n        let renderGroup = function (groupName: string, _: string): HTMLDivElement | undefined {\n            const groupDiv = doc.createElement(\"div\");\n            groupDiv.textContent = groupName;\n            return groupDiv;\n        };\n        if (settings.renderGroup) {\n            renderGroup = settings.renderGroup;\n        }\n\n        const fragment = doc.createDocumentFragment();\n        let prevGroup = \"#9?$\";\n\n        items.forEach(function (item: T, index: number): void {\n            if (item.group && item.group !== prevGroup) {\n                prevGroup = item.group;\n                const groupDiv = renderGroup(item.group, inputValue);\n                if (groupDiv) {\n                    groupDiv.className += \" group\";\n                    fragment.appendChild(groupDiv);\n                }\n            }\n            const div = render(item, inputValue, index);\n            if (div) {\n                div.id = `${container.id}_${index}`;\n                div.setAttribute(\"role\", \"option\");\n                div.addEventListener(\"click\", function (ev: MouseEvent): void {\n                    settings.onSelect(item, input);\n                    clear();\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                });\n                if (item === selected) {\n                    div.className += \" selected\";\n                    div.setAttribute(\"aria-selected\", \"true\");\n                    input.setAttribute(\"aria-activedescendant\", div.id);\n                }\n                fragment.appendChild(div);\n            }\n        });\n        container.appendChild(fragment);\n        if (items.length < 1) {\n            if (settings.emptyMsg) {\n                const empty = doc.createElement(\"div\");\n                empty.id = `${container.id}_${uid()}`;\n                empty.className = \"empty\";\n                empty.textContent = settings.emptyMsg;\n                container.appendChild(empty);\n                input.setAttribute(\"aria-activedescendant\", empty.id);\n            } else {\n                clear();\n                return;\n            }\n        }\n\n        attach();\n        updatePosition();\n\n        updateScroll();\n    }\n\n    function updateIfDisplayed(): void {\n        if (containerDisplayed()) {\n            update();\n        }\n    }\n\n    function resizeEventHandler(): void {\n        updateIfDisplayed();\n    }\n\n    function scrollEventHandler(e: Event): void {\n        if (e.target !== container) {\n            updateIfDisplayed();\n        } else {\n            e.preventDefault();\n        }\n    }\n\n    function keyupEventHandler(ev: KeyboardEvent): void {\n        const keyCode = ev.which || ev.keyCode || 0;\n\n        const ignore = settings.keysToIgnore || [Keys.Up, Keys.Enter, Keys.Esc, Keys.Right, Keys.Left, Keys.Shift, Keys.Ctrl, Keys.Alt, Keys.CapsLock, Keys.WindowsKey, Keys.Tab];\n        for (const key of ignore) {\n            if (keyCode === key) {\n                return;\n            }\n        }\n\n        if (keyCode >= Keys.F1 && keyCode <= Keys.F12 && !settings.keysToIgnore) {\n            return;\n        }\n\n        // the down key is used to open autocomplete\n        if (keyCode === Keys.Down && containerDisplayed()) {\n            return;\n        }\n\n        startFetch(EventTrigger.Keyboard);\n    }\n\n    /**\n     * Automatically move scroll bar if selected item is not visible\n     */\n    function updateScroll(): void {\n        const elements = container.getElementsByClassName(\"selected\");\n        if (elements.length > 0) {\n            let element = elements[0] as HTMLDivElement;\n\n            // make group visible\n            const previous = element.previousElementSibling as HTMLDivElement;\n            if (previous && previous.className.indexOf(\"group\") !== -1 && !previous.previousElementSibling) {\n                element = previous;\n            }\n\n            if (element.offsetTop < container.scrollTop) {\n                container.scrollTop = element.offsetTop;\n            } else {\n                const selectBottom = element.offsetTop + element.offsetHeight;\n                const containerBottom = container.scrollTop + container.offsetHeight;\n                if (selectBottom > containerBottom) {\n                    container.scrollTop += selectBottom - containerBottom;\n                }\n            }\n        }\n    }\n\n    /**\n     * Select the previous item in suggestions\n     */\n    function selectPrev(): void {\n        if (items.length < 1) {\n            selected = undefined;\n        } else {\n            if (selected === items[0]) {\n                selected = items[items.length - 1];\n            } else {\n                for (let i = items.length - 1; i > 0; i--) {\n                    if (selected === items[i] || i === 1) {\n                        selected = items[i - 1];\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Select the next item in suggestions\n     */\n    function selectNext(): void {\n        if (items.length < 1) {\n            selected = undefined;\n        }\n        if (!selected || selected === items[items.length - 1]) {\n            selected = items[0];\n            return;\n        }\n        for (let i = 0; i < (items.length - 1); i++) {\n            if (selected === items[i]) {\n                selected = items[i + 1];\n                break;\n            }\n        }\n    }\n\n    function keydownEventHandler(ev: KeyboardEvent): void {\n        const keyCode = ev.which || ev.keyCode || 0;\n\n        if (keyCode === Keys.Up || keyCode === Keys.Down || keyCode === Keys.Esc) {\n            const containerIsDisplayed = containerDisplayed();\n\n            if (keyCode === Keys.Esc) {\n                clear();\n            } else {\n                if (!containerIsDisplayed || items.length < 1) {\n                    return;\n                }\n                keyCode === Keys.Up\n                    ? selectPrev()\n                    : selectNext();\n                update();\n            }\n\n            ev.preventDefault();\n            if (containerIsDisplayed) {\n                ev.stopPropagation();\n            }\n\n            return;\n        }\n\n        if (keyCode === Keys.Enter) {\n            if (selected) {\n                settings.onSelect(selected, input);\n                clear();\n            }\n\n            if (preventSubmit) {\n                ev.preventDefault();\n            }\n        }\n    }\n\n    function focusEventHandler(): void {\n        if (showOnFocus) {\n            startFetch(EventTrigger.Focus);\n        }\n    }\n\n    function startFetch(trigger: EventTrigger) {\n        // If multiple keys were pressed, before we get an update from server,\n        // this may cause redrawing autocomplete multiple times after the last key was pressed.\n        // To avoid this, the number of times keyboard was pressed will be saved and checked before redraw.\n        const savedKeypressCounter = ++keypressCounter;\n\n        const inputText = input.value;\n        const cursorPos = input.selectionStart || 0;\n\n        if (inputText.length >= minLen || trigger === EventTrigger.Focus) {\n            clearDebounceTimer();\n            debounceTimer = window.setTimeout(function (): void {\n                settings.fetch(inputText, function (elements: T[] | false): void {\n                    if (keypressCounter === savedKeypressCounter && elements) {\n                        items = elements;\n                        inputValue = inputText;\n                        selected = (items.length < 1 || disableAutoSelect) ? undefined : items[0];\n                        update();\n                    }\n                }, trigger, cursorPos);\n            }, trigger === EventTrigger.Keyboard ? debounceWaitMs : 0);\n        } else {\n            clear();\n        }\n    }\n\n    function blurEventHandler(): void {\n        // we need to delay clear, because when we click on an item, blur will be called before click and remove items from DOM\n        setTimeout(() => {\n            if (doc.activeElement !== input) {\n                clear();\n            }\n        }, 200);\n    }\n\n    /**\n     * Fixes #26: on long clicks focus will be lost and onSelect method will not be called\n     */\n    container.addEventListener(\"mousedown\", function (evt: Event) {\n        evt.stopPropagation();\n        evt.preventDefault();\n    });\n\n    /**\n     * Fixes #30: autocomplete closes when scrollbar is clicked in IE\n     * See: https://stackoverflow.com/a/9210267/13172349\n     */\n    container.addEventListener(\"focus\", () => input.focus());\n\n    /**\n     * This function will remove DOM elements and clear event handlers\n     */\n    function destroy(): void {\n        input.removeEventListener(\"focus\", focusEventHandler);\n        input.removeEventListener(\"keydown\", keydownEventHandler as EventListenerOrEventListenerObject);\n        input.removeEventListener(\"keyup\", keyupEventHandler as EventListenerOrEventListenerObject);\n        input.removeEventListener(\"blur\", blurEventHandler);\n        window.removeEventListener(\"resize\", resizeEventHandler);\n        doc.removeEventListener(\"scroll\", scrollEventHandler, true);\n        input.removeAttribute(\"role\");\n        input.removeAttribute(\"aria-expanded\");\n        input.removeAttribute(\"aria-autocomplete\");\n        input.removeAttribute(\"aria-controls\");\n        input.removeAttribute(\"aria-activedescendant\");\n        input.removeAttribute(\"aria-owns\");\n        input.removeAttribute(\"aria-haspopup\");\n        clearDebounceTimer();\n        clear();\n    }\n\n    // setup event handlers\n    input.addEventListener(\"keydown\", keydownEventHandler as EventListenerOrEventListenerObject);\n    input.addEventListener(\"keyup\", keyupEventHandler as EventListenerOrEventListenerObject);\n    input.addEventListener(\"blur\", blurEventHandler);\n    input.addEventListener(\"focus\", focusEventHandler);\n    window.addEventListener(\"resize\", resizeEventHandler);\n    doc.addEventListener(\"scroll\", scrollEventHandler, true);\n\n    return {\n        destroy\n    };\n}\n", "/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { AutocompleteResult, AutocompleteSettings } from \"autocompleter\";\nimport { inject, injectable } from \"inversify\";\nimport { Action, isAction } from 'sprotty-protocol/lib/actions';\nimport { LabeledAction, isLabeledAction } from \"../../base/actions/action\";\nimport { IActionDispatcherProvider } from \"../../base/actions/action-dispatcher\";\nimport { SModelElement, SModelRoot } from \"../../base/model/smodel\";\nimport { TYPES } from \"../../base/types\";\nimport { AbstractUIExtension } from \"../../base/ui-extensions/ui-extension\";\nimport { SetUIExtensionVisibilityAction } from \"../../base/ui-extensions/ui-extension-registry\";\nimport { DOMHelper } from \"../../base/views/dom-helper\";\nimport { KeyListener } from \"../../base/views/key-tool\";\nimport { ViewerOptions } from \"../../base/views/viewer-options\";\nimport { codiconCSSClasses, codiconCSSString } from \"../../utils/codicon\";\nimport { toArray } from \"../../utils/iterable\";\nimport { matchesKeystroke } from \"../../utils/keyboard\";\nimport { getAbsoluteClientBounds } from \"../bounds/model\";\nimport { isSelectable } from \"../select/model\";\nimport { CommandPaletteActionProviderRegistry } from \"./action-providers\";\nimport { MousePositionTracker } from \"../../base/views/mouse-tool\";\nimport configureAutocomplete from \"autocompleter\";\n\n@injectable()\nexport class CommandPalette extends AbstractUIExtension {\n    static readonly ID = \"command-palette\";\n    static readonly isInvokePaletteKey = (event: KeyboardEvent) => matchesKeystroke(event, 'Space', 'ctrl');\n\n    protected loadingIndicatorClasses = codiconCSSClasses('loading', false, true, ['loading']);\n    protected xOffset = 20;\n    protected yOffset = 20;\n    protected defaultWidth = 400;\n    protected debounceWaitMs = 100;\n    protected noCommandsMsg = \"No commands available\";\n\n    protected inputElement: HTMLInputElement;\n    protected loadingIndicator: HTMLSpanElement;\n    protected autoCompleteResult: AutocompleteResult;\n    protected paletteIndex = 0;\n    protected contextActions?: LabeledAction[];\n\n    @inject(TYPES.IActionDispatcherProvider) protected actionDispatcherProvider: IActionDispatcherProvider;\n    @inject(TYPES.ICommandPaletteActionProviderRegistry) protected actionProviderRegistry: CommandPaletteActionProviderRegistry;\n    @inject(TYPES.ViewerOptions) protected viewerOptions: ViewerOptions;\n    @inject(TYPES.DOMHelper) protected domHelper: DOMHelper;\n    @inject(MousePositionTracker) protected mousePositionTracker: MousePositionTracker;\n\n    public id() { return CommandPalette.ID; }\n    public containerClass() { return \"command-palette\"; }\n\n    override show(root: Readonly<SModelRoot>, ...contextElementIds: string[]) {\n        super.show(root, ...contextElementIds);\n        this.paletteIndex = 0;\n        this.contextActions = undefined;\n        this.inputElement!.value = \"\";\n        this.autoCompleteResult = configureAutocomplete(this.autocompleteSettings(root));\n        this.inputElement.focus();\n    }\n\n    protected initializeContents(containerElement: HTMLElement) {\n        containerElement.style.position = \"absolute\";\n        this.inputElement = document.createElement('input');\n        this.inputElement.style.width = '100%';\n        this.inputElement.addEventListener('keydown', (event) => this.hideIfEscapeEvent(event));\n        this.inputElement.addEventListener('keydown', (event) => this.cylceIfInvokePaletteKey(event));\n        this.inputElement.onblur = () => window.setTimeout(() => this.hide(), 200);\n        containerElement.appendChild(this.inputElement);\n    }\n\n    protected hideIfEscapeEvent(event: KeyboardEvent): any {\n        if (matchesKeystroke(event, 'Escape')) { this.hide(); }\n    }\n\n    protected cylceIfInvokePaletteKey(event: KeyboardEvent): any {\n        if (CommandPalette.isInvokePaletteKey(event)) { this.cycle(); }\n    }\n\n    protected cycle() {\n        this.contextActions = undefined;\n        this.paletteIndex++;\n    }\n\n    protected override onBeforeShow(containerElement: HTMLElement, root: Readonly<SModelRoot>, ...selectedElementIds: string[]) {\n        let x = this.xOffset;\n        let y = this.yOffset;\n        const selectedElements = toArray(root.index.all().filter(e => isSelectable(e) && e.selected));\n        if (selectedElements.length === 1) {\n            const bounds = getAbsoluteClientBounds(selectedElements[0], this.domHelper, this.viewerOptions);\n            x += bounds.x + bounds.width;\n            y += bounds.y;\n        } else {\n            const bounds = getAbsoluteClientBounds(root, this.domHelper, this.viewerOptions);\n            x += bounds.x;\n            y += bounds.y;\n        }\n        containerElement.style.left = `${x}px`;\n        containerElement.style.top = `${y}px`;\n        containerElement.style.width = `${this.defaultWidth}px`;\n    }\n\n    protected autocompleteSettings(root: Readonly<SModelRoot>): AutocompleteSettings<LabeledAction> {\n        return {\n            input: this.inputElement,\n            emptyMsg: this.noCommandsMsg,\n            className: \"command-palette-suggestions\",\n            debounceWaitMs: this.debounceWaitMs,\n            showOnFocus: true,\n            minLength: -1,\n            fetch: (text: string, update: (items: LabeledAction[]) => void) =>\n                this.updateAutoCompleteActions(update, text, root),\n            onSelect: (item: LabeledAction) => this.onSelect(item),\n            render: (item: LabeledAction, currentValue: string): HTMLDivElement | undefined =>\n                this.renderLabeledActionSuggestion(item, currentValue),\n            customize: (input: HTMLInputElement, inputRect: ClientRect | DOMRect, container: HTMLDivElement, maxHeight: number) => {\n                this.customizeSuggestionContainer(container, inputRect, maxHeight);\n            }\n        };\n    }\n\n    protected onSelect(item: LabeledAction) {\n        this.executeAction(item);\n        this.hide();\n    }\n\n    protected updateAutoCompleteActions(update: (items: LabeledAction[]) => void, text: string, root: Readonly<SModelRoot>) {\n        this.onLoading();\n        if (this.contextActions) {\n            update(this.filterActions(text, this.contextActions));\n            this.onLoaded('success');\n        } else {\n            this.actionProviderRegistry\n                .getActions(root, text, this.mousePositionTracker.lastPositionOnDiagram, this.paletteIndex)\n                .then(actions => {\n                    this.contextActions = actions;\n                    update(this.filterActions(text, actions));\n                    this.onLoaded('success');\n                })\n                .catch((reason) => {\n                    this.logger.error(this, \"Failed to obtain actions from command palette action providers\", reason);\n                    this.onLoaded('error');\n                });\n        }\n    }\n\n    protected onLoading() {\n        if (this.loadingIndicator && this.containerElement.contains(this.loadingIndicator)) {\n            return;\n        }\n        this.loadingIndicator = document.createElement('span');\n        this.loadingIndicator.classList.add(...this.loadingIndicatorClasses);\n        this.containerElement.appendChild(this.loadingIndicator);\n    }\n\n    protected onLoaded(success: 'success' | 'error') {\n        if (this.containerElement.contains(this.loadingIndicator)) {\n            this.containerElement.removeChild(this.loadingIndicator);\n        }\n    }\n\n    protected renderLabeledActionSuggestion(item: LabeledAction, value: string) {\n        const itemElement = document.createElement(\"div\");\n        const wordMatcher = espaceForRegExp(value).split(\" \").join(\"|\");\n        const regex = new RegExp(wordMatcher, \"gi\");\n        if (item.icon) {\n            this.renderIcon(itemElement, item.icon);\n        }\n        if (value.length > 0) {\n            itemElement.innerHTML += item.label.replace(regex, (match) => \"<em>\" + match + \"</em>\").replace(/ /g, '&nbsp;');\n        } else {\n            itemElement.innerHTML += item.label.replace(/ /g, '&nbsp;');\n        }\n        return itemElement;\n    }\n\n    protected renderIcon(itemElement: HTMLDivElement, iconId: string) {\n        itemElement.innerHTML += `<span class=\"icon ${this.getCodicon(iconId)}\"></span>`;\n    }\n\n    protected getFontAwesomeIcon(iconId: string) {\n        return `fa fa-${iconId}`;\n    }\n\n    protected getCodicon(iconId: string) {\n        return codiconCSSString(iconId);\n    }\n\n    protected filterActions(filterText: string, actions: LabeledAction[]): LabeledAction[] {\n        return toArray(actions.filter(action => {\n            const label = action.label.toLowerCase();\n            const searchWords = filterText.split(' ');\n            return searchWords.every(word => label.indexOf(word.toLowerCase()) !== -1);\n        }));\n    }\n\n    protected customizeSuggestionContainer(container: HTMLDivElement, inputRect: ClientRect | DOMRect, maxHeight: number) {\n        // move container into our command palette container as this is already positioned correctly\n        if (this.containerElement) {\n            this.containerElement.appendChild(container);\n        }\n    }\n\n    override hide() {\n        super.hide();\n        if (this.autoCompleteResult) {\n            this.autoCompleteResult.destroy();\n        }\n    }\n\n    protected executeAction(input: LabeledAction | Action[] | Action) {\n        this.actionDispatcherProvider()\n            .then((actionDispatcher) => actionDispatcher.dispatchAll(toActionArray(input)))\n            .catch((reason) => this.logger.error(this, 'No action dispatcher available to execute command palette action', reason));\n    }\n}\n\nfunction toActionArray(input: LabeledAction | Action[] | Action): Action[] {\n    if (isLabeledAction(input)) {\n        return input.actions;\n    } else if (isAction(input)) {\n        return [input];\n    }\n    return [];\n}\n\nfunction espaceForRegExp(value: string): string {\n    return value.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n}\n\nexport class CommandPaletteKeyListener extends KeyListener {\n    override keyDown(element: SModelElement, event: KeyboardEvent): Action[] {\n        if (matchesKeystroke(event, 'Escape')) {\n            return [SetUIExtensionVisibilityAction.create({ extensionId: CommandPalette.ID, visible: false, contextElementsId: [] })];\n        } else if (CommandPalette.isInvokePaletteKey(event)) {\n            const selectedElements = toArray(element.index.all().filter(e => isSelectable(e) && e.selected).map(e => e.id));\n            return [SetUIExtensionVisibilityAction.create({ extensionId: CommandPalette.ID, visible: true, contextElementsId: selectedElements })];\n        }\n        return [];\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { LabeledAction } from \"../../base/actions/action\";\n\nexport interface MenuItem extends LabeledAction {\n    /** Technical id of the menu item. */\n    readonly id: string;\n    /** String indicating the order. */\n    readonly sortString?: string;\n    /** String indicating the grouping (separators). Items with equal group will be in the same group. */\n    readonly group?: string;\n    /**\n     * The optional parent id can be used to add this element as a child of another element provided by anohter menu provider.\n     * The `parentId` must be fully qualified in the form of `a.b.c`, whereas `a`, `b` and `c` are referring to the IDs of other elements.\n     * Note that this attribute will only be considered for root items of a provider and not for children of provided items.\n     */\n    readonly parentId?: string;\n    /** Function determining whether the element is enabled. */\n    readonly isEnabled?: () => boolean;\n    /** Function determining whether the element is visible. */\n    readonly isVisible?: () => boolean;\n    /** Function determining whether the element is toggled on or off. */\n    readonly isToggled?: () => boolean;\n    /** Children of this item. If this item has children, they will be added into a submenu of this item. */\n    children?: MenuItem[];\n}\n\nexport type Anchor = MouseEvent | { x: number, y: number };\n\nexport function toAnchor(anchor: HTMLElement | { x: number, y: number }): Anchor {\n    return anchor instanceof HTMLElement ? { x: anchor.offsetLeft, y: anchor.offsetTop } : anchor;\n}\n\nexport interface IContextMenuService {\n    show(items: MenuItem[], anchor: Anchor, onHide?: () => void): void;\n}\n\nexport type IContextMenuServiceProvider = () => Promise<IContextMenuService>;\n", "/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport { Action } from 'sprotty-protocol/lib/actions';\nimport { Command, CommandExecutionContext, CommandReturn } from '../../base/commands/command';\nimport { SModelElement, SParentElement, SChildElement } from '../../base/model/smodel';\nimport { SModelExtension } from '../../base/model/smodel-extension';\nimport { TYPES } from '../../base/types';\n\nexport const deletableFeature = Symbol('deletableFeature');\n\nexport interface Deletable extends SModelExtension {\n}\n\nexport function isDeletable<T extends SModelElement>(element: T): element is T & Deletable & SChildElement {\n    return element instanceof SChildElement && element.hasFeature(deletableFeature);\n}\n\n/**\n * Delete a set of elements identified by their IDs.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\n export interface DeleteElementAction extends Action {\n    kind: typeof DeleteElementAction.KIND\n    elementIds: string[]\n}\nexport namespace DeleteElementAction {\n    export const KIND = 'delete';\n\n    export function create(elementIds: string[]): DeleteElementAction {\n        return {\n            kind: KIND,\n            elementIds\n        };\n    }\n}\n\nexport class ResolvedDelete {\n    child: SChildElement;\n    parent: SParentElement;\n}\n\n@injectable()\nexport class DeleteElementCommand extends Command {\n    static readonly KIND = DeleteElementAction.KIND;\n\n    resolvedDeletes: ResolvedDelete[] = [];\n\n    constructor(@inject(TYPES.Action) protected readonly action: DeleteElementAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        const index = context.root.index;\n        for (const id of this.action.elementIds) {\n            const element = index.getById(id);\n            if (element && isDeletable(element)) {\n                this.resolvedDeletes.push({ child: element, parent: element.parent });\n                element.parent.remove(element);\n            }\n        }\n        return context.root;\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        for (const resolvedDelete of this.resolvedDeletes)\n            resolvedDelete.parent.add(resolvedDelete.child);\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        for (const resolvedDelete of this.resolvedDeletes)\n            resolvedDelete.parent.remove(resolvedDelete.child);\n        return context.root;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, multiInject, optional } from 'inversify';\nimport { Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { MenuItem } from './context-menu-service';\nimport { SModelRoot } from '../../base/model/smodel';\nimport { LabeledAction } from '../../base/actions/action';\nimport { TYPES } from '../../base/types';\nimport { isDeletable } from '../edit/delete';\nimport { isSelected } from '../select/model';\nimport { DeleteElementAction } from 'sprotty-protocol';\n\nexport interface IContextMenuItemProvider {\n    getItems(root: Readonly<SModelRoot>, lastMousePosition?: Point): Promise<LabeledAction[]>;\n}\n\n@injectable()\nexport class ContextMenuProviderRegistry implements IContextMenuItemProvider {\n\n    constructor(@multiInject(TYPES.IContextMenuItemProvider) @optional() protected menuProviders: IContextMenuItemProvider[] = []) { }\n\n    getItems(root: Readonly<SModelRoot>, lastMousePosition?: Point) {\n        const menues = this.menuProviders.map(provider => provider.getItems(root, lastMousePosition));\n        return Promise.all(menues).then(this.flattenAndRestructure);\n    }\n\n    private flattenAndRestructure(p: MenuItem[][]): MenuItem[] {\n        let menuItems = p.reduce((acc, promise) => promise !== undefined ? acc.concat(promise) : acc, []);\n        const menuItemsWithParentId = menuItems.filter(menuItem => menuItem.parentId);\n        for (const menuItem of menuItemsWithParentId) {\n            if (menuItem.parentId) {\n                const fragments = menuItem.parentId.split('.');\n                let matchingParent: MenuItem | undefined = undefined;\n                let nextParents = menuItems;\n                for (const fragment of fragments) {\n                    matchingParent = nextParents.find(item => fragment === item.id);\n                    if (matchingParent && matchingParent.children)\n                        nextParents = matchingParent.children;\n                }\n                if (matchingParent) {\n                    if (matchingParent.children) {\n                        matchingParent.children.push(menuItem);\n                    } else {\n                        matchingParent.children = [menuItem];\n                    }\n                    menuItems = menuItems.filter(item => item !== menuItem);\n                }\n            }\n        }\n        return menuItems;\n    }\n}\n\n@injectable()\nexport class DeleteContextMenuItemProvider implements IContextMenuItemProvider {\n    getItems(root: Readonly<SModelRoot>, lastMousePosition?: Point): Promise<MenuItem[]> {\n        const selectedElements = Array.from(root.index.all().filter(isSelected).filter(isDeletable));\n        return Promise.resolve([\n            {\n                id: 'delete',\n                label: 'Delete',\n                sortString: 'd',\n                group: 'edit',\n                actions: [DeleteElementAction.create(selectedElements.map(e => e.id))],\n                isEnabled: () => selectedElements.length > 0\n            }\n        ]);\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject } from \"inversify\";\nimport { Action, SelectAction } from \"sprotty-protocol/lib/actions\";\nimport { IActionDispatcher } from \"../../base/actions/action-dispatcher\";\nimport { IContextMenuServiceProvider, IContextMenuService } from \"./context-menu-service\";\nimport { ContextMenuProviderRegistry } from \"./menu-providers\";\nimport { MouseListener } from \"../../base/views/mouse-tool\";\nimport { TYPES } from \"../../base/types\";\nimport { SModelElement } from \"../../base/model/smodel\";\nimport { isSelectable, isSelected } from \"../select/model\";\nimport { findParentByFeature } from \"../../base/model/smodel-utils\";\n\nexport class ContextMenuMouseListener extends MouseListener {\n    @inject(TYPES.IActionDispatcher) protected actionDispatcher: IActionDispatcher;\n    constructor(\n        @inject(TYPES.IContextMenuServiceProvider) protected readonly contextMenuService: IContextMenuServiceProvider,\n        @inject(TYPES.IContextMenuProviderRegistry) protected readonly menuProvider: ContextMenuProviderRegistry) {\n        super();\n    }\n\n    override contextMenu(target: SModelElement, event: MouseEvent): (Action | Promise<Action>)[] {\n        this.showContextMenu(target, event);\n        return [];\n    }\n\n    protected async showContextMenu(target: SModelElement, event: MouseEvent): Promise<void> {\n        let menuService: IContextMenuService;\n        try {\n            menuService = await this.contextMenuService();\n        } catch (rejected) {\n            // IContextMenuService is not bound => do nothing\n            return;\n        }\n        const mousePosition = { x: event.x, y: event.y };\n        const root = target.root;\n        const id = target.id;\n        let isTargetSelected = false;\n        const selectableTarget = findParentByFeature(target, isSelectable);\n        if (selectableTarget) {\n            isTargetSelected = selectableTarget.selected;\n            selectableTarget.selected = true;\n        }\n        const restoreSelection = () => { if (selectableTarget) selectableTarget.selected = isTargetSelected; };\n\n        if (isSelectable(target)) {\n            if (isSelected(target)) {\n                const menuItems = await this.menuProvider.getItems(target.root, mousePosition);\n                menuService.show(menuItems, mousePosition, restoreSelection);\n            } else {\n                const options = {selectedElementsIDs: [id], deselectedElementsIDs: Array.from(root.index.all().filter(isSelected), (val) => {return val.id;})};\n                await this.actionDispatcher.dispatch(SelectAction.create(options));\n                const items = await this.menuProvider.getItems(root, mousePosition);\n                menuService.show(items, mousePosition);\n            }\n        }\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SModelElement } from '../../base/model/smodel';\nimport { SModelExtension } from '../../base/model/smodel-extension';\n\nexport const hoverFeedbackFeature = Symbol('hoverFeedbackFeature');\n\nexport interface Hoverable extends SModelExtension {\n    hoverFeedback: boolean\n}\n\nexport function isHoverable(element: SModelElement): element is SModelElement & Hoverable {\n    return element.hasFeature(hoverFeedbackFeature);\n}\n\nexport const popupFeature = Symbol('popupFeature');\n\nexport function hasPopupFeature(element: SModelElement): boolean {\n    return element.hasFeature(popupFeature);\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { SModelElement } from '../../base/model/smodel';\nimport { SModelExtension } from '../../base/model/smodel-extension';\n\nexport const moveFeature = Symbol('moveFeature');\n\n/**\n * An element that can be placed at a specific location using its position\n * property.\n */\nexport interface Locateable extends SModelExtension {\n    position: Point\n}\n\nexport function isLocateable(element: SModelElement): element is SModelElement & Locateable {\n    return (element as any)['position'] !== undefined;\n}\n\nexport function isMoveable(element: SModelElement): element is SModelElement & Locateable {\n    return element.hasFeature(moveFeature) && isLocateable(element);\n}\n", "/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Bounds, Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { SChildElement, SModelElement } from '../../base/model/smodel';\nimport { SModelExtension } from '../../base/model/smodel-extension';\nimport { FluentIterable } from '../../utils/iterable';\nimport { SShapeElement } from '../bounds/model';\nimport { deletableFeature } from '../edit/delete';\nimport { Selectable, selectFeature } from '../select/model';\nimport { Hoverable, hoverFeedbackFeature } from '../hover/model';\nimport { moveFeature } from '../move/model';\n\nexport abstract class SRoutableElement extends SChildElement {\n    routerKind?: string;\n    routingPoints: Point[] = [];\n    sourceId: string;\n    targetId: string;\n    sourceAnchorCorrection?: number;\n    targetAnchorCorrection?: number;\n\n    get source(): SConnectableElement | undefined {\n        return this.index.getById(this.sourceId) as SConnectableElement;\n    }\n\n    get target(): SConnectableElement | undefined {\n        return this.index.getById(this.targetId) as SConnectableElement;\n    }\n\n    get bounds(): Bounds {\n        // this should also work for splines, which have the convex hull property\n        return this.routingPoints.reduce<Bounds>((bounds, routingPoint) => Bounds.combine(bounds, {\n            x: routingPoint.x,\n            y: routingPoint.y,\n            width: 0,\n            height: 0\n        }), Bounds.EMPTY);\n    }\n}\n\nexport const connectableFeature = Symbol('connectableFeature');\n\nexport interface Connectable extends SModelExtension {\n    canConnect(routable: SRoutableElement, role: 'source' | 'target'): boolean;\n}\n\nexport function isConnectable<T extends SModelElement>(element: T): element is Connectable & T {\n    return element.hasFeature(connectableFeature) && (element as any).canConnect;\n}\n\nexport function getAbsoluteRouteBounds(model: Readonly<SRoutableElement>, route: Point[] = model.routingPoints): Bounds {\n    let bounds = getRouteBounds(route);\n    let current: SModelElement = model;\n    while (current instanceof SChildElement) {\n        const parent = current.parent;\n        bounds = parent.localToParent(bounds);\n        current = parent;\n    }\n    return bounds;\n}\n\nexport function getRouteBounds(route: Point[]): Bounds {\n    const bounds = { x: NaN, y: NaN, width: 0, height: 0};\n    for (const point of route) {\n        if (isNaN(bounds.x)) {\n            bounds.x = point.x;\n            bounds.y = point.y;\n        } else {\n            if (point.x < bounds.x) {\n                bounds.width += bounds.x - point.x;\n                bounds.x = point.x;\n            } else if (point.x > bounds.x + bounds.width) {\n                bounds.width = point.x - bounds.x;\n            }\n            if (point.y < bounds.y) {\n                bounds.height += bounds.y - point.y;\n                bounds.y = point.y;\n            } else if (point.y > bounds.y + bounds.height) {\n                bounds.height = point.y - bounds.y;\n            }\n        }\n    }\n    return bounds;\n}\n\n/**\n * A connectable element is one that can have outgoing and incoming edges, i.e. it can be the source\n * or target element of an edge. There are two kinds of connectable elements: nodes (`SNode`) and\n * ports (`SPort`). A node represents a main entity, while a port is a connection point inside a node.\n */\nexport abstract class SConnectableElement extends SShapeElement implements Connectable {\n\n    get anchorKind(): string | undefined{\n         return undefined;\n     }\n\n    strokeWidth: number = 0;\n\n    /**\n     * The incoming edges of this connectable element. They are resolved by the index, which must\n     * be an `SGraphIndex` for efficient lookup.\n     */\n    get incomingEdges(): FluentIterable<SRoutableElement> {\n        const allEdges = this.index.all().filter(e => e instanceof SRoutableElement) as FluentIterable<SRoutableElement>;\n        return allEdges.filter(e => e.targetId === this.id);\n    }\n\n    /**\n     * The outgoing edges of this connectable element. They are resolved by the index, which must\n     * be an `SGraphIndex` for efficient lookup.\n     */\n    get outgoingEdges(): FluentIterable<SRoutableElement> {\n        const allEdges = this.index.all().filter(e => e instanceof SRoutableElement) as FluentIterable<SRoutableElement>;\n        return allEdges.filter(e => e.sourceId === this.id);\n    }\n\n    canConnect(routable: SRoutableElement, role: 'source' | 'target') {\n        return true;\n    }\n}\n\nexport type RoutingHandleKind = 'junction' | 'line' | 'source' | 'target' | 'manhattan-50%' |\n    'bezier-control-after' | 'bezier-control-before' | 'bezier-junction' | 'bezier-add' | 'bezier-remove';\n\nexport class SRoutingHandle extends SChildElement implements Selectable, Hoverable {\n    static readonly DEFAULT_FEATURES = [selectFeature, moveFeature, hoverFeedbackFeature];\n\n    /**\n     * 'junction' is a point where two line segments meet,\n     * 'line' is a volatile handle placed on a line segment,\n     * 'source' and 'target' are the respective anchors.\n     */\n    kind: RoutingHandleKind;\n    /** The actual routing point index (junction) or the previous point index (line). */\n    pointIndex: number;\n    /** Whether the routing point is being dragged. */\n    editMode: boolean = false;\n\n    hoverFeedback: boolean = false;\n    selected: boolean = false;\n    danglingAnchor?: SDanglingAnchor;\n\n    /**\n     * SRoutingHandles are created using the constructor, so we hard-wire the\n     * default features\n     */\n    override hasFeature(feature: symbol): boolean {\n        return SRoutingHandle.DEFAULT_FEATURES.indexOf(feature) !== -1;\n    }\n}\n\nexport class SDanglingAnchor extends SConnectableElement {\n    static readonly DEFAULT_FEATURES = [deletableFeature];\n\n    original?: SModelElement;\n    override type = 'dangling-anchor';\n\n    constructor() {\n        super();\n        this.size = { width: 0, height: 0 };\n    }\n}\n\nexport const edgeInProgressID = 'edge-in-progress';\nexport const edgeInProgressTargetHandleID = edgeInProgressID + '-target-anchor';\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SModelExtension } from '../../base/model/smodel-extension';\nimport { SModelElement, SChildElement } from '../../base/model/smodel';\nimport { BoundsAware, isBoundsAware } from '../bounds/model';\nimport { SRoutableElement } from '../routing/model';\n\nexport const edgeLayoutFeature = Symbol('edgeLayout');\n\nexport interface EdgeLayoutable extends SModelExtension {\n    edgePlacement: EdgePlacement\n}\n\nexport function isEdgeLayoutable<T extends SModelElement>(element: T): element is T & SChildElement & BoundsAware & EdgeLayoutable {\n    return element instanceof SChildElement\n        && element.parent instanceof SRoutableElement\n        && checkEdgeLayoutable(element)\n        && isBoundsAware(element)\n        && element.hasFeature(edgeLayoutFeature);\n}\n\nfunction checkEdgeLayoutable(element: SChildElement): element is SChildElement & EdgeLayoutable{\n    return 'edgePlacement' in element;\n}\n\nexport type EdgeSide = 'left' | 'right' | 'top' | 'bottom' | 'on';\n\nexport class EdgePlacement extends Object {\n    /**\n     * true, if the label should be rotated to touch the edge tangentially\n     */\n    rotate: boolean;\n\n    /**\n     * where is the label relative to the line's direction\n     */\n    side: EdgeSide;\n\n    /**\n     * between 0 (source anchor) and 1 (target anchor)\n     */\n    position: number;\n\n    /**\n     * space between label and edge/connected nodes\n     */\n    offset: number;\n}\n\nexport const DEFAULT_EDGE_PLACEMENT: EdgePlacement = {\n    rotate: true,\n    side: 'top',\n    position: 0.5,\n    offset: 7\n};\n", "/********************************************************************************\n * Copyright (c) 2017-2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Dimension, Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { SModelElement } from '../../base/model/smodel';\nimport { SModelExtension } from '../../base/model/smodel-extension';\nimport { SRoutableElement } from '../routing/model';\n\nexport const editFeature = Symbol('editFeature');\n\nexport function canEditRouting(element: SModelElement): element is SRoutableElement {\n    return element instanceof SRoutableElement && element.hasFeature(editFeature);\n}\n\nexport const editLabelFeature = Symbol('editLabelFeature');\n\nexport interface EditableLabel extends SModelExtension {\n    text: string;\n    readonly isMultiLine?: boolean;\n    readonly editControlDimension?: Dimension;\n    readonly editControlPositionCorrection?: Point;\n}\n\nexport function isEditableLabel<T extends SModelElement>(element: T): element is T & EditableLabel {\n    return 'text' in element && element.hasFeature(editLabelFeature);\n}\n\nexport const withEditLabelFeature = Symbol('withEditLabelFeature');\n\nexport interface WithEditableLabel extends SModelExtension {\n    readonly editableLabel?: EditableLabel & SModelElement;\n}\n\nexport function isWithEditableLabel<T extends SModelElement>(element: T): element is T & WithEditableLabel {\n    return 'editableLabel' in element && element.hasFeature(withEditLabelFeature);\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Scrollable, Zoomable } from 'sprotty-protocol/lib/model';\nimport { SModelElement, SModelRoot } from '../../base/model/smodel';\n\nexport const viewportFeature = Symbol('viewportFeature');\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface Viewport extends Scrollable, Zoomable {\n}\n\nexport function isViewport(element: SModelElement): element is SModelRoot & Viewport {\n    return element instanceof SModelRoot\n        && element.hasFeature(viewportFeature)\n        && 'zoom' in element\n        && 'scroll' in element;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SModelElement } from '../../base/model/smodel';\n\nexport const exportFeature = Symbol('exportFeature');\n\nexport function isExportable(element: SModelElement): boolean {\n     return element.hasFeature(exportFeature);\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SModelRoot as SModelRootSchema, Viewport } from 'sprotty-protocol/lib/model';\nimport { Bounds, Dimension, isBounds, Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { SModelRoot, ModelIndexImpl } from '../../base/model/smodel';\nimport { viewportFeature } from \"./model\";\nimport { exportFeature } from \"../export/model\";\nimport { BoundsAware } from \"../bounds/model\";\n\nexport interface ViewportRootElementSchema extends SModelRootSchema {\n    scroll?: Point\n    zoom?: number\n    position?: Point\n    size?: Dimension\n}\n\n/**\n * Model root element that defines a viewport, so it transforms the coordinate system with\n * a `scroll` translation and a `zoom` scaling.\n */\nexport class ViewportRootElement extends SModelRoot implements Viewport, BoundsAware {\n    static readonly DEFAULT_FEATURES = [viewportFeature, exportFeature];\n\n    scroll: Point = { x: 0, y: 0 };\n    zoom: number = 1;\n    position: Point = Point.ORIGIN;\n    size: Dimension = Dimension.EMPTY;\n\n    constructor(index?: ModelIndexImpl) {\n        super(index);\n    }\n\n    get bounds(): Bounds {\n        return {\n            x: this.position.x,\n            y: this.position.y,\n            width: this.size.width,\n            height: this.size.height\n        };\n    }\n\n    set bounds(newBounds: Bounds) {\n        this.position = {\n            x: newBounds.x,\n            y: newBounds.y\n        };\n        this.size = {\n            width: newBounds.width,\n            height: newBounds.height\n        };\n    }\n\n    override localToParent(point: Point | Bounds): Bounds {\n        const result = {\n            x: (point.x - this.scroll.x) * this.zoom,\n            y: (point.y - this.scroll.y) * this.zoom,\n            width: -1,\n            height: -1\n        };\n        if (isBounds(point)) {\n            result.width = point.width * this.zoom;\n            result.height = point.height * this.zoom;\n        }\n        return result;\n    }\n\n    override parentToLocal(point: Point | Bounds): Bounds {\n        const result = {\n            x: (point.x / this.zoom) + this.scroll.x,\n            y: (point.y / this.zoom) + this.scroll.y,\n            width: -1,\n            height: -1\n        };\n        if (isBounds(point) && Dimension.isValid(point)) {\n            result.width = point.width / this.zoom;\n            result.height = point.height / this.zoom;\n        }\n        return result;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport {\n    SModelElement as SModelElementSchema, SModelRoot as SModelRootSchema, SShapeElement as SShapeElementSchema\n} from 'sprotty-protocol/lib/model';\nimport { Bounds, Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { ModelIndexImpl, SChildElement, SModelElement } from '../base/model/smodel';\nimport {\n    Alignable, alignFeature, BoundsAware, boundsFeature, layoutableChildFeature, layoutContainerFeature,\n    ModelLayoutOptions, SShapeElement\n} from '../features/bounds/model';\nimport { edgeLayoutFeature, EdgePlacement } from '../features/edge-layout/model';\nimport { deletableFeature } from '../features/edit/delete';\nimport { editFeature } from '../features/edit/model';\nimport { Fadeable, fadeFeature } from '../features/fade/model';\nimport { Hoverable, hoverFeedbackFeature, popupFeature } from '../features/hover/model';\nimport { moveFeature } from '../features/move/model';\nimport { connectableFeature, SConnectableElement, SRoutableElement } from '../features/routing/model';\nimport { Selectable, selectFeature } from '../features/select/model';\nimport { ViewportRootElement } from '../features/viewport/viewport-root';\nimport { FluentIterable, FluentIterableImpl } from '../utils/iterable';\n\n/**\n * Serializable schema for graph-like models.\n *\n * @deprecated Use `SGraph` from `sprotty-protocol` instead.\n */\nexport interface SGraphSchema extends SModelRootSchema {\n    children: SModelElementSchema[]\n    bounds?: Bounds\n    scroll?: Point\n    zoom?: number\n    layoutOptions?: ModelLayoutOptions\n}\n\n/**\n * Root element for graph-like models.\n */\nexport class SGraph extends ViewportRootElement {\n    layoutOptions?: ModelLayoutOptions;\n\n    constructor(index = new SGraphIndex()) {\n        super(index);\n    }\n}\n\n/**\n * Serializable schema for SNode.\n *\n * @deprecated Use `SNode` from `sprotty-protocol` instead.\n */\nexport interface SNodeSchema extends SShapeElementSchema {\n    layout?: string\n    selected?: boolean\n    hoverFeedback?: boolean\n    opacity?: number\n    anchorKind?: string\n}\n\n/**\n * Model element class for nodes, which are the main entities in a graph. A node can be connected to\n * another node via an SEdge. Such a connection can be direct, i.e. the node is the source or target of\n * the edge, or indirect through a port, i.e. it contains an SPort which is the source or target of the edge.\n */\nexport class SNode extends SConnectableElement implements Selectable, Fadeable, Hoverable {\n    static readonly DEFAULT_FEATURES = [connectableFeature, deletableFeature, selectFeature, boundsFeature,\n        moveFeature, layoutContainerFeature, fadeFeature, hoverFeedbackFeature, popupFeature];\n\n    override children: SChildElement[];\n    layout?: string;\n    selected: boolean = false;\n    hoverFeedback: boolean = false;\n    opacity: number = 1;\n\n    override canConnect(routable: SRoutableElement, role: string) {\n        return this.children.find(c => c instanceof SPort) === undefined;\n    }\n\n    override get incomingEdges(): FluentIterable<SEdge> {\n        const index = this.index;\n        if (index instanceof SGraphIndex) {\n            return index.getIncomingEdges(this);\n        }\n        const allEdges = this.index.all().filter(e => e instanceof SEdge) as FluentIterable<SEdge>;\n        return allEdges.filter(e => e.targetId === this.id);\n    }\n\n    override get outgoingEdges(): FluentIterable<SEdge> {\n        const index = this.index;\n        if (index instanceof SGraphIndex) {\n            return index.getOutgoingEdges(this);\n        }\n        const allEdges = this.index.all().filter(e => e instanceof SEdge) as FluentIterable<SEdge>;\n        return allEdges.filter(e => e.sourceId === this.id);\n    }\n\n}\n\n/**\n * Serializable schema for SPort.\n *\n * @deprecated Use `SPort` from `sprotty-protocol` instead.\n */\nexport interface SPortSchema extends SShapeElementSchema {\n    selected?: boolean\n    hoverFeedback?: boolean\n    opacity?: number\n    anchorKind?: string;\n}\n\n/**\n * A port is a connection point for edges. It should always be contained in an SNode.\n */\nexport class SPort extends SConnectableElement implements Selectable, Fadeable, Hoverable {\n    static readonly DEFAULT_FEATURES = [connectableFeature, selectFeature, boundsFeature, fadeFeature,\n        hoverFeedbackFeature];\n\n    selected: boolean = false;\n    hoverFeedback: boolean = false;\n    opacity: number = 1;\n\n    override get incomingEdges(): FluentIterable<SEdge> {\n        const index = this.index;\n        if (index instanceof SGraphIndex) {\n            return index.getIncomingEdges(this);\n        }\n        return super.incomingEdges.filter(e => e instanceof SEdge) as FluentIterable<SEdge>;\n    }\n\n    override get outgoingEdges(): FluentIterable<SEdge> {\n        const index = this.index;\n        if (index instanceof SGraphIndex) {\n            return index.getOutgoingEdges(this);\n        }\n        return super.outgoingEdges.filter(e => e instanceof SEdge) as FluentIterable<SEdge>;\n    }\n\n}\n\n/**\n * Serializable schema for SEdge.\n *\n * @deprecated Use `SEdge` from `sprotty-protocol` instead.\n */\nexport interface SEdgeSchema extends SModelElementSchema {\n    sourceId: string\n    targetId: string\n    routerKind?: string;\n    routingPoints?: Point[]\n    selected?: boolean\n    hoverFeedback?: boolean\n    opacity?: number\n}\n\n/**\n * Model element class for edges, which are the connectors in a graph. An edge has a source and a target,\n * each of which can be either a node or a port. The source and target elements are referenced via their\n * ids and can be resolved with the index stored in the root element.\n */\nexport class SEdge extends SRoutableElement implements Fadeable, Selectable, Hoverable, BoundsAware {\n    static readonly DEFAULT_FEATURES = [editFeature, deletableFeature, selectFeature, fadeFeature,\n        hoverFeedbackFeature];\n\n    selected: boolean = false;\n    hoverFeedback: boolean = false;\n    opacity: number = 1;\n\n}\n\n/**\n * Serializable schema for SLabel.\n *\n * @deprecated Use `SLabel` from `sprotty-protocol` instead.\n */\nexport interface SLabelSchema extends SShapeElementSchema {\n    text: string\n    selected?: boolean\n}\n\n/**\n * A label can be attached to a node, edge, or port, and contains some text to be rendered in its view.\n */\nexport class SLabel extends SShapeElement implements Selectable, Alignable, Fadeable {\n    static readonly DEFAULT_FEATURES = [boundsFeature, alignFeature, layoutableChildFeature,\n        edgeLayoutFeature, fadeFeature];\n\n    text: string;\n    selected: boolean = false;\n    alignment: Point = Point.ORIGIN;\n    opacity = 1;\n    edgePlacement?: EdgePlacement;\n\n}\n\n/**\n * Serializable schema for SCompartment.\n *\n * @deprecated Use `SCompartment` from `sprotty-protocol` instead.\n */\nexport interface SCompartmentSchema extends SShapeElementSchema {\n    layout?: string\n}\n\n/**\n * A compartment is used to group multiple child elements such as labels of a node. Usually a `vbox`\n * or `hbox` layout is used to arrange these children.\n */\nexport class SCompartment extends SShapeElement implements Fadeable {\n    static readonly DEFAULT_FEATURES = [boundsFeature, layoutContainerFeature, layoutableChildFeature,\n        fadeFeature];\n\n    override children: SChildElement[];\n    layout?: string;\n    override layoutOptions?: {[key: string]: string | number | boolean};\n    opacity = 1;\n\n}\n\n/**\n * A specialized model index that tracks outgoing and incoming edges.\n */\nexport class SGraphIndex extends ModelIndexImpl {\n\n    private outgoing: Map<string, SEdge[]> = new Map;\n    private incoming: Map<string, SEdge[]> = new Map;\n\n    override add(element: SModelElement): void {\n        super.add(element);\n        if (element instanceof SEdge) {\n            // Register the edge in the outgoing map\n            if (element.sourceId) {\n                const sourceArr = this.outgoing.get(element.sourceId);\n                if (sourceArr === undefined)\n                    this.outgoing.set(element.sourceId, [element]);\n                else\n                    sourceArr.push(element);\n            }\n            // Register the edge in the incoming map\n            if (element.targetId) {\n                const targetArr = this.incoming.get(element.targetId);\n                if (targetArr === undefined)\n                    this.incoming.set(element.targetId, [element]);\n                else\n                    targetArr.push(element);\n            }\n        }\n    }\n\n    override remove(element: SModelElement): void {\n        super.remove(element);\n        if (element instanceof SEdge) {\n            // Remove the edge from the outgoing map\n            const sourceArr = this.outgoing.get(element.sourceId);\n            if (sourceArr !== undefined) {\n                const index = sourceArr.indexOf(element);\n                if (index >= 0) {\n                    if (sourceArr.length === 1)\n                        this.outgoing.delete(element.sourceId);\n                    else\n                        sourceArr.splice(index, 1);\n                }\n            }\n            // Remove the edge from the incoming map\n            const targetArr = this.incoming.get(element.targetId);\n            if (targetArr !== undefined) {\n                const index = targetArr.indexOf(element);\n                if (index >= 0) {\n                    if (targetArr.length === 1)\n                        this.incoming.delete(element.targetId);\n                    else\n                        targetArr.splice(index, 1);\n                }\n            }\n        }\n    }\n\n    override getAttachedElements(element: SModelElement): FluentIterable<SModelElement> {\n        return new FluentIterableImpl(\n            () => ({\n                outgoing: this.outgoing.get(element.id),\n                incoming: this.incoming.get(element.id),\n                nextOutgoingIndex: 0,\n                nextIncomingIndex: 0\n            }),\n            (state) => {\n                let index = state.nextOutgoingIndex;\n                if (state.outgoing !== undefined && index < state.outgoing.length) {\n                    state.nextOutgoingIndex = index + 1;\n                    return { done: false, value: state.outgoing[index] };\n                }\n                index = state.nextIncomingIndex;\n                if (state.incoming !== undefined) {\n                    // Filter out self-loops: edges that are both outgoing and incoming\n                    while (index < state.incoming.length) {\n                        const edge = state.incoming[index];\n                        if (edge.sourceId !== edge.targetId) {\n                            state.nextIncomingIndex = index + 1;\n                            return { done: false, value: edge };\n                        }\n                        index++;\n                    }\n                }\n                return { done: true, value: undefined as any };\n            }\n        );\n    }\n\n    getIncomingEdges(element: SConnectableElement): FluentIterable<SEdge> {\n        return this.incoming.get(element.id) || [];\n    }\n\n    getOutgoingEdges(element: SConnectableElement): FluentIterable<SEdge> {\n        return this.outgoing.get(element.id) || [];\n    }\n}\n\n", "/********************************************************************************\n * Copyright (c) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, multiInject } from \"inversify\";\nimport { Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { TYPES } from \"../../base/types\";\nimport { InstanceRegistry } from \"../../utils/registry\";\nimport { SConnectableElement } from \"./model\";\n\nexport const DIAMOND_ANCHOR_KIND = 'diamond';\nexport const ELLIPTIC_ANCHOR_KIND = 'elliptic';\nexport const RECTANGULAR_ANCHOR_KIND = 'rectangular';\n\nexport interface IAnchorComputer {\n    readonly kind: string;\n\n    /**\n     * Compute an anchor position for routing an edge towards this element.\n     *\n     * The default implementation returns the element's center point. If edges should be connected\n     * differently, e.g. to some point on the boundary of the element's view, the according computation\n     * should be implemented in a subclass by overriding this method.\n     *\n     * @param connectable The node or port an edge should be connected to.\n     * @param referencePoint The point from which the edge is routed towards this elemet, in the same\n     *                       coordintae system as the connectable.\n     * @param offset An optional offset value to be considered in the anchor computation;\n     *               positive values should shift the anchor away from this element, negative values\n     *               should shift the anchor more to the inside. Use this to adapt ot arrow heads.\n     */\n    getAnchor(connectable: SConnectableElement, referencePoint: Point, offset?: number): Point;\n}\n\n\n@injectable()\nexport class AnchorComputerRegistry extends InstanceRegistry<IAnchorComputer> {\n\n    constructor(@multiInject(TYPES.IAnchorComputer) anchors: IAnchorComputer[]) {\n        super();\n        anchors.forEach(anchor => this.register(anchor.kind, anchor));\n    }\n\n    protected get defaultAnchorKind() {\n        return RECTANGULAR_ANCHOR_KIND;\n    }\n\n    override get(routerKind: string, anchorKind?: string): IAnchorComputer {\n        return super.get(`${routerKind}:${anchorKind || this.defaultAnchorKind}`);\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2019-2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from \"inversify\";\nimport { Bounds, Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { SModelElement, SParentElement } from \"../../base/model/smodel\";\nimport { translateBounds, translatePoint } from \"../../base/model/smodel-utils\";\nimport { ResolvedHandleMove } from \"../move/move\";\nimport { RoutingHandleKind, SDanglingAnchor, SRoutingHandle, edgeInProgressID, edgeInProgressTargetHandleID } from \"./model\";\nimport { AnchorComputerRegistry, IAnchorComputer } from \"./anchor\";\nimport { SConnectableElement, SRoutableElement } from \"./model\";\nimport { EdgeSnapshot, IEdgeRouter, RoutedPoint } from \"./routing\";\n\nexport interface LinearRouteOptions {\n    minimalPointDistance: number\n    standardDistance: number\n    selfEdgeOffset: number\n}\n\nexport enum Side { RIGHT, LEFT, TOP, BOTTOM }\n\nexport class DefaultAnchors {\n    readonly bounds: Bounds;\n    readonly left: RoutedPoint;\n    readonly right: RoutedPoint;\n    readonly top: RoutedPoint;\n    readonly bottom: RoutedPoint;\n\n    constructor(readonly element: SConnectableElement, edgeParent: SParentElement, readonly kind: 'source' | 'target') {\n        const bounds = element.bounds;\n        this.bounds = translateBounds(bounds, element.parent, edgeParent);\n        this.left = { x: this.bounds.x, y: this.bounds.y + 0.5 * this.bounds.height, kind };\n        this.right = { x: this.bounds.x + this.bounds.width, y: this.bounds.y + 0.5 * this.bounds.height, kind };\n        this.top = { x: this.bounds.x + 0.5 * this.bounds.width, y: this.bounds.y, kind };\n        this.bottom = { x: this.bounds.x + 0.5 * this.bounds.width, y: this.bounds.y + this.bounds.height, kind };\n    }\n\n    get(side: Side): RoutedPoint {\n        return (this as any)[Side[side].toLowerCase()];\n    }\n\n    getNearestSide(point: Point): Side {\n        const leftDistance = Point.euclideanDistance(point, this.left);\n        const rightDistance = Point.euclideanDistance(point, this.right);\n        const topDistance = Point.euclideanDistance(point, this.top);\n        const bottomDistance = Point.euclideanDistance(point, this.bottom);\n        let currentNearestSide = Side.LEFT;\n        let currentMinDist = leftDistance;\n        if (rightDistance < currentMinDist) {\n            currentMinDist = rightDistance;\n            currentNearestSide = Side.RIGHT;\n        }\n        if (topDistance < currentMinDist) {\n            currentMinDist = topDistance;\n            currentNearestSide = Side.TOP;\n        }\n        if (bottomDistance < currentMinDist) {\n            currentMinDist = bottomDistance;\n            currentNearestSide = Side.BOTTOM;\n        }\n        return currentNearestSide;\n    }\n}\n\n@injectable()\nexport abstract class AbstractEdgeRouter implements IEdgeRouter {\n\n    @inject(AnchorComputerRegistry) anchorRegistry: AnchorComputerRegistry;\n\n    abstract get kind(): string;\n\n    abstract route(edge: SRoutableElement): RoutedPoint[];\n\n    abstract createRoutingHandles(edge: SRoutableElement): void;\n\n    protected abstract getOptions(edge: SRoutableElement): LinearRouteOptions;\n\n    pointAt(edge: SRoutableElement, t: number): Point | undefined {\n        const segments = this.calculateSegment(edge, t);\n        if (!segments)\n            return undefined;\n        const { segmentStart, segmentEnd, lambda } = segments;\n        return Point.linear(segmentStart, segmentEnd, lambda);\n    }\n\n    derivativeAt(edge: SRoutableElement, t: number): Point | undefined {\n        const segments = this.calculateSegment(edge, t);\n        if (!segments)\n            return undefined;\n        const { segmentStart, segmentEnd } = segments;\n        return {\n            x: segmentEnd.x - segmentStart.x,\n            y: segmentEnd.y - segmentStart.y\n        };\n    }\n\n    protected calculateSegment(edge: SRoutableElement, t: number): { segmentStart: Point, segmentEnd: Point, lambda: number} | undefined {\n        if (t < 0 || t > 1)\n            return undefined;\n        const routedPoints = this.route(edge);\n        if (routedPoints.length < 2)\n            return undefined;\n        const segmentLengths: number[] = [];\n        let totalLength = 0;\n        for (let i = 0; i < routedPoints.length - 1; ++i) {\n            segmentLengths[i] = Point.euclideanDistance(routedPoints[i], routedPoints[i + 1]);\n            totalLength += segmentLengths[i];\n        }\n        let currentLenght = 0;\n        const tAsLenght = t * totalLength;\n        for (let i = 0; i < routedPoints.length - 1; ++i) {\n            const newLength = currentLenght + segmentLengths[i];\n            // avoid division by (almost) zero\n            if (segmentLengths[i] > 1E-8) {\n                if (newLength >= tAsLenght) {\n                    const lambda = Math.max(0, (tAsLenght - currentLenght)) / segmentLengths[i];\n                    return {\n                        segmentStart: routedPoints[i],\n                        segmentEnd: routedPoints[i + 1],\n                        lambda\n                    };\n                }\n            }\n            currentLenght = newLength;\n        }\n        return {\n            segmentEnd: routedPoints.pop()!,\n            segmentStart: routedPoints.pop()!,\n            lambda: 1\n        };\n    }\n\n    protected addHandle(edge: SRoutableElement, kind: RoutingHandleKind, type: string, routingPointIndex: number): SRoutingHandle {\n        const handle = new SRoutingHandle();\n        handle.kind = kind;\n        handle.pointIndex = routingPointIndex;\n        handle.type = type;\n        if (kind === 'target' && edge.id === edgeInProgressID)\n            handle.id = edgeInProgressTargetHandleID;\n        edge.add(handle);\n        return handle;\n    }\n\n    getHandlePosition(edge: SRoutableElement, route: RoutedPoint[], handle: SRoutingHandle): Point | undefined {\n        switch (handle.kind) {\n            case 'source':\n                if (edge.source instanceof SDanglingAnchor)\n                    return edge.source.position;\n                else\n                    return route[0];\n            case 'target':\n                if (edge.target instanceof SDanglingAnchor)\n                    return edge.target.position;\n                 else {\n                    return route[route.length - 1];\n                }\n            default:\n                const position = this.getInnerHandlePosition(edge, route, handle);\n                if (position !== undefined)\n                    return position;\n                if (handle.pointIndex >= 0 && handle.pointIndex < edge.routingPoints.length)\n                    return edge.routingPoints[handle.pointIndex];\n        }\n        return undefined;\n    }\n\n    protected abstract getInnerHandlePosition(edge: SRoutableElement, route: RoutedPoint[], handle: SRoutingHandle): Point | undefined;\n\n    protected findRouteSegment(edge: SRoutableElement, route: RoutedPoint[], handleIndex: number): { start?: Point, end?: Point } {\n        const getIndex = (rp: RoutedPoint) => {\n            if (rp.pointIndex !== undefined)\n                return rp.pointIndex;\n            else if (rp.kind === 'target')\n                return edge.routingPoints.length;\n            else\n                return -2;\n        };\n        let start, end: RoutedPoint | undefined;\n        for (const rp of route) {\n            const i = getIndex(rp);\n            if (i <= handleIndex && (start === undefined || i > getIndex(start)))\n                start = rp;\n            if (i > handleIndex && (end === undefined || i < getIndex(end)))\n                end = rp;\n        }\n        return { start, end };\n    }\n\n    getTranslatedAnchor(connectable: SConnectableElement, refPoint: Point, refContainer: SParentElement, edge: SRoutableElement, anchorCorrection: number = 0): Point {\n        const translatedRefPoint = translatePoint(refPoint, refContainer, connectable.parent);\n        const anchorComputer = this.getAnchorComputer(connectable);\n        const strokeCorrection = 0.5 * connectable.strokeWidth;\n        const anchor = anchorComputer.getAnchor(connectable, translatedRefPoint, anchorCorrection + strokeCorrection);\n        return translatePoint(anchor, connectable.parent, edge.parent);\n    }\n\n    protected getAnchorComputer(connectable: SConnectableElement): IAnchorComputer {\n       return this.anchorRegistry.get(this.kind, connectable.anchorKind);\n    }\n\n    applyHandleMoves(edge: SRoutableElement, moves: ResolvedHandleMove[]): void {\n        const remainingMoves = moves.slice();\n        moves.forEach(move => {\n            const handle = move.handle;\n            if (handle.kind === 'source' && !(edge.source instanceof SDanglingAnchor)) {\n                // detach source\n                const anchor = new SDanglingAnchor();\n                anchor.id = edge.id + '_dangling-source';\n                anchor.original = edge.source;\n                anchor.position = move.toPosition;\n                handle.root.add(anchor);\n                handle.danglingAnchor = anchor;\n                edge.sourceId = anchor.id;\n            } else if (handle.kind === 'target' && !(edge.target instanceof SDanglingAnchor)) {\n                // detach target\n                const anchor = new SDanglingAnchor();\n                anchor.id = edge.id + '_dangling-target';\n                anchor.original = edge.target;\n                anchor.position = move.toPosition;\n                handle.root.add(anchor);\n                handle.danglingAnchor = anchor;\n                edge.targetId = anchor.id;\n            }\n            if (handle.danglingAnchor) {\n                handle.danglingAnchor.position = move.toPosition;\n                remainingMoves.splice(remainingMoves.indexOf(move), 1);\n            }\n        });\n        if (remainingMoves.length > 0)\n            this.applyInnerHandleMoves(edge, remainingMoves);\n        this.cleanupRoutingPoints(edge, edge.routingPoints, true, true);\n    }\n\n    protected abstract applyInnerHandleMoves(edge: SRoutableElement, moves: ResolvedHandleMove[]): void;\n\n    cleanupRoutingPoints(edge: SRoutableElement, routingPoints: Point[], updateHandles: boolean, addRoutingPoints: boolean) {\n        const sourceAnchors = new DefaultAnchors(edge.source!, edge.parent, \"source\");\n        const targetAnchors = new DefaultAnchors(edge.target!, edge.parent, \"target\");\n        this.resetRoutingPointsOnReconnect(edge, routingPoints, updateHandles, sourceAnchors, targetAnchors);\n    }\n\n    protected resetRoutingPointsOnReconnect(edge: SRoutableElement, routingPoints: Point[], updateHandles: boolean,\n        sourceAnchors: DefaultAnchors, targetAnchors: DefaultAnchors): boolean {\n        if (routingPoints.length === 0 || edge.source instanceof SDanglingAnchor || edge.target instanceof SDanglingAnchor) {\n            const options = this.getOptions(edge);\n            const corners = this.calculateDefaultCorners(edge, sourceAnchors, targetAnchors, options);\n            routingPoints.splice(0, routingPoints.length, ...corners);\n            if (updateHandles) {\n                let maxPointIndex = -2;\n                edge.children.forEach(child => {\n                    if (child instanceof SRoutingHandle) {\n                        if (child.kind === 'target')\n                            child.pointIndex = routingPoints.length;\n                        else if (child.kind === 'line' && child.pointIndex >= routingPoints.length)\n                            edge.remove(child);\n                        else\n                            maxPointIndex = Math.max(child.pointIndex, maxPointIndex);\n                    }\n                });\n                for (let i = maxPointIndex; i < routingPoints.length - 1; ++i)\n                    this.addHandle(edge, 'manhattan-50%', 'volatile-routing-point', i);\n            }\n            return true;\n        }\n        return false;\n    }\n\n    applyReconnect(edge: SRoutableElement, newSourceId?: string, newTargetId?: string) {\n        let hasChanged = false;\n        if (newSourceId) {\n            const newSource = edge.root.index.getById(newSourceId);\n            if (newSource instanceof SConnectableElement) {\n                edge.sourceId = newSource.id;\n                hasChanged = true;\n            }\n        }\n        if (newTargetId) {\n            const newTarget = edge.root.index.getById(newTargetId);\n            if (newTarget instanceof SConnectableElement) {\n                edge.targetId = newTarget.id;\n                hasChanged = true;\n            }\n        }\n        if (hasChanged) {\n            // reset attached elements in index\n            edge.index.remove(edge);\n            edge.index.add(edge);\n            if (this.getSelfEdgeIndex(edge) > -1) {\n                edge.routingPoints = [];\n                this.cleanupRoutingPoints(edge, edge.routingPoints, true, true);\n            }\n        }\n    }\n\n    takeSnapshot(edge: SRoutableElement): EdgeSnapshot {\n        return {\n            routingPoints: edge.routingPoints.slice(),\n            routingHandles: edge.children\n                .filter(child => child instanceof SRoutingHandle)\n                .map(child => child as SRoutingHandle),\n            routedPoints: this.route(edge),\n            router: this,\n            source: edge.source,\n            target: edge.target\n        };\n    }\n\n    applySnapshot(edge: SRoutableElement, snapshot: EdgeSnapshot): void {\n        edge.routingPoints = snapshot.routingPoints;\n        edge.removeAll(child => child instanceof SRoutingHandle);\n        edge.routerKind = snapshot.router.kind;\n        snapshot.routingHandles.forEach(handle => edge.add(handle));\n        if (snapshot.source)\n            edge.sourceId = snapshot.source.id;\n        if (snapshot.target)\n            edge.targetId = snapshot.target.id;\n        // update index\n        edge.root.index.remove(edge as SModelElement);\n        edge.root.index.add(edge as SModelElement);\n    }\n\n    protected calculateDefaultCorners(edge: SRoutableElement, sourceAnchors: DefaultAnchors, targetAnchors: DefaultAnchors, options: LinearRouteOptions): Point[] {\n        const selfEdgeIndex = this.getSelfEdgeIndex(edge);\n        if (selfEdgeIndex >= 0) {\n            const standardDist = options.standardDistance;\n            const delta = options.selfEdgeOffset * Math.min(sourceAnchors.bounds.width, sourceAnchors.bounds.height);\n            switch (selfEdgeIndex % 4) {\n                case 0:\n                    return [\n                        { x: sourceAnchors.get(Side.RIGHT).x + standardDist, y: sourceAnchors.get(Side.RIGHT).y + delta },\n                        { x: sourceAnchors.get(Side.RIGHT).x + standardDist, y: sourceAnchors.get(Side.BOTTOM).y + standardDist },\n                        { x: sourceAnchors.get(Side.BOTTOM).x + delta, y: sourceAnchors.get(Side.BOTTOM).y + standardDist },\n                    ];\n                case 1:\n                    return [\n                        { x: sourceAnchors.get(Side.BOTTOM).x - delta, y: sourceAnchors.get(Side.BOTTOM).y + standardDist },\n                        { x: sourceAnchors.get(Side.LEFT).x - standardDist, y: sourceAnchors.get(Side.BOTTOM).y + standardDist },\n                        { x: sourceAnchors.get(Side.LEFT).x - standardDist, y: sourceAnchors.get(Side.LEFT).y + delta},\n                    ];\n                case 2:\n                    return [\n                        { x: sourceAnchors.get(Side.LEFT).x - standardDist, y: sourceAnchors.get(Side.LEFT).y - delta },\n                        { x: sourceAnchors.get(Side.LEFT).x - standardDist, y: sourceAnchors.get(Side.TOP).y - standardDist },\n                        { x: sourceAnchors.get(Side.TOP).x - delta, y: sourceAnchors.get(Side.TOP).y - standardDist },\n                    ];\n                case 3:\n                    return [\n                        { x: sourceAnchors.get(Side.TOP).x + delta, y: sourceAnchors.get(Side.TOP).y - standardDist },\n                        { x: sourceAnchors.get(Side.RIGHT).x + standardDist, y: sourceAnchors.get(Side.TOP).y - standardDist },\n                        { x: sourceAnchors.get(Side.RIGHT).x + standardDist, y: sourceAnchors.get(Side.RIGHT).y - delta },\n                    ];\n            }\n        }\n        return [];\n    }\n\n    protected getSelfEdgeIndex(edge: SRoutableElement): number {\n        if (!edge.source || edge.source !== edge.target)\n            return -1;\n        return edge.source.outgoingEdges\n            .filter(otherEdge => otherEdge.target === edge.source)\n            .indexOf(edge);\n    }\n\n    protected commitRoute(edge: SRoutableElement, routedPoints: RoutedPoint[]) {\n        const newRoutingPoints: Point[] = [];\n        for (let i = 1; i < routedPoints.length - 1; ++i)\n            newRoutingPoints.push({ x: routedPoints[i].x, y: routedPoints[i].y });\n        edge.routingPoints = newRoutingPoints;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from \"inversify\";\nimport { angleBetweenPoints, Bounds, centerOfLine, Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { SRoutingHandle } from \"./model\";\nimport { ResolvedHandleMove } from \"../move/move\";\nimport { AnchorComputerRegistry } from \"./anchor\";\nimport { AbstractEdgeRouter, LinearRouteOptions } from \"./abstract-edge-router\";\nimport { SRoutableElement } from \"./model\";\nimport { RoutedPoint } from \"./routing\";\n\nexport interface PolylineRouteOptions extends LinearRouteOptions {\n    /** The angle in radians below which a routing handle is removed. */\n    removeAngleThreshold: number;\n}\n\n@injectable()\nexport class PolylineEdgeRouter extends AbstractEdgeRouter {\n\n    @inject(AnchorComputerRegistry) override anchorRegistry: AnchorComputerRegistry;\n\n    static readonly KIND = 'polyline';\n\n    get kind() {\n        return PolylineEdgeRouter.KIND;\n    }\n\n    protected getOptions(edge: SRoutableElement): PolylineRouteOptions {\n        return {\n            minimalPointDistance: 2,\n            removeAngleThreshold: 0.1,\n            standardDistance: 20,\n            selfEdgeOffset: 0.25\n        };\n    }\n\n    route(edge: SRoutableElement): RoutedPoint[] {\n        const source = edge.source;\n        const target = edge.target;\n        if (source === undefined || target === undefined) {\n            return [];\n        }\n\n        let sourceAnchor: Point;\n        let targetAnchor: Point;\n        const options = this.getOptions(edge);\n        const routingPoints = edge.routingPoints.length > 0\n            ? edge.routingPoints\n            : [];\n        this.cleanupRoutingPoints(edge, routingPoints, false, false);\n        const rpCount = routingPoints !== undefined ? routingPoints.length : 0;\n        if (rpCount === 0) {\n            // Use the target center as start anchor reference\n            const startRef = Bounds.center(target.bounds);\n            sourceAnchor = this.getTranslatedAnchor(source, startRef, target.parent, edge, edge.sourceAnchorCorrection);\n            // Use the source center as end anchor reference\n            const endRef = Bounds.center(source.bounds);\n            targetAnchor = this.getTranslatedAnchor(target, endRef, source.parent, edge, edge.targetAnchorCorrection);\n        } else {\n            // Use the first routing point as start anchor reference\n            const p0 = routingPoints[0];\n            sourceAnchor = this.getTranslatedAnchor(source, p0, edge.parent, edge, edge.sourceAnchorCorrection);\n            // Use the last routing point as end anchor reference\n            const pn = routingPoints[rpCount - 1];\n            targetAnchor = this.getTranslatedAnchor(target, pn, edge.parent, edge, edge.targetAnchorCorrection);\n        }\n\n        const result: RoutedPoint[] = [];\n        result.push({ kind: 'source', x: sourceAnchor.x, y: sourceAnchor.y });\n        for (let i = 0; i < rpCount; i++) {\n            const p = routingPoints[i];\n            if (i > 0 && i < rpCount - 1\n                || i === 0 && Point.maxDistance(sourceAnchor, p) >= options.minimalPointDistance + (edge.sourceAnchorCorrection || 0)\n                || i === rpCount - 1 && Point.maxDistance(p, targetAnchor) >= options.minimalPointDistance + (edge.targetAnchorCorrection || 0)) {\n                result.push({ kind: 'linear', x: p.x, y: p.y, pointIndex: i });\n            }\n        }\n        result.push({ kind: 'target', x: targetAnchor.x, y: targetAnchor.y });\n            return this.filterEditModeHandles(result, edge, options);\n    }\n\n    /**\n     * Remove routed points that are in edit mode and for which the angle between the preceding and\n     * following points falls below a threshold.\n     */\n    protected filterEditModeHandles(route: RoutedPoint[], edge: SRoutableElement, options: PolylineRouteOptions): RoutedPoint[] {\n        if (edge.children.length === 0)\n            return route;\n\n        let i = 0;\n        while (i < route.length) {\n            const curr = route[i];\n            if (curr.pointIndex !== undefined) {\n                const handle: SRoutingHandle | undefined = edge.children.find(child =>\n                    child instanceof SRoutingHandle && child.kind === 'junction' && child.pointIndex === curr.pointIndex) as any;\n                if (handle !== undefined && handle.editMode && i > 0 && i < route.length - 1) {\n                    const prev = route[i - 1], next = route[i + 1];\n                    const prevDiff: Point = { x: prev.x - curr.x, y: prev.y - curr.y };\n                    const nextDiff: Point = { x: next.x - curr.x, y: next.y - curr.y };\n                    const angle = angleBetweenPoints(prevDiff, nextDiff);\n                    if (Math.abs(Math.PI - angle) < options.removeAngleThreshold) {\n                        route.splice(i, 1);\n                        continue;\n                    }\n                }\n            }\n            i++;\n        }\n        return route;\n    }\n\n    createRoutingHandles(edge: SRoutableElement): void {\n        const rpCount = edge.routingPoints.length;\n        this.addHandle(edge, 'source', 'routing-point', -2);\n        this.addHandle(edge, 'line', 'volatile-routing-point', -1);\n        for (let i = 0; i < rpCount; i++) {\n            this.addHandle(edge, 'junction', 'routing-point', i);\n            this.addHandle(edge, 'line', 'volatile-routing-point', i);\n        }\n        this.addHandle(edge, 'target', 'routing-point', rpCount);\n    }\n\n    getInnerHandlePosition(edge: SRoutableElement, route: RoutedPoint[], handle: SRoutingHandle) {\n        if (handle.kind === 'line') {\n            const { start, end } = this.findRouteSegment(edge, route, handle.pointIndex);\n            if (start !== undefined && end !== undefined)\n                return centerOfLine(start, end);\n        }\n        return undefined;\n    }\n\n    applyInnerHandleMoves(edge: SRoutableElement, moves: ResolvedHandleMove[]) {\n        moves.forEach(move => {\n            const handle = move.handle;\n            const points = edge.routingPoints;\n            let index = handle.pointIndex;\n            if (handle.kind === 'line') {\n                // Upgrade to a proper routing point\n                handle.kind = 'junction';\n                handle.type = 'routing-point';\n                points.splice(index + 1, 0, move.fromPosition || points[Math.max(index, 0)]);\n                edge.children.forEach(child => {\n                    if (child instanceof SRoutingHandle && (child === handle || child.pointIndex > index))\n                        child.pointIndex++;\n                });\n                this.addHandle(edge, 'line', 'volatile-routing-point', index);\n                index++;\n                this.addHandle(edge, 'line', 'volatile-routing-point', index);\n            }\n            if (index >= 0 && index < points.length) {\n                points[index] = move.toPosition;\n            }\n        });\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2018-2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, multiInject, optional } from \"inversify\";\nimport { Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { SParentElement } from \"../../base/model/smodel\";\nimport { TYPES } from \"../../base/types\";\nimport { findArgValue, IViewArgs } from \"../../base/views/view\";\nimport { InstanceRegistry } from \"../../utils/registry\";\nimport { ResolvedHandleMove } from \"../move/move\";\nimport { SRoutingHandle } from \"../routing/model\";\nimport { SConnectableElement, SRoutableElement } from \"./model\";\nimport { PolylineEdgeRouter } from \"./polyline-edge-router\";\n\n/**\n * A point describing the shape of an edge.\n *\n * The <code>RoutedPoints</code> of an edge are derived from the <code>routingPoints</code>\n * which plain <code>Points</code> stored in the SModel by the <code>IEdgeRouter</code>.\n * As opposed to the originals, they also contain the source and target anchor points.\n * The router may also add or remove points in order to satisfy the constraints\n * the constraints of the routing algorithm or in order to to filter out points which are\n * obsolete, e.g. to close to each other.\n */\nexport interface RoutedPoint extends Point {\n    kind: 'source' | 'target' | 'linear' | 'bezier-control-before' | 'bezier-junction' | 'bezier-control-after'\n    pointIndex?: number\n}\n\n/**\n * Stores the state of an edge at a specific time.\n */\nexport interface EdgeSnapshot {\n    routingHandles: SRoutingHandle[]\n    routingPoints: Point[]\n    routedPoints: RoutedPoint[]\n    router: IEdgeRouter\n    source?: SConnectableElement\n    target?: SConnectableElement\n}\n\nexport interface EdgeMemento {\n    edge: SRoutableElement\n    before: EdgeSnapshot\n    after: EdgeSnapshot\n}\n\n/**\n * Encapsulates the logic of how the actual shape of an edge is derived from its routing points,\n * and how the user can modify it.\n */\nexport interface IEdgeRouter {\n\n    readonly kind: string;\n\n    /**\n     * Calculates the route of the given edge.\n     */\n    route(edge: SRoutableElement): RoutedPoint[]\n\n    /**\n     * Calculates a point on the edge\n     *\n     * @param t a value between 0 (sourceAnchor) and 1 (targetAnchor)\n     * @returns the point or undefined if t is out of bounds or it cannot be computed\n     */\n    pointAt(edge: SRoutableElement, t: number): Point | undefined\n\n    /**\n     * Calculates the derivative at a point on the edge.\n     *\n     * @param t a value between 0 (sourceAnchor) and 1 (targetAnchor)\n     * @returns the point or undefined if t is out of bounds or it cannot be computed\n     */\n    derivativeAt(edge: SRoutableElement, t: number): Point | undefined\n\n    /**\n     * Retuns the position of the given handle based on the routing points of the edge.\n     */\n    getHandlePosition(edge: SRoutableElement, route: RoutedPoint[], handle: SRoutingHandle): Point | undefined\n\n    /**\n     * Creates the routing handles for the given target.\n     */\n    createRoutingHandles(edge: SRoutableElement): void\n\n    /**\n     * Updates the routing points and handles of the given edge with regard to the given moves.\n     */\n    applyHandleMoves(edge: SRoutableElement, moves: ResolvedHandleMove[]): void\n\n    /**\n     * Updates the routing points and handles of the given edge with regard to the given moves.\n     */\n    applyReconnect(edge: SRoutableElement, newSourceId?: string, newTargetId?: string): void\n\n    /**\n     * Remove/add points in order to keep routing constraints consistent, or reset RPs on reconnect.\n     */\n    cleanupRoutingPoints(edge: SRoutableElement, routingPoints: Point[], updateHandles: boolean, addRoutingPoints: boolean): void;\n    /**\n     * Creates a snapshot of the given edge, storing all the data needed to restore it to\n     * its current state.\n     */\n    takeSnapshot(edge: SRoutableElement): EdgeSnapshot;\n\n    /**\n     * Applies a snapshot to the current edge.\n     */\n    applySnapshot(edge: SRoutableElement, edgeSnapshot: EdgeSnapshot): void;\n}\n\nexport interface IMultipleEdgesRouter extends IEdgeRouter {\n    routeAll(\n        edges: SRoutableElement[],\n        parent: Readonly<SParentElement>\n    ): EdgeRouting;\n}\n\nfunction isMultipleEdgesRouter(\n    router: IEdgeRouter | IMultipleEdgesRouter\n): router is IMultipleEdgesRouter {\n    return (router as IMultipleEdgesRouter).routeAll !== undefined;\n}\n\n/** A postprocessor that is applied to all routes, once they are computed. */\nexport interface IEdgeRoutePostprocessor {\n    apply(routing: EdgeRouting): void;\n}\n\n@injectable()\nexport class EdgeRouterRegistry extends InstanceRegistry<IEdgeRouter> {\n\n    @multiInject(TYPES.IEdgeRoutePostprocessor) @optional()\n    protected postProcessors: IEdgeRoutePostprocessor[];\n\n    constructor(@multiInject(TYPES.IEdgeRouter) edgeRouters: IEdgeRouter[]) {\n        super();\n        edgeRouters.forEach(router => this.register(router.kind, router));\n    }\n\n    protected get defaultKind() {\n        return PolylineEdgeRouter.KIND;\n    }\n\n    override get(kind: string | undefined): IEdgeRouter {\n        return super.get(kind || this.defaultKind);\n    }\n\n    /**\n     * Computes the routes of all edges contained by the specified `parent`.\n     * After all routes are available, it'll apply the registered `EdgeRoutePostProcessors`.\n     * @param parent the parent to traverse for edges\n     * @returns the routes of all edges that are children of `parent`\n     */\n    routeAllChildren(parent: Readonly<SParentElement>): EdgeRouting {\n        const routing = this.doRouteAllChildren(parent);\n        for (const postProcessor of this.postProcessors) {\n            postProcessor.apply(routing);\n        }\n        return routing;\n    }\n\n    /**\n     * Recursively traverses the children of `parent`, collects children grouped by router kind,\n     * and then routes them either.\n     * @param parent the parent to traverse for edges\n     * @returns the routes of all edges that are children of `parent`\n     */\n    protected doRouteAllChildren(parent: Readonly<SParentElement>) {\n        const routing = new EdgeRouting();\n        const routersEdges = new Map<string, SRoutableElement[]>();\n\n        const elementsToProcess = [parent];\n        while (elementsToProcess.length > 0) {\n            const element = elementsToProcess.shift() as SParentElement;\n            for (const child of element.children) {\n                if (child instanceof SRoutableElement) {\n                    const routerKind = child.routerKind || this.defaultKind;\n                    if (routersEdges.has(routerKind)) {\n                        (routersEdges.get(routerKind) as SRoutableElement[]).push(child);\n                    } else {\n                        routersEdges.set(routerKind, [child]);\n                    }\n                }\n                if (child instanceof SParentElement) {\n                    elementsToProcess.push(child);\n                }\n            }\n        }\n\n        routersEdges.forEach((edges, routerKind) => {\n            const childRouter = this.get(routerKind);\n            if (isMultipleEdgesRouter(childRouter)) {\n                routing.setAll(childRouter.routeAll(edges, parent));\n            } else {\n                for (const edge of  edges) {\n                    routing.set(edge.id, this.route(edge));\n                }\n            }\n        });\n\n        return routing;\n    }\n\n    /**\n     * Computes or obtains the route of a single edge.\n     * @param edge the edge to be routed\n     * @param args arguments that may contain an `EdgeRouting` already\n     * @returns the route of the specified `edge`\n     */\n    route(edge: Readonly<SRoutableElement>, args?: IViewArgs): RoutedPoint[] {\n        const edgeRouting = findArgValue<EdgeRouting>(args, 'edgeRouting');\n        if (edgeRouting) {\n            const route = edgeRouting.get(edge.id);\n            if (route) {\n                return route;\n            }\n        }\n        const router = this.get(edge.routerKind);\n        return router.route(edge);\n    }\n\n}\n\n/** Any object that contains a routing, such as an argument object passed to views for rendering. */\nexport interface EdgeRoutingContainer {\n    edgeRouting: EdgeRouting;\n}\n\n/**\n * Map of edges and their computed routes.\n */\nexport class EdgeRouting {\n\n    protected routesMap = new Map<string, RoutedPoint[]>();\n\n    set(routableId: string, route: RoutedPoint[]): void {\n        this.routesMap.set(routableId, route);\n    }\n\n    setAll(otherRoutes: EdgeRouting): void {\n        otherRoutes.routes.forEach((route, routableId) => this.set(routableId, route));\n    }\n\n    get(routableId: string): RoutedPoint[] | undefined {\n        return this.routesMap.get(routableId);\n    }\n\n    get routes() {\n        return this.routesMap;\n    }\n\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from \"inversify\";\nimport { VNode } from \"snabbdom\";\nimport { Bounds, Point, toDegrees } from \"sprotty-protocol/lib/utils/geometry\";\nimport { SModelElement, SChildElement } from \"../../base/model/smodel\";\nimport { IVNodePostprocessor } from \"../../base/views/vnode-postprocessor\";\nimport { setAttr } from \"../../base/views/vnode-utils\";\nimport { SEdge } from \"../../graph/sgraph\";\nimport { Orientation } from \"../../utils/geometry\";\nimport { isAlignable, BoundsAware } from \"../bounds/model\";\nimport { DEFAULT_EDGE_PLACEMENT, isEdgeLayoutable, EdgeLayoutable, EdgePlacement } from \"./model\";\nimport { EdgeRouterRegistry } from \"../routing/routing\";\n\n@injectable()\nexport class EdgeLayoutPostprocessor implements IVNodePostprocessor {\n\n    @inject(EdgeRouterRegistry) edgeRouterRegistry: EdgeRouterRegistry;\n\n    decorate(vnode: VNode, element: SModelElement): VNode {\n        if (isEdgeLayoutable(element) && element.parent instanceof SEdge) {\n            if (element.bounds !== Bounds.EMPTY) {\n                const placement = this.getEdgePlacement(element);\n                const edge = element.parent;\n                const position = Math.min(1, Math.max(0, placement.position));\n                const router = this.edgeRouterRegistry.get(edge.routerKind);\n                const pointOnEdge = router.pointAt(edge, position);\n                const derivativeOnEdge = router.derivativeAt(edge, position);\n                let transform = '';\n                if (pointOnEdge && derivativeOnEdge) {\n                    transform += `translate(${pointOnEdge.x}, ${pointOnEdge.y})`;\n                    const angle = toDegrees(Math.atan2(derivativeOnEdge.y, derivativeOnEdge.x));\n                    if (placement.rotate) {\n                        let flippedAngle = angle;\n                        if (Math.abs(angle) > 90) {\n                             if (angle < 0)\n                                flippedAngle += 180;\n                            else if (angle > 0)\n                                flippedAngle -= 180;\n                        }\n                        transform += ` rotate(${flippedAngle})`;\n                        const alignment = this.getRotatedAlignment(element, placement, flippedAngle !== angle);\n                        transform += ` translate(${alignment.x}, ${alignment.y})`;\n                    } else {\n                        const alignment = this.getAlignment(element, placement, angle);\n                        transform += ` translate(${alignment.x}, ${alignment.y})`;\n                    }\n                    setAttr(vnode, 'transform', transform);\n                }\n            }\n        }\n        return vnode;\n    }\n\n    protected getRotatedAlignment(element: EdgeLayoutable & SModelElement & BoundsAware, placement: EdgePlacement, flip: boolean) {\n        let x = isAlignable(element) ? element.alignment.x : 0;\n        let y = isAlignable(element) ? element.alignment.y : 0;\n        const bounds = element.bounds;\n        if (placement.side === 'on')\n            return { x: x - 0.5 * bounds.height, y: y - 0.5 * bounds.height};\n        if (flip) {\n            if (placement.position < 0.3333333)\n                x -= bounds.width + placement.offset;\n            else if (placement.position < 0.6666666)\n                x -= 0.5 * bounds.width;\n            else\n                x += placement.offset;\n            switch (placement.side) {\n                case 'left':\n                case 'bottom':\n                    y -= placement.offset + bounds.height;\n                    break;\n                case 'right':\n                case 'top':\n                    y += placement.offset;\n            }\n        } else {\n            if (placement.position < 0.3333333)\n                x += placement.offset;\n            else if (placement.position < 0.6666666)\n                x -= 0.5 * bounds.width;\n            else\n                x -= bounds.width + placement.offset;\n            switch (placement.side) {\n                case 'right':\n                case 'bottom':\n                    y += - placement.offset - bounds.height;\n                    break;\n                case 'left':\n                case 'top':\n                    y += placement.offset;\n            }\n        }\n        return { x, y };\n    }\n\n    protected getEdgePlacement(element: SModelElement): EdgePlacement {\n        let current = element;\n        const allPlacements: EdgePlacement[] = [];\n        while (current !== undefined) {\n            const placement = (current as any).edgePlacement;\n            if (placement !== undefined)\n                allPlacements.push(placement);\n            if (current instanceof SChildElement)\n                current = current.parent;\n            else\n                break;\n        }\n        return allPlacements.reverse().reduce(\n            (a, b) => { return {...a, ...b}; }, DEFAULT_EDGE_PLACEMENT);\n    }\n\n    protected getAlignment(label: EdgeLayoutable & SModelElement & BoundsAware, placement: EdgePlacement, angle: number): Point {\n        const bounds = label.bounds;\n        const x = isAlignable(label) ? label.alignment.x - bounds.width : 0;\n        const y = isAlignable(label) ? label.alignment.y - bounds.height : 0;\n        if (placement.side === 'on')\n            return { x: x + 0.5 * bounds.height, y: y + 0.5 * bounds.height};\n        const quadrant = this.getQuadrant(angle);\n        const midLeft = { x: placement.offset, y: y + 0.5 * bounds.height };\n        const topLeft = { x: placement.offset, y: y + bounds.height + placement.offset };\n        const topRight = { x: -bounds.width - placement.offset, y: y + bounds.height + placement.offset};\n        const midRight = { x: -bounds.width - placement.offset, y: y + 0.5 * bounds.height };\n        const bottomRight = { x: -bounds.width - placement.offset, y: y - placement.offset};\n        const bottomLeft = { x: placement.offset, y: y - placement.offset};\n        switch (placement.side) {\n            case 'left':\n                switch (quadrant.orientation) {\n                    case 'west':\n                        return Point.linear(topLeft, topRight, quadrant.position);\n                    case 'north':\n                        return Point.linear(topRight, bottomRight, quadrant.position);\n                    case 'east':\n                        return Point.linear(bottomRight, bottomLeft, quadrant.position);\n                    case 'south':\n                        return Point.linear(bottomLeft, topLeft, quadrant.position);\n                }\n                break;\n            case 'right':\n                switch (quadrant.orientation) {\n                    case 'west':\n                        return Point.linear(bottomRight, bottomLeft, quadrant.position);\n                    case 'north':\n                        return Point.linear(bottomLeft, topLeft, quadrant.position);\n                    case 'east':\n                        return Point.linear(topLeft, topRight, quadrant.position);\n                    case 'south':\n                        return Point.linear(topRight, bottomRight, quadrant.position);\n                }\n                break;\n            case 'top':\n                switch (quadrant.orientation) {\n                    case 'west':\n                        return Point.linear(bottomRight, bottomLeft, quadrant.position);\n                    case 'north':\n                        return this.linearFlip(bottomLeft, midLeft, midRight, bottomRight, quadrant.position);\n                    case 'east':\n                        return Point.linear(bottomRight, bottomLeft, quadrant.position);\n                    case 'south':\n                        return this.linearFlip(bottomLeft, midLeft, midRight, bottomRight, quadrant.position);\n                }\n                break;\n            case 'bottom':\n                switch (quadrant.orientation) {\n                    case 'west':\n                        return Point.linear(topLeft, topRight, quadrant.position);\n                    case 'north':\n                        return this.linearFlip(topRight, midRight, midLeft, topLeft, quadrant.position);\n                    case 'east':\n                        return Point.linear(topLeft, topRight, quadrant.position);\n                    case 'south':\n                        return this.linearFlip(topRight, midRight, midLeft, topLeft, quadrant.position);\n                }\n                break;\n        }\n        return {x: 0, y: 0};\n    }\n\n    protected getQuadrant(angle: number): {orientation: Orientation, position: number} {\n        if (Math.abs(angle) > 135)\n            return { orientation: 'west', position: (angle > 0 ? angle - 135 : angle + 225) / 90 };\n        else if (angle < -45)\n            return { orientation: 'north', position: (angle + 135) / 90 };\n        else if (angle < 45)\n            return { orientation: 'east', position: (angle + 45) / 90 };\n        else\n            return { orientation: 'south', position: (angle - 45) / 90 };\n    }\n\n    protected linearFlip(p0: Point, p1: Point, p2: Point, p3: Point, position: number) {\n        return position < 0.5 ? Point.linear(p0, p1, 2 * position) : Point.linear(p2, p3, 2 * position - 1);\n    }\n\n    postUpdate(): void {}\n}\n", "/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"../../base/types\";\nimport { EdgeLayoutPostprocessor } from \"./edge-layout\";\n\nconst edgeLayoutModule = new ContainerModule(bind => {\n    bind(EdgeLayoutPostprocessor).toSelf().inSingletonScope();\n    bind(TYPES.IVNodePostprocessor).toService(EdgeLayoutPostprocessor);\n    bind(TYPES.HiddenVNodePostprocessor).toService(EdgeLayoutPostprocessor);\n});\n\nexport default edgeLayoutModule;\n", "/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport { Action } from 'sprotty-protocol/lib/actions';\nimport { SModelElement as SModelElementSchema } from 'sprotty-protocol/lib/model';\nimport { Command, CommandExecutionContext, CommandReturn } from '../../base/commands/command';\nimport { SParentElement, SChildElement } from '../../base/model/smodel';\nimport { TYPES } from '../../base/types';\n\n/**\n * Create an element with the given schema and add it to the diagram.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\n export interface CreateElementAction extends Action {\n    kind: typeof CreateElementAction.KIND\n    containerId: string\n    elementSchema: SModelElementSchema\n}\nexport namespace CreateElementAction {\n    export const KIND = 'createElement';\n\n    export function create(elementSchema: SModelElementSchema, options: { containerId: string }): CreateElementAction {\n        return {\n            kind: KIND,\n            elementSchema,\n            containerId: options.containerId\n        };\n    }\n}\n\n@injectable()\nexport class CreateElementCommand extends Command {\n    static readonly KIND = CreateElementAction.KIND;\n\n    container: SParentElement;\n    newElement: SChildElement;\n\n    constructor(@inject(TYPES.Action) protected readonly action: CreateElementAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        const container = context.root.index.getById(this.action.containerId);\n        if (container instanceof SParentElement) {\n            this.container = container;\n            this.newElement = context.modelFactory.createElement(this.action.elementSchema);\n            this.container.add(this.newElement);\n        }\n        return context.root;\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        this.container.remove(this.newElement);\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        this.container.add(this.newElement);\n        return context.root;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Action } from \"sprotty-protocol/lib/actions\";\nimport { SModelElement } from \"../../base/model/smodel\";\nimport { SModelExtension } from \"../../base/model/smodel-extension\";\n\nexport const creatingOnDragFeature = Symbol('creatingOnDragFeature');\n\nexport interface CreatingOnDrag extends SModelExtension {\n    createAction(id: string): Action;\n}\n\nexport function isCreatingOnDrag<T extends SModelElement>(element: T): element is T & CreatingOnDrag {\n    return element.hasFeature(creatingOnDragFeature) && (element as any).createAction !== undefined;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2022 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/**\n * A Point is composed of the (x,y) coordinates of an object.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface Point {\n    readonly x: number\n    readonly y: number\n}\n\n/**\n * (x,y) coordinates of the origin.\n *\n * @deprecated Use `Point.ORIGIN` from `sprotty-protocol` instead.\n */\nexport const ORIGIN_POINT: Point = Object.freeze({\n    x: 0,\n    y: 0\n});\n\n/**\n * Adds two points.\n * @param {Point} p1 - First point\n * @param {Point} p2 - Second point\n * @returns {Point} The sum of the two points\n *\n * @deprecated Use `Point.add` from `sprotty-protocol` instead.\n */\nexport function add(p1: Point, p2: Point): Point {\n    return {\n        x: p1.x + p2.x,\n        y: p1.y + p2.y\n    };\n}\n\n/**\n * Subtracts two points.\n * @param {Point} p1 - First point\n * @param {Point} p2 - Second point\n * @returns {Point} The difference of the two points\n *\n * @deprecated Use `Point.subtract` from `sprotty-protocol` instead.\n */\nexport function subtract(p1: Point, p2: Point): Point {\n    return {\n        x: p1.x - p2.x,\n        y: p1.y - p2.y\n    };\n}\n\n/**\n * Specifies whether a point has exactly the same coordinates as another point.\n * @param {Point} point1 a point\n * @param {Point} point2 another point\n * @returns {boolean} `true` if `point1` has exactly the same `x` and `y` values as `point2`, `false` otherwise.\n *\n * @deprecated Use `Point.equals` from `sprotty-protocol` instead.\n */\nexport function pointEquals(point1: Point, point2: Point): boolean {\n    return point1.x === point2.x && point1.y === point2.y;\n}\n\n/**\n * The Dimension of an object is composed of its width and height.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface Dimension {\n    readonly width: number\n    readonly height: number\n}\n\n/**\n * A dimension with both width and height set to a negative value, which is considered as undefined.\n *\n * @deprecated Use `Dimension.EMPTY` from `sprotty-protocol` instead.\n */\nexport const EMPTY_DIMENSION: Dimension = Object.freeze({\n    width: -1,\n    height: -1\n});\n\n/**\n * Checks whether the given dimention is valid, i.e. the width and height are non-zero.\n * @param {Dimension} b - Dimension object\n * @returns {boolean}\n *\n * @deprecated Use `Dimension.isValid` from `sprotty-protocol` instead.\n */\nexport function isValidDimension(d: Dimension): boolean {\n    return d.width >= 0 && d.height >= 0;\n}\n\n/**\n * The bounds are the position (x, y) and dimension (width, height) of an object.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface Bounds extends Point, Dimension {\n}\n\n/**\n * @deprecated Use `Bounds.EMPTY` from `sprotty-protocol` instead.\n */\nexport const EMPTY_BOUNDS: Bounds = Object.freeze({\n    x: 0,\n    y: 0,\n    width: -1,\n    height: -1\n});\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport function isBounds(element: any): element is Bounds {\n    return 'x' in element\n        && 'y' in element\n        && 'width' in element\n        && 'height' in element;\n}\n\n/**\n * Combines the bounds of two objects into one, so that the new bounds\n * are the minimum bounds that covers both of the original bounds.\n * @param {Bounds} b0 - First bounds object\n * @param {Bounds} b1 - Second bounds object\n * @returns {Bounds} The combined bounds\n *\n * @deprecated Use `Bounds.combine` from `sprotty-protocol` instead.\n */\nexport function combine(b0: Bounds, b1: Bounds): Bounds {\n    if (!isValidDimension(b0))\n        return isValidDimension(b1) ? b1 : EMPTY_BOUNDS;\n    if (!isValidDimension(b1))\n        return b0;\n    const minX = Math.min(b0.x, b1.x);\n    const minY = Math.min(b0.y, b1.y);\n    const maxX = Math.max(b0.x + (b0.width >= 0 ? b0.width : 0), b1.x + (b1.width >= 0 ? b1.width : 0));\n    const maxY = Math.max(b0.y + (b0.height >= 0 ? b0.height : 0), b1.y + (b1.height >= 0 ? b1.height : 0));\n    return {\n        x: minX, y: minY, width: maxX - minX, height: maxY - minY\n    };\n}\n\n/**\n * Translates the given bounds.\n * @param {Bounds} b - Bounds object\n * @param {Point} p - Vector by which to translate the bounds\n * @returns {Bounds} The translated bounds\n *\n * @deprecated Use `Bounds.translate` from `sprotty-protocol` instead.\n */\nexport function translate(b: Bounds, p: Point): Bounds {\n    return {\n        x: b.x + p.x,\n        y: b.y + p.y,\n        width: b.width,\n        height: b.height\n    };\n}\n\n/**\n * Returns the center point of the bounds of an object\n * @param {Bounds} b - Bounds object\n * @returns {Point} the center point\n *\n * @deprecated Use `Bounds.center` from `sprotty-protocol` instead.\n */\nexport function center(b: Bounds): Point {\n    return {\n        x: b.x + (b.width >= 0 ? 0.5 * b.width : 0),\n        y: b.y + (b.height >= 0 ? 0.5 * b.height : 0)\n    };\n}\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport function centerOfLine(s: Point, e: Point): Point {\n    const b: Bounds = {\n        x: s.x > e.x ? e.x : s.x,\n        y: s.y > e.y ? e.y : s.y,\n        width: Math.abs(e.x - s.x),\n        height: Math.abs(e.y - s.y)\n    };\n    return center(b);\n}\n\n/**\n * Checks whether the point p is included in the bounds b.\n *\n * @deprecated Use `Bounds.includes` from `sprotty-protocol` instead.\n */\nexport function includes(b: Bounds, p: Point): boolean {\n    return p.x >= b.x && p.x <= b.x + b.width && p.y >= b.y && p.y <= b.y + b.height;\n}\n\n/**\n * Represents an object's insets, for top, bottom, left and right\n */\nexport interface Insets {\n    top: number\n    bottom: number\n    left: number\n    right: number\n}\n\n/**\n * Enumeration of possible directions (left, right, up, down)\n * @deprecated do we use this? We should rather use a string type\n */\nexport enum Direction { left, right, up, down }\n\nexport type Orientation = 'north' | 'south' | 'east' | 'west';\n\n/**\n * Returns the \"straight line\" distance between two points.\n * @param {Point} a - First point\n * @param {Point} b - Second point\n * @returns {number} The Eucledian distance\n *\n * @deprecated Use `Point.euclideanDistance` from `sprotty-protocol` instead.\n */\nexport function euclideanDistance(a: Point, b: Point): number {\n    const dx = b.x - a.x;\n    const dy = b.y - a.y;\n    return Math.sqrt(dx * dx + dy * dy);\n}\n\n/**\n * Returns the distance between two points in a grid, using a\n * strictly vertical and/or horizontal path (versus straight line).\n * @param {Point} a - First point\n * @param {Point} b - Second point\n * @returns {number} The Manhattan distance\n *\n * @deprecated Use `Point.manhattanDistance` from `sprotty-protocol` instead.\n */\nexport function manhattanDistance(a: Point, b: Point): number {\n    return Math.abs(b.x - a.x) + Math.abs(b.y - a.y);\n}\n\n/**\n * Returns the maximum of the horizontal and the vertical distance.\n * @param {Point} a - First point\n * @param {Point} b - Second point\n * @returns {number} The maximum distance\n *\n * @deprecated Use `Point.maxDistance` from `sprotty-protocol` instead.\n */\nexport function maxDistance(a: Point, b: Point): number {\n    return Math.max(Math.abs(b.x - a.x), Math.abs(b.y - a.y));\n}\n\n/**\n * Computes the angle in radians of the given point to the x-axis of the coordinate system.\n * The result is in the range [-pi, pi].\n * @param {Point} p - A point in the Eucledian plane\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport function angleOfPoint(p: Point): number {\n    return Math.atan2(p.y, p.x);\n}\n\n/**\n * Computes the angle in radians between the two given points (relative to the origin of the coordinate system).\n * The result is in the range [0, pi]. Returns NaN if the points are equal.\n * @param {Point} a - First point\n * @param {Point} b - Second point\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport function angleBetweenPoints(a: Point, b: Point): number {\n    const lengthProduct = Math.sqrt((a.x * a.x + a.y * a.y) * (b.x * b.x + b.y * b.y));\n    if (isNaN(lengthProduct) || lengthProduct === 0)\n        return NaN;\n    const dotProduct = a.x * b.x + a.y * b.y;\n    return Math.acos(dotProduct / lengthProduct);\n}\n\n/**\n * Computes a point that is the original `point` shifted towards `refPoint` by the given `distance`.\n * @param {Point} point - Point to shift\n * @param {Point} refPoint - Point to shift towards\n * @param {Point} distance - Distance to shift\n *\n * @deprecated Use `Point.shiftTowards` from `sprotty-protocol` instead.\n */\nexport function shiftTowards(point: Point, refPoint: Point, distance: number): Point {\n    const diff = subtract(refPoint, point);\n    const normalized = normalize(diff);\n    const shift = { x: normalized.x * distance, y: normalized.y * distance };\n    return add(point, shift);\n}\n\n/**\n * Computes the normalized vector from the vector given in `point`; that is, computing its unit vector.\n * @param {Point} point - Point representing the vector to be normalized\n * @returns {Point} The normalized point\n *\n * @deprecated Use `Point.normalize` from `sprotty-protocol` instead.\n */\nexport function normalize(point: Point): Point {\n    const mag = magnitude(point);\n    if (mag === 0 || mag === 1) {\n        return ORIGIN_POINT;\n    }\n    return {\n        x: point.x / mag,\n        y: point.y / mag\n    };\n}\n\n/**\n * Computes the magnitude of the vector given in `point`.\n * @param {Point} point - Point representing the vector to compute the magnitude for\n * @returns {number} The magnitude or also known as length of the `point`\n *\n * @deprecated Use `Point.magnitude` from `sprotty-protocol` instead.\n */\nexport function magnitude(point: Point): number {\n    return Math.sqrt(Math.pow(point.x, 2) + Math.pow(point.y, 2));\n}\n\n/**\n * Converts from radians to degrees\n * @param {number} a - A value in radians\n * @returns {number} The converted value\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport function toDegrees(a: number): number {\n    return a * 180 / Math.PI;\n}\n\n/**\n * Converts from degrees to radians\n * @param {number} a - A value in degrees\n * @returns {number} The converted value\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport function toRadians(a: number): number {\n    return a * Math.PI / 180;\n}\n\n/**\n * Returns whether two numbers are almost equal, within a small margin (0.001)\n * @param {number} a - First number\n * @param {number} b - Second number\n * @returns {boolean} True if the two numbers are almost equal\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport function almostEquals(a: number, b: number): boolean {\n    return Math.abs(a - b) < 1e-3;\n}\n\n/**\n * Calculates a linear combination of p0 and p1 using lambda, i.e.\n *   (1-lambda) * p0 + lambda * p1\n *\n * @deprecated Use `Point.linear` from `sprotty-protocol` instead.\n */\nexport function linear(p0: Point, p1: Point, lambda: number): Point {\n    return {\n        x: (1 - lambda) * p0.x + lambda * p1.x,\n        y: (1 - lambda) * p0.y + lambda * p1.y\n    };\n}\n\n/**\n * A diamond or rhombus is a quadrilateral whose four sides all have the same length.\n * It consists of four points, a `topPoint`, `rightPoint`, `bottomPoint`, and a `leftPoint`,\n * which are connected by four lines -- the `topRightSideLight`, `topLeftSideLine`, `bottomRightSideLine`,\n * and the `bottomLeftSideLine`.\n */\nexport class Diamond {\n\n    constructor(protected bounds: Bounds) { }\n\n    get topPoint(): Point {\n        return {\n            x: this.bounds.x + this.bounds.width / 2,\n            y: this.bounds.y\n        };\n    }\n\n    get rightPoint(): Point {\n        return {\n            x: this.bounds.x + this.bounds.width,\n            y: this.bounds.y + this.bounds.height / 2\n        };\n    }\n\n    get bottomPoint(): Point {\n        return {\n            x: this.bounds.x + this.bounds.width / 2,\n            y: this.bounds.y + this.bounds.height\n        };\n    }\n\n    get leftPoint(): Point {\n        return {\n            x: this.bounds.x,\n            y: this.bounds.y + this.bounds.height / 2\n        };\n    }\n\n    get topRightSideLine(): Line {\n        return new PointToPointLine(this.topPoint, this.rightPoint);\n    }\n\n    get topLeftSideLine(): Line {\n        return new PointToPointLine(this.topPoint, this.leftPoint);\n    }\n\n    get bottomRightSideLine(): Line {\n        return new PointToPointLine(this.bottomPoint, this.rightPoint);\n    }\n\n    get bottomLeftSideLine(): Line {\n        return new PointToPointLine(this.bottomPoint, this.leftPoint);\n    }\n\n    /**\n     * Return the closest side of this diamond to the specified `refPoint`.\n     * @param {Point} refPoint a reference point\n     * @returns {Line} a line representing the closest side\n     */\n    closestSideLine(refPoint: Point): Line {\n        const c = center(this.bounds);\n        if (refPoint.x > c.x) {\n            if (refPoint.y > c.y) {\n                return this.bottomRightSideLine;\n            } else {\n                return this.topRightSideLine;\n            }\n        } else {\n            if (refPoint.y > c.y) {\n                return this.bottomLeftSideLine;\n            } else {\n                return this.topLeftSideLine;\n            }\n        }\n    }\n}\n\n/**\n * A line represented in its standard form `a*x + b*y = c`.\n */\nexport interface Line {\n    readonly a: number\n    readonly b: number\n    readonly c: number\n}\n\nexport type CardinalDirection =\n    'north' | 'north-east' | 'east' | 'south-east' |\n    'south' | 'south-west' | 'west' | 'north-west';\n\n/**\n * A line made up from two points.\n */\nexport class PointToPointLine implements Line {\n\n    constructor(public p1: Point, public p2: Point) { }\n\n    get a(): number {\n        return this.p1.y - this.p2.y;\n    }\n\n    get b(): number {\n        return this.p2.x - this.p1.x;\n    }\n\n    get c(): number {\n        return this.p2.x * this.p1.y - this.p1.x * this.p2.y;\n    }\n\n    /**\n     * The counter-clockwise angle of this line relative to the x-axis.\n     */\n    get angle(): number {\n        return Math.atan2(-this.a, this.b);\n    }\n\n    /**\n     * The slope of the line.\n     * A vertical line returns `undefined`.\n     */\n    get slope(): number | undefined {\n        if (this.b === 0) return undefined;\n        return this.a / this.b;\n    }\n\n    /**\n     * The slope of the line or `Number.MAX_SAFE_INTEGER` if vertical.\n     */\n    get slopeOrMax(): number {\n        if (this.slope === undefined) {\n            return Number.MAX_SAFE_INTEGER;\n        }\n        return this.slope;\n    }\n\n    /**\n     * The direction of this line, such as 'north', 'south', or 'south-west'.\n     */\n    get direction(): CardinalDirection {\n        const hDegrees = toDegrees(this.angle);\n        const degrees = hDegrees < 0 ? 360 + hDegrees : hDegrees;\n        // degrees are relative to the x-axis\n        if (degrees === 90) {\n            return 'south';\n        } else if (degrees === 0 || degrees === 360) {\n            return 'east';\n        } else if (degrees === 270) {\n            return 'north';\n        } else if (degrees === 180) {\n            return 'west';\n        } else if (degrees > 0 && degrees < 90) {\n            return 'south-east';\n        } else if (degrees > 90 && degrees < 180) {\n            return 'south-west';\n        } else if (degrees > 180 && degrees < 270) {\n            return 'north-west';\n        } else if (degrees > 270 && degrees < 360) {\n            return 'north-east';\n        }\n        throw new Error(`Cannot determine direction of line (${this.p1.x},${this.p1.y}) to (${this.p2.x},${this.p2.y})`);\n    }\n\n    /**\n     * @param otherLine the other line\n     * @returns the intersection point between `this` line and the `otherLine` if exists, or `undefined`.\n     */\n    intersection(otherLine: PointToPointLine): Point | undefined {\n        if (this.hasIndistinctPoints(otherLine)) {\n            return undefined;\n        }\n\n        const x1 = this.p1.x;\n        const y1 = this.p1.y;\n        const x2 = this.p2.x;\n        const y2 = this.p2.y;\n        const x3 = otherLine.p1.x;\n        const y3 = otherLine.p1.y;\n        const x4 = otherLine.p2.x;\n        const y4 = otherLine.p2.y;\n\n        const denominator = ((y4 - y3) * (x2 - x1)) - ((x4 - x3) * (y2 - y1));\n        if (denominator === 0) {\n            return undefined;\n        }\n        const numeratorA = ((x4 - x3) * (y1 - y3)) - ((y4 - y3) * (x1 - x3));\n        const numeratorB = ((x2 - x1) * (y1 - y3)) - ((y2 - y1) * (x1 - x3));\n        if (numeratorA === 0 && numeratorB === 0) {\n            return undefined;\n        }\n\n        const determinantA = numeratorA / denominator;\n        const determinantB = numeratorB / denominator;\n        if (determinantA < 0 || determinantA > 1 || determinantB < 0 || determinantB > 1) {\n            return undefined;\n        }\n\n        const x = x1 + (determinantA * (x2 - x1));\n        const y = y1 + (determinantA * (y2 - y1));\n        return { x, y };\n    }\n\n    /**\n     * @param otherLine the other line\n     * @returns whether the start and end point of this line is does not have distinct start\n     * or end points with the `otherLine`\n     */\n    hasIndistinctPoints(otherLine: PointToPointLine): boolean {\n        return pointEquals(this.p1, otherLine.p1) ||\n            pointEquals(this.p1, otherLine.p2) ||\n            pointEquals(this.p2, otherLine.p1) ||\n            pointEquals(this.p2, otherLine.p2);\n    }\n}\n\n/**\n * Returns the intersection of two lines `l1` and `l2`\n * @param {Line} l1 - A line\n * @param {Line} l2 - Another line\n * @returns {Point} The intersection point of `l1` and `l2`\n */\nexport function intersection(l1: Line, l2: Line): Point {\n    return {\n        x: (l1.c * l2.b - l2.c * l1.b) / (l1.a * l2.b - l2.a * l1.b),\n        y: (l1.a * l2.c - l2.a * l1.c) / (l1.a * l2.b - l2.a * l1.b)\n    };\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/** @jsx svg */\nimport { svg }\u00A0from './jsx';\n\nimport { VNode } from \"snabbdom\";\nimport { Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { IView, IViewArgs, RenderingContext } from \"../base/views/view\";\nimport { SNode, SPort } from \"../graph/sgraph\";\nimport { ViewportRootElement } from \"../features/viewport/viewport-root\";\nimport { SShapeElement } from '../features/bounds/model';\nimport { ShapeView } from '../features/bounds/views';\nimport { Hoverable } from '../features/hover/model';\nimport { Selectable } from '../features/select/model';\nimport { Diamond } from '../utils/geometry';\nimport { SModelElement } from '../base/model/smodel';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class SvgViewportView implements IView {\n    render(model: Readonly<ViewportRootElement>, context: RenderingContext, args?: IViewArgs): VNode {\n        const transform = `scale(${model.zoom}) translate(${-model.scroll.x},${-model.scroll.y})`;\n        return <svg>\n            <g transform={transform}>\n                {context.renderChildren(model)}\n            </g>\n        </svg>;\n    }\n}\n\n@injectable()\nexport class CircularNodeView extends ShapeView {\n    render(node: Readonly<SShapeElement & Hoverable & Selectable>, context: RenderingContext, args?: IViewArgs): VNode | undefined {\n        if (!this.isVisible(node, context)) {\n            return undefined;\n        }\n        const radius = this.getRadius(node);\n        return <g>\n            <circle class-sprotty-node={node instanceof SNode} class-sprotty-port={node instanceof SPort}\n                    class-mouseover={node.hoverFeedback} class-selected={node.selected}\n                    r={radius} cx={radius} cy={radius}></circle>\n            {context.renderChildren(node)}\n        </g>;\n    }\n\n    protected getRadius(node: SShapeElement): number {\n        const d = Math.min(node.size.width, node.size.height);\n        return d > 0 ? d / 2 : 0;\n    }\n}\n\n@injectable()\nexport class RectangularNodeView extends ShapeView {\n    render(node: Readonly<SShapeElement & Hoverable & Selectable>, context: RenderingContext, args?: IViewArgs): VNode | undefined {\n        if (!this.isVisible(node, context)) {\n            return undefined;\n        }\n        return <g>\n            <rect class-sprotty-node={node instanceof SNode} class-sprotty-port={node instanceof SPort}\n                  class-mouseover={node.hoverFeedback} class-selected={node.selected}\n                  x=\"0\" y=\"0\" width={Math.max(node.size.width, 0)} height={Math.max(node.size.height, 0)}></rect>\n            {context.renderChildren(node)}\n        </g>;\n    }\n}\n\n@injectable()\nexport class DiamondNodeView extends ShapeView {\n    render(node: Readonly<SShapeElement & Hoverable & Selectable>, context: RenderingContext, args?: IViewArgs): VNode | undefined {\n        if (!this.isVisible(node, context)) {\n            return undefined;\n        }\n        const diamond = new Diamond({ height: Math.max(node.size.height, 0), width: Math.max(node.size.width, 0), x: 0, y: 0 });\n        const points = `${svgStr(diamond.topPoint)} ${svgStr(diamond.rightPoint)} ${svgStr(diamond.bottomPoint)} ${svgStr(diamond.leftPoint)}`;\n        return <g>\n            <polygon class-sprotty-node={node instanceof SNode} class-sprotty-port={node instanceof SPort}\n                  class-mouseover={node.hoverFeedback} class-selected={node.selected}\n                  points={points} />\n            {context.renderChildren(node)}\n        </g>;\n    }\n}\n\nfunction svgStr(point: Point) {\n    return `${point.x},${point.y}`;\n}\n\n@injectable()\nexport class EmptyGroupView implements IView {\n    render(model: Readonly<SModelElement>, context: RenderingContext): VNode {\n        return <g></g>;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject } from 'inversify';\nimport { Action, isAction } from 'sprotty-protocol/lib/actions';\nimport { CommandExecutionContext, CommandReturn, Command } from '../../base/commands/command';\nimport { SModelElement } from '../../base/model/smodel';\nimport { TYPES } from '../../base/types';\nimport { MouseListener } from '../../base/views/mouse-tool';\nimport { KeyListener } from '../../base/views/key-tool';\nimport { matchesKeystroke } from '../../utils/keyboard';\nimport { isSelectable } from '../select/model';\nimport { toArray } from '../../utils/iterable';\nimport { EditableLabel, isEditableLabel, isWithEditableLabel } from './model';\n\nexport interface EditLabelAction extends Action {\n    kind: typeof EditLabelAction.KIND\n    labelId: string\n}\nexport namespace EditLabelAction {\n    export const KIND = 'EditLabel';\n\n    export function create(labelId: string): EditLabelAction {\n        return {\n            kind: KIND,\n            labelId\n        };\n    }\n}\n\nexport function isEditLabelAction(element?: any): element is EditLabelAction {\n    return isAction(element) && element.kind === EditLabelAction.KIND && 'labelId' in element;\n}\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface ApplyLabelEditAction extends Action {\n    kind: typeof ApplyLabelEditAction.KIND;\n    labelId: string,\n    text: string\n}\n\nexport namespace ApplyLabelEditAction {\n    export const KIND = 'applyLabelEdit';\n\n    export function create(labelId: string, text: string): ApplyLabelEditAction {\n        return {\n            kind: KIND,\n            labelId,\n            text\n        };\n    }\n}\n\nexport function isApplyLabelEditAction(element?: any): element is ApplyLabelEditAction {\n    return isAction(element) && element.kind === ApplyLabelEditAction.KIND && 'labelId' in element && 'text' in element;\n}\n\n\nexport class ResolvedLabelEdit {\n    label: EditableLabel;\n    oldLabel: string;\n    newLabel: string;\n}\n\nexport class ApplyLabelEditCommand extends Command {\n    static readonly KIND = ApplyLabelEditAction.KIND;\n\n    protected resolvedLabelEdit: ResolvedLabelEdit;\n\n    constructor(@inject(TYPES.Action) protected readonly action: ApplyLabelEditAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        const index = context.root.index;\n        const label = index.getById(this.action.labelId);\n        if (label && isEditableLabel(label)) {\n            this.resolvedLabelEdit = { label, oldLabel: label.text, newLabel: this.action.text };\n            label.text = this.action.text;\n        }\n        return context.root;\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        if (this.resolvedLabelEdit) {\n            this.resolvedLabelEdit.label.text = this.resolvedLabelEdit.oldLabel;\n        }\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        if (this.resolvedLabelEdit) {\n            this.resolvedLabelEdit.label.text = this.resolvedLabelEdit.newLabel;\n        }\n        return context.root;\n    }\n\n}\n\nexport interface IEditLabelValidator {\n    validate(value: string, label: EditableLabel & SModelElement): Promise<EditLabelValidationResult>;\n}\n\nexport interface EditLabelValidationResult {\n    readonly severity: Severity;\n    readonly message?: string;\n}\n\nexport type Severity = 'ok' | 'warning' | 'error';\n\nexport class EditLabelMouseListener extends MouseListener {\n    override doubleClick(target: SModelElement, event: MouseEvent): (Action | Promise<Action>)[] {\n        const editableLabel = getEditableLabel(target);\n        if (editableLabel) {\n            return [EditLabelAction.create(editableLabel.id)];\n        }\n        return [];\n    }\n}\n\nexport class EditLabelKeyListener extends KeyListener {\n    override keyDown(element: SModelElement, event: KeyboardEvent): Action[] {\n        if (matchesKeystroke(event, 'F2')) {\n            const editableLabels = toArray(element.index.all()\n                .filter(e => isSelectable(e) && e.selected)).map(getEditableLabel)\n                .filter((e): e is EditableLabel & SModelElement => e !== undefined);\n            if (editableLabels.length === 1) {\n                return [EditLabelAction.create(editableLabels[0].id)];\n            }\n        }\n        return [];\n    }\n}\n\nexport function getEditableLabel(element: SModelElement): EditableLabel & SModelElement | undefined {\n    if (isEditableLabel(element)) {\n        return element;\n    } else if (isWithEditableLabel(element) && element.editableLabel) {\n        return element.editableLabel;\n    }\n    return undefined;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from \"inversify\";\nimport { RequestAction, ResponseAction } from 'sprotty-protocol/lib/actions';\nimport { Bounds } from 'sprotty-protocol/lib/utils/geometry';\nimport { ViewerOptions } from '../../base/views/viewer-options';\nimport { isBoundsAware } from '../bounds/model';\nimport { ActionDispatcher } from '../../base/actions/action-dispatcher';\nimport { TYPES } from '../../base/types';\nimport { SModelRoot } from '../../base/model/smodel';\nimport { ILogger } from '../../utils/logging';\n\nexport interface ExportSvgAction extends ResponseAction {\n    kind: typeof ExportSvgAction.KIND;\n    svg: string\n    responseId: string\n}\nexport namespace ExportSvgAction {\n    export const KIND = 'exportSvg';\n\n    export function create(svg: string, requestId: string): ExportSvgAction {\n        return {\n            kind: KIND,\n            svg,\n            responseId: requestId\n        };\n    }\n}\n\n@injectable()\nexport class SvgExporter {\n\n    @inject(TYPES.ViewerOptions) protected options: ViewerOptions;\n    @inject(TYPES.IActionDispatcher) protected actionDispatcher: ActionDispatcher;\n    @inject(TYPES.ILogger) protected log: ILogger;\n\n    export(root: SModelRoot, request?: RequestAction<ExportSvgAction>): void {\n        if (typeof document !== 'undefined') {\n            const div = document.getElementById(this.options.hiddenDiv);\n            if (div !== null && div.firstElementChild && div.firstElementChild.tagName === 'svg') {\n                const svgElement = div.firstElementChild as SVGSVGElement;\n                const svg = this.createSvg(svgElement, root);\n                this.actionDispatcher.dispatch(ExportSvgAction.create(svg, request ? request.requestId : ''));\n            }\n        }\n    }\n\n    protected createSvg(svgElementOrig: SVGSVGElement, root: SModelRoot): string {\n        const serializer = new XMLSerializer();\n        const svgCopy = serializer.serializeToString(svgElementOrig);\n        const iframe: HTMLIFrameElement = document.createElement('iframe');\n        document.body.appendChild(iframe);\n        if (!iframe.contentWindow)\n            throw new Error('IFrame has no contentWindow');\n        const docCopy = iframe.contentWindow.document;\n        docCopy.open();\n        docCopy.write(svgCopy);\n        docCopy.close();\n        const svgElementNew = docCopy.getElementById(svgElementOrig.id)!;\n        svgElementNew.removeAttribute('opacity');\n        this.copyStyles(svgElementOrig, svgElementNew, ['width', 'height', 'opacity']);\n        svgElementNew.setAttribute('version', '1.1');\n        const bounds = this.getBounds(root);\n        svgElementNew.setAttribute('viewBox', `${bounds.x} ${bounds.y} ${bounds.width} ${bounds.height}`);\n        const svgCode = serializer.serializeToString(svgElementNew);\n        document.body.removeChild(iframe);\n        return svgCode;\n    }\n\n    protected copyStyles(source: Element, target: Element, skipedProperties: string[]) {\n        const sourceStyle = getComputedStyle(source);\n        const targetStyle = getComputedStyle(target);\n        let diffStyle = '';\n        for (let i = 0; i < sourceStyle.length; i++) {\n            const key = sourceStyle[i];\n            if (skipedProperties.indexOf(key) === -1) {\n                const value = sourceStyle.getPropertyValue(key);\n                if (targetStyle.getPropertyValue(key) !== value) {\n                    diffStyle += key + \":\" + value + \";\";\n                }\n            }\n        }\n        if (diffStyle !== '')\n            target.setAttribute('style', diffStyle);\n        // IE doesn't retrun anything on source.children\n        for (let i = 0; i < source.childNodes.length; ++i) {\n            const sourceChild = source.childNodes[i];\n            const targetChild = target.childNodes[i];\n            if (sourceChild instanceof Element)\n                this.copyStyles(sourceChild, targetChild as Element, []);\n        }\n    }\n\n    protected getBounds(root: SModelRoot) {\n        const allBounds: Bounds[] = [ Bounds.EMPTY ];\n        root.children.forEach(element => {\n            if (isBoundsAware(element)) {\n                allBounds.push(element.bounds);\n            }\n        });\n        return allBounds.reduce((one, two) => Bounds.combine(one, two));\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from \"inversify\";\nimport { Action, ComputedBoundsAction, RequestModelAction } from \"sprotty-protocol/lib/actions\";\nimport { SModelElement as SModelElementSchema, SModelRoot as SModelRootSchema } from 'sprotty-protocol/lib/model';\nimport { Dimension, Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { SModelIndex } from \"sprotty-protocol/lib/utils/model-utils\";\nimport { IActionDispatcher } from \"../base/actions/action-dispatcher\";\nimport { ActionHandlerRegistry, IActionHandler, IActionHandlerInitializer } from \"../base/actions/action-handler\";\nimport { ICommand } from \"../base/commands/command\";\nimport { TYPES } from \"../base/types\";\nimport { ViewerOptions } from \"../base/views/viewer-options\";\nimport { ExportSvgAction } from '../features/export/svg-exporter';\n\n/**\n * A model source is serving the model to the event cycle. It represents\n * the entry point to the client for external sources, such as model\n * editors.\n *\n * As an IActionHandler it listens to actions in and reacts to them with\n * commands or actions if necessary. This way, you can implement action\n * protocols between the client and the outside world.\n *\n * There are two default implementations for a ModelSource:\n * <ul>\n * <li>the LocalModelSource handles the actions to calculate bounds and\n * set/update the model</li>\n * <li>the DiagramServer connects via websocket to a remote source. It\n * can be used to connect to a model editor that provides the model,\n * layouts diagrams, transfers selection and answers model queries from\n * the client.</li>\n */\n@injectable()\nexport abstract class ModelSource implements IActionHandler, IActionHandlerInitializer {\n\n    @inject(TYPES.IActionDispatcher) readonly actionDispatcher: IActionDispatcher;\n    @inject(TYPES.ViewerOptions) protected viewerOptions: ViewerOptions;\n\n    initialize(registry: ActionHandlerRegistry): void {\n        // Register this model source\n        registry.register(RequestModelAction.KIND, this);\n        registry.register(ExportSvgAction.KIND, this);\n    }\n\n    abstract handle(action: Action): ICommand | Action | void;\n\n    /**\n     * Commit changes from the internal SModel back to the currentModel.\n     *\n     * This method is meant to be called only by CommitModelCommand and other commands\n     * that need to feed the current internal model back to the model source. It does\n     * not have any side effects such as triggering layout or bounds computation, as the\n     * internal model is already current. See `CommitModelAction` for details.\n     *\n     * @param newRoot the new model.\n     * @return the previous model.\n     */\n    abstract commitModel(newRoot: SModelRootSchema): Promise<SModelRootSchema> | SModelRootSchema;\n}\n\n\n@injectable()\nexport class ComputedBoundsApplicator {\n    apply(root: SModelRootSchema, action: ComputedBoundsAction): SModelIndex {\n        const index = new SModelIndex();\n        index.add(root);\n        for (const b of action.bounds) {\n            const element = index.getById(b.elementId);\n            if (element !== undefined)\n                this.applyBounds(element, b.newPosition, b.newSize);\n        }\n        if (action.alignments !== undefined) {\n            for (const a of action.alignments) {\n                const element = index.getById(a.elementId);\n                if (element !== undefined)\n                    this.applyAlignment(element, a.newAlignment);\n            }\n        }\n        return index;\n    }\n\n    protected applyAlignment(element: SModelElementSchema, newAlignment: Point) {\n        const e = element as any;\n        e.alignment = { x: newAlignment.x, y: newAlignment.y };\n    }\n\n    protected applyBounds(element: SModelElementSchema, newPosition: Point | undefined, newSize: Dimension) {\n        const e = element as any;\n        if (newPosition)\n            e.position = {...newPosition};\n        e.size = {...newSize};\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from \"inversify\";\nimport { Action } from \"sprotty-protocol/lib/actions\";\nimport { SModelRoot as SModelRootSchema } from 'sprotty-protocol/lib/model';\nimport { CommandExecutionContext, CommandReturn, SystemCommand } from \"../base/commands/command\";\nimport { SModelRoot } from \"../base/model/smodel\";\nimport { TYPES } from \"../base/types\";\nimport { ModelSource } from \"./model-source\";\n\n/**\n * Commit the current SModel back to the model source.\n *\n * The SModel (AKA internal model) contains a lot of dirty/transitional state, such\n * as intermediate move postions or handles. When a user interaction that spans multiple\n * commands finishes, it fires a CommitModelAction to write the final changes back to\n * the model source.\n */\nexport interface CommitModelAction extends Action {\n    kind: typeof CommitModelAction.KIND;\n}\nexport namespace CommitModelAction {\n    export const KIND = 'commitModel';\n\n    export function create(): CommitModelAction {\n        return {\n            kind: KIND\n        };\n    }\n}\n\n@injectable()\nexport class CommitModelCommand extends SystemCommand {\n    static readonly KIND = CommitModelAction.KIND;\n\n    @inject(TYPES.ModelSource) modelSource: ModelSource;\n\n    originalModel: SModelRootSchema;\n    newModel: SModelRootSchema;\n\n    constructor(@inject(TYPES.Action) protected readonly action: CommitModelAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        this.newModel = context.modelFactory.createSchema(context.root);\n        return this.doCommit(this.newModel, context.root, true);\n    }\n\n    protected doCommit(model: SModelRootSchema, result: SModelRoot, doSetOriginal: boolean): CommandReturn {\n        const commitResult = this.modelSource.commitModel(model);\n        if (commitResult instanceof Promise) {\n            return commitResult.then(originalModel => {\n                if (doSetOriginal)\n                    this.originalModel = originalModel;\n                return result;\n            });\n        } else {\n            if (doSetOriginal)\n                this.originalModel = commitResult;\n            return result;\n        }\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        return this.doCommit(this.originalModel, context.root, false);\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        return this.doCommit(this.newModel, context.root, false);\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Action, SetViewportAction } from \"sprotty-protocol/lib/actions\";\nimport { Viewport } from \"sprotty-protocol/lib/model\";\nimport { Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { getWindowScroll } from \"../../utils/browser\";\nimport { SModelElement, SModelRoot } from \"../../base/model/smodel\";\nimport { MouseListener } from \"../../base/views/mouse-tool\";\nimport { SModelExtension } from \"../../base/model/smodel-extension\";\nimport { findParentByFeature } from \"../../base/model/smodel-utils\";\nimport { isViewport } from \"./model\";\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface Zoomable extends SModelExtension {\n    zoom: number\n}\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport function isZoomable(element: SModelElement | Zoomable): element is Zoomable {\n    return 'zoom' in element;\n}\n\nexport function getZoom(label: SModelElement) {\n    let zoom = 1;\n    const viewport = findParentByFeature(label, isViewport);\n    if (viewport) {\n        zoom = viewport.zoom;\n    }\n    return zoom;\n}\n\nexport class ZoomMouseListener extends MouseListener {\n\n    override wheel(target: SModelElement, event: WheelEvent): Action[] {\n        const viewport = findParentByFeature(target, isViewport);\n        if (viewport) {\n            const newZoom = this.getZoomFactor(event);\n            const viewportOffset = this.getViewportOffset(target.root, event);\n            const offsetFactor = 1.0 / (newZoom * viewport.zoom) - 1.0 / viewport.zoom;\n            const newViewport: Viewport = {\n                scroll: {\n                    x: viewport.scroll.x - offsetFactor * viewportOffset.x,\n                    y: viewport.scroll.y - offsetFactor * viewportOffset.y\n                },\n                zoom: viewport.zoom * newZoom\n            };\n            return [SetViewportAction.create(viewport.id, newViewport, { animate: false })];\n        }\n        return [];\n    }\n\n    protected getViewportOffset(root: SModelRoot, event: WheelEvent): Point {\n        const canvasBounds = root.canvasBounds;\n        const windowScroll = getWindowScroll();\n        return {\n            x: event.clientX + windowScroll.x - canvasBounds.x,\n            y: event.clientY + windowScroll.y - canvasBounds.y\n        };\n    }\n\n    protected getZoomFactor(event: WheelEvent): number {\n        if (event.deltaMode === event.DOM_DELTA_PAGE)\n            return Math.exp(-event.deltaY * 0.5);\n        else if (event.deltaMode === event.DOM_DELTA_LINE)\n            return Math.exp(-event.deltaY * 0.05);\n        else // deltaMode === DOM_DELTA_PIXEL\n            return Math.exp(-event.deltaY * 0.005);\n    }\n\n}\n", "/********************************************************************************\n * Copyright (c) 2019-2022 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, optional } from 'inversify';\nimport { Action, ApplyLabelEditAction } from 'sprotty-protocol/lib/actions';\nimport { IActionDispatcherProvider } from '../../base/actions/action-dispatcher';\nimport { IActionHandler } from '../../base/actions/action-handler';\nimport { ICommand } from '../../base/commands/command';\nimport { SModelElement, SModelRoot } from '../../base/model/smodel';\nimport { TYPES } from '../../base/types';\nimport { AbstractUIExtension } from '../../base/ui-extensions/ui-extension';\nimport { SetUIExtensionVisibilityAction } from '../../base/ui-extensions/ui-extension-registry';\nimport { DOMHelper } from '../../base/views/dom-helper';\nimport { ViewerOptions } from '../../base/views/viewer-options';\nimport { CommitModelAction } from '../../model-source/commit-model';\nimport { matchesKeystroke, KeyCode, KeyboardModifier } from '../../utils/keyboard';\nimport { getAbsoluteClientBounds } from '../bounds/model';\nimport { getZoom } from '../viewport/zoom';\nimport { EditLabelValidationResult, IEditLabelValidator, isEditLabelAction, Severity } from './edit-label';\nimport { EditableLabel, isEditableLabel } from './model';\n\n/** Shows a UI extension for editing a label on emitted `EditLabelAction`s. */\n@injectable()\nexport class EditLabelActionHandler implements IActionHandler {\n    handle(action: Action): void | Action | ICommand {\n        if (isEditLabelAction(action)) {\n            return SetUIExtensionVisibilityAction.create({ extensionId: EditLabelUI.ID, visible: true, contextElementsId: [action.labelId] });\n        }\n    }\n}\n\nexport interface IEditLabelValidationDecorator {\n    decorate(input: HTMLInputElement | HTMLTextAreaElement, validationResult: EditLabelValidationResult): void;\n    dispose(input: HTMLInputElement | HTMLTextAreaElement): void;\n}\n\n@injectable()\nexport class EditLabelUI extends AbstractUIExtension {\n    static readonly ID = 'editLabelUi';\n\n    @inject(TYPES.IActionDispatcherProvider) public actionDispatcherProvider: IActionDispatcherProvider;\n    @inject(TYPES.ViewerOptions) protected viewerOptions: ViewerOptions;\n    @inject(TYPES.DOMHelper) protected domHelper: DOMHelper;\n    @inject(TYPES.IEditLabelValidator) @optional() public labelValidator: IEditLabelValidator;\n    @inject(TYPES.IEditLabelValidationDecorator) @optional() public validationDecorator: IEditLabelValidationDecorator;\n\n    protected inputElement: HTMLInputElement;\n    protected textAreaElement: HTMLTextAreaElement;\n\n    protected label?: EditableLabel & SModelElement;\n    protected labelElement: HTMLElement | null;\n    protected validationTimeout?: number = undefined;\n    protected isActive: boolean = false;\n    protected blockApplyEditOnInvalidInput = true;\n    protected isCurrentLabelValid: boolean = true;\n    protected previousLabelContent?: string;\n\n    public id() { return EditLabelUI.ID; }\n    public containerClass() { return 'label-edit'; }\n\n    protected get labelId() { return this.label ? this.label.id : 'unknown'; }\n\n    protected initializeContents(containerElement: HTMLElement) {\n        containerElement.style.position = 'absolute';\n        this.inputElement = document.createElement('input');\n        this.textAreaElement = document.createElement('textarea');\n        [this.inputElement, this.textAreaElement].forEach((element) => {\n            element.onkeydown = event => this.applyLabelEditOnEvent(event, 'Enter');\n            this.configureAndAdd(element, containerElement);\n        });\n    }\n\n    protected configureAndAdd(element: HTMLInputElement | HTMLTextAreaElement, containerElement: HTMLElement) {\n        element.style.visibility = 'hidden';\n        element.style.position = 'absolute';\n        element.style.top = '0px';\n        element.style.left = '0px';\n        element.addEventListener('keydown', (event: KeyboardEvent) => this.hideIfEscapeEvent(event));\n        element.addEventListener('keyup', (event: KeyboardEvent) => this.validateLabelIfContentChange(event, element.value));\n        element.addEventListener('blur', () => window.setTimeout(() => this.applyLabelEdit(), 200));\n        containerElement.appendChild(element);\n    }\n\n    get editControl(): HTMLInputElement | HTMLTextAreaElement {\n        if (this.label && this.label.isMultiLine) {\n            return this.textAreaElement;\n        }\n        return this.inputElement;\n    }\n\n    protected hideIfEscapeEvent(event: KeyboardEvent) {\n        if (matchesKeystroke(event, 'Escape')) { this.hide(); }\n    }\n\n    protected applyLabelEditOnEvent(event: KeyboardEvent, code?: KeyCode, ...modifiers: KeyboardModifier[]) {\n        if (matchesKeystroke(event, code ? code : 'Enter', ...modifiers)) {\n            event.preventDefault();\n            this.applyLabelEdit();\n        }\n    }\n\n    protected validateLabelIfContentChange(event: KeyboardEvent, value: string) {\n        if (this.previousLabelContent === undefined || this.previousLabelContent !== value) {\n            this.previousLabelContent = value;\n            this.performLabelValidation(event, this.editControl.value);\n        }\n    }\n\n    protected async applyLabelEdit() {\n        if (!this.isActive) {\n            return;\n        }\n        if (this.label?.text === this.editControl.value) {\n            // no action necessary\n            this.hide();\n            return;\n        }\n        if (this.blockApplyEditOnInvalidInput) {\n            const result = await this.validateLabel(this.editControl.value);\n            if ('error' === result.severity) {\n                this.editControl.focus();\n                return;\n            }\n        }\n        this.actionDispatcherProvider()\n            .then((actionDispatcher) => actionDispatcher.dispatchAll([ApplyLabelEditAction.create(this.labelId, this.editControl.value), CommitModelAction.create()]))\n            .catch((reason) => this.logger.error(this, 'No action dispatcher available to execute apply label edit action', reason));\n        this.hide();\n    }\n\n    protected performLabelValidation(event: KeyboardEvent, value: string) {\n        if (this.validationTimeout) {\n            window.clearTimeout(this.validationTimeout);\n        }\n        this.validationTimeout = window.setTimeout(() => this.validateLabel(value), 200);\n    }\n\n    protected async validateLabel(value: string): Promise<EditLabelValidationResult> {\n        if (this.labelValidator && this.label) {\n            try {\n                const result = await this.labelValidator.validate(value, this.label);\n                this.isCurrentLabelValid = 'error' !== result.severity;\n                this.showValidationResult(result);\n                return result;\n            } catch (reason) {\n                this.logger.error(this, 'Error validating edited label', reason);\n            }\n        }\n        this.isCurrentLabelValid = true;\n        return { severity: <Severity>'ok', message: undefined };\n    }\n\n    protected showValidationResult(result: EditLabelValidationResult) {\n        this.clearValidationResult();\n        if (this.validationDecorator) {\n            this.validationDecorator.decorate(this.editControl, result);\n        }\n    }\n\n    protected clearValidationResult() {\n        if (this.validationDecorator) {\n            this.validationDecorator.dispose(this.editControl);\n        }\n    }\n\n    override show(root: Readonly<SModelRoot>, ...contextElementIds: string[]) {\n        if (!hasEditableLabel(contextElementIds, root) || this.isActive) {\n            return;\n        }\n        super.show(root, ...contextElementIds);\n        this.isActive = true;\n    }\n\n    override hide(): void {\n        this.editControl.style.visibility = 'hidden';\n        super.hide();\n        this.clearValidationResult();\n        this.isActive = false;\n        this.isCurrentLabelValid = true;\n        this.previousLabelContent = undefined;\n        if (this.labelElement) {\n            this.labelElement.style.visibility = 'visible';\n        }\n    }\n\n    protected override onBeforeShow(containerElement: HTMLElement, root: Readonly<SModelRoot>, ...contextElementIds: string[]) {\n        this.label = getEditableLabels(contextElementIds, root)[0];\n        this.previousLabelContent = this.label.text;\n        this.setPosition(containerElement);\n        this.applyTextContents();\n        this.applyFontStyling();\n        this.editControl.style.visibility = 'visible';\n        this.editControl.focus();\n    }\n\n    protected setPosition(containerElement: HTMLElement) {\n        let x = 0;\n        let y = 0;\n        let width = 100;\n        let height = 20;\n\n        if (this.label) {\n            const zoom = getZoom(this.label);\n            const bounds = getAbsoluteClientBounds(this.label, this.domHelper, this.viewerOptions);\n            x = bounds.x + (this.label.editControlPositionCorrection ? this.label.editControlPositionCorrection.x : 0) * zoom;\n            y = bounds.y + (this.label.editControlPositionCorrection ? this.label.editControlPositionCorrection.y : 0) * zoom;\n            height = (this.label.editControlDimension ? this.label.editControlDimension.height : height) * zoom;\n            width = (this.label.editControlDimension ? this.label.editControlDimension.width : width) * zoom;\n        }\n\n        containerElement.style.left = `${x}px`;\n        containerElement.style.top = `${y}px`;\n        containerElement.style.width = `${width}px`;\n        this.editControl.style.width = `${width}px`;\n        containerElement.style.height = `${height}px`;\n        this.editControl.style.height = `${height}px`;\n    }\n\n    protected applyTextContents() {\n        if (this.label) {\n            this.editControl.value = this.label.text;\n            if (this.editControl instanceof HTMLTextAreaElement) {\n                this.editControl.selectionStart = 0;\n                this.editControl.selectionEnd = 0;\n                this.editControl.scrollTop = 0;\n                this.editControl.scrollLeft = 0;\n            } else {\n                this.editControl.setSelectionRange(0, this.editControl.value.length);\n            }\n        }\n    }\n\n    protected applyFontStyling() {\n        if (this.label) {\n            this.labelElement = document.getElementById(this.domHelper.createUniqueDOMElementId(this.label));\n            if (this.labelElement) {\n                this.labelElement.style.visibility = 'hidden';\n                const style = window.getComputedStyle(this.labelElement);\n                this.editControl.style.font = style.font;\n                this.editControl.style.fontStyle = style.fontStyle;\n                this.editControl.style.fontFamily = style.fontFamily;\n                this.editControl.style.fontSize = scaledFont(style.fontSize, getZoom(this.label));\n                this.editControl.style.fontWeight = style.fontWeight;\n                this.editControl.style.lineHeight = style.lineHeight;\n            }\n        }\n    }\n}\n\nfunction hasEditableLabel(contextElementIds: string[], root: Readonly<SModelRoot>) {\n    return getEditableLabels(contextElementIds, root).length === 1;\n}\n\nfunction getEditableLabels(contextElementIds: string[], root: Readonly<SModelRoot>) {\n    return contextElementIds.map(id => root.index.getById(id)).filter(isEditableLabel);\n}\n\nfunction scaledFont(font: string, zoom: number): string {\n    return font.replace(/([0-9]+)/, (match) => {\n        return String(Number.parseInt(match, 10) * zoom);\n    });\n}\n", "/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from \"inversify\";\nimport { Action } from \"sprotty-protocol/lib/actions\";\nimport { Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { Command, CommandExecutionContext, CommandReturn } from \"../../base/commands/command\";\nimport { SModelElement, SModelRoot, SParentElement } from '../../base/model/smodel';\nimport { TYPES } from \"../../base/types\";\nimport { SRoutableElement, SRoutingHandle } from \"../routing/model\";\nimport { EdgeRouterRegistry } from \"../routing/routing\";\nimport { canEditRouting } from './model';\n\nexport interface SwitchEditModeAction extends Action {\n    kind: typeof SwitchEditModeAction.KIND;\n    elementsToActivate: string[]\n    elementsToDeactivate: string[]\n}\nexport namespace SwitchEditModeAction {\n    export const KIND = \"switchEditMode\";\n\n    export function create(options: { elementsToActivate?: string[], elementsToDeactivate?: string[] }): SwitchEditModeAction {\n        return {\n            kind: KIND,\n            elementsToActivate: options.elementsToActivate ?? [],\n            elementsToDeactivate: options.elementsToDeactivate ?? []\n        };\n    }\n}\n\n@injectable()\nexport class SwitchEditModeCommand extends Command {\n    static readonly KIND: string = SwitchEditModeAction.KIND;\n\n    @inject(EdgeRouterRegistry) edgeRouterRegistry: EdgeRouterRegistry;\n\n    protected elementsToActivate: SModelElement[] = [];\n    protected elementsToDeactivate: SModelElement[] = [];\n    protected handlesToRemove: { handle: SRoutingHandle, parent: SRoutableElement, point?: Point }[] = [];\n\n    constructor(@inject(TYPES.Action) protected readonly action: SwitchEditModeAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        const index = context.root.index;\n        this.action.elementsToActivate.forEach(id => {\n            const element = index.getById(id);\n            if (element !== undefined )\n                this.elementsToActivate.push(element);\n        });\n        this.action.elementsToDeactivate.forEach(id => {\n            const element = index.getById(id);\n            if (element !== undefined)\n                this.elementsToDeactivate.push(element);\n            if (element instanceof SRoutingHandle && element.parent instanceof SRoutableElement) {\n                const parent = element.parent;\n                if (this.shouldRemoveHandle(element, parent)) {\n                    this.handlesToRemove.push({ handle: element, parent });\n                    this.elementsToDeactivate.push(parent);\n                    this.elementsToActivate.push(parent);\n                }\n            }\n        });\n        return this.doExecute(context);\n    }\n\n    protected doExecute(context: CommandExecutionContext): SModelRoot {\n        this.handlesToRemove.forEach(entry => {\n            entry.point = entry.parent.routingPoints.splice(entry.handle.pointIndex, 1)[0];\n        });\n        this.elementsToDeactivate.forEach(element => {\n            if (element instanceof SRoutableElement)\n                element.removeAll(child => child instanceof SRoutingHandle);\n            else if (element instanceof SRoutingHandle) {\n                element.editMode = false;\n                if (element.danglingAnchor) {\n                    if (element.parent instanceof SRoutableElement && element.danglingAnchor.original)  {\n                        if (element.parent.source === element.danglingAnchor)\n                            element.parent.sourceId = element.danglingAnchor.original.id;\n                        else if (element.parent.target === element.danglingAnchor)\n                            element.parent.targetId = element.danglingAnchor.original.id;\n                        element.danglingAnchor.parent.remove(element.danglingAnchor);\n                        element.danglingAnchor = undefined;\n                    }\n                }\n            }\n        });\n        this.elementsToActivate.forEach(element => {\n            if (canEditRouting(element) && element instanceof SParentElement) {\n                const router = this.edgeRouterRegistry.get(element.routerKind);\n                router.createRoutingHandles(element);\n            } else if (element instanceof SRoutingHandle)\n                element.editMode = true;\n        });\n        return context.root;\n    }\n\n    protected shouldRemoveHandle(handle: SRoutingHandle, parent: SRoutableElement): boolean {\n        if (handle.kind === 'junction') {\n            const route = this.edgeRouterRegistry.route(parent);\n            return route.find(rp => rp.pointIndex === handle.pointIndex) === undefined;\n        }\n        return false;\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        this.handlesToRemove.forEach(entry => {\n            if (entry.point !== undefined)\n                entry.parent.routingPoints.splice(entry.handle.pointIndex, 0, entry.point);\n        });\n        this.elementsToActivate.forEach(element => {\n            if (element instanceof SRoutableElement)\n                element.removeAll(child => child instanceof SRoutingHandle);\n            else if (element instanceof SRoutingHandle)\n                element.editMode = false;\n        });\n        this.elementsToDeactivate.forEach(element => {\n            if (canEditRouting(element)) {\n                const router = this.edgeRouterRegistry.get(element.routerKind);\n                router.createRoutingHandles(element);\n            } else if (element instanceof SRoutingHandle)\n                element.editMode = true;\n        });\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        return this.doExecute(context);\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport { Action } from 'sprotty-protocol/lib/actions';\nimport { Command, CommandExecutionContext, CommandReturn } from '../../base/commands/command';\nimport { TYPES } from '../../base/types';\nimport { SRoutableElement } from '../routing/model';\nimport { EdgeMemento, EdgeRouterRegistry } from '../routing/routing';\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface ReconnectAction extends Action {\n    kind: typeof ReconnectAction.KIND\n    routableId: string\n    newSourceId?: string\n    newTargetId?: string\n}\nexport namespace ReconnectAction {\n    export const KIND = 'reconnect';\n\n    export function create(options: { routableId: string, newSourceId?: string, newTargetId?: string }): ReconnectAction {\n        return {\n            kind: KIND,\n            routableId: options.routableId,\n            newSourceId: options.newSourceId,\n            newTargetId: options.newTargetId\n        };\n    }\n}\n\n@injectable()\nexport class ReconnectCommand extends Command {\n    static readonly KIND = ReconnectAction.KIND;\n\n    @inject(EdgeRouterRegistry) edgeRouterRegistry: EdgeRouterRegistry;\n\n    memento: EdgeMemento | undefined;\n\n    constructor(@inject(TYPES.Action) protected readonly action: ReconnectAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        this.doExecute(context);\n        return context.root;\n    }\n\n    private doExecute(context: CommandExecutionContext) {\n        const index = context.root.index;\n        const edge = index.getById(this.action.routableId);\n        if (edge instanceof SRoutableElement) {\n            const router = this.edgeRouterRegistry.get(edge.routerKind);\n            const before = router.takeSnapshot(edge);\n            router.applyReconnect(edge, this.action.newSourceId, this.action.newTargetId);\n            const after = router.takeSnapshot(edge);\n            this.memento = {\n                edge: edge,\n                before,\n                after\n            };\n        }\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        if (this.memento) {\n            const router = this.edgeRouterRegistry.get(this.memento.edge.routerKind);\n            router.applySnapshot(this.memento.edge, this.memento.before);\n        }\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        if (this.memento) {\n            const router = this.edgeRouterRegistry.get(this.memento.edge.routerKind);\n            router.applySnapshot(this.memento.edge, this.memento.after);\n        }\n        return context.root;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"../../base/types\";\nimport { configureCommand } from \"../../base/commands/command-registration\";\nimport { configureActionHandler } from \"../../base/actions/action-handler\";\nimport { configureModelElement } from \"../../base/views/view\";\nimport { SDanglingAnchor } from \"../../features/routing/model\";\nimport { EmptyGroupView } from \"../../lib/svg-views\";\nimport { DeleteElementCommand } from \"./delete\";\nimport { EditLabelMouseListener, ApplyLabelEditCommand, EditLabelKeyListener, EditLabelAction } from \"./edit-label\";\nimport { EditLabelUI, EditLabelActionHandler } from \"./edit-label-ui\";\nimport { SwitchEditModeCommand } from \"./edit-routing\";\nimport { ReconnectCommand } from \"./reconnect\";\n\nexport const edgeEditModule = new ContainerModule((bind, _unbind, isBound) => {\n    const context = { bind, isBound };\n    configureCommand(context, SwitchEditModeCommand);\n    configureCommand(context, ReconnectCommand);\n    configureCommand(context, DeleteElementCommand);\n    configureModelElement(context, 'dangling-anchor', SDanglingAnchor, EmptyGroupView);\n});\n\nexport const labelEditModule = new ContainerModule((bind, _unbind, isBound) => {\n    bind(EditLabelMouseListener).toSelf().inSingletonScope();\n    bind(TYPES.MouseListener).toService(EditLabelMouseListener);\n    bind(EditLabelKeyListener).toSelf().inSingletonScope();\n    bind(TYPES.KeyListener).toService(EditLabelKeyListener);\n    configureCommand({ bind, isBound }, ApplyLabelEditCommand);\n});\n\nexport const labelEditUiModule = new ContainerModule((bind, _unbind, isBound) => {\n    const context = { bind, isBound };\n    configureActionHandler(context, EditLabelAction.KIND, EditLabelActionHandler);\n    bind(EditLabelUI).toSelf().inSingletonScope();\n    bind(TYPES.IUIExtension).toService(EditLabelUI);\n});\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SModelElement } from '../../base/model/smodel';\nimport { SModelExtension } from '../../base/model/smodel-extension';\n\nexport const expandFeature = Symbol('expandFeature');\n\n/**\n * Model elements that implement this interface can be expanded/collapsed\n */\nexport interface Expandable extends SModelExtension {\n    expanded: boolean\n}\n\nexport function isExpandable(element: SModelElement): element is SModelElement & Expandable {\n    return element.hasFeature(expandFeature) && 'expanded' in element;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { Action, CollapseExpandAction as ProtocolCollapseExpandAction, CollapseExpandAllAction as ProtocolCollapseExpandAllAction} from 'sprotty-protocol/lib/actions';\nimport { SButton } from '../button/model';\nimport { findParentByFeature } from '../../base/model/smodel-utils';\nimport { isExpandable } from './model';\nimport { IButtonHandler } from '../button/button-handler';\n\n/**\n * Sent from the client to the model source to recalculate a diagram when elements\n * are collapsed/expanded by the client.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport class CollapseExpandAction implements Action,ProtocolCollapseExpandAction {\n    static readonly KIND = 'collapseExpand';\n    readonly kind = CollapseExpandAction.KIND;\n\n    constructor(public readonly expandIds: string[],\n                public readonly collapseIds: string[]) {\n    }\n}\n\n/**\n * Programmatic action for expanding or collapsing all elements.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport class CollapseExpandAllAction implements Action,ProtocolCollapseExpandAllAction {\n    static readonly KIND = 'collapseExpandAll';\n    readonly kind = CollapseExpandAllAction.KIND;\n\n    /**\n     * If `expand` is true, all elements are expanded, othewise they are collapsed.\n     */\n    constructor(public readonly expand: boolean = true) {\n    }\n}\n\n@injectable()\nexport class ExpandButtonHandler implements IButtonHandler {\n    static TYPE = 'button:expand';\n\n    buttonPressed(button: SButton): Action[] {\n        const expandable = findParentByFeature(button, isExpandable);\n        if (expandable !== undefined) {\n            return [ ProtocolCollapseExpandAction.create({\n                expandIds:   expandable.expanded ? [] : [ expandable.id ],\n                collapseIds:  expandable.expanded ? [ expandable.id ] : []\n            })];\n        } else {\n            return [];\n        }\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n /** @jsx svg */\nimport { svg } from '../../lib/jsx';\n\nimport { VNode } from 'snabbdom';\nimport { IView, RenderingContext } from '../../base/views/view';\nimport { isExpandable } from './model';\nimport { findParentByFeature } from '../../base/model/smodel-utils';\nimport { SButton } from '../button/model';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class ExpandButtonView implements IView {\n    render(button: SButton, context: RenderingContext): VNode {\n        const expandable = findParentByFeature(button, isExpandable);\n        const path = (expandable !== undefined && expandable.expanded)\n            ? 'M 1,5 L 8,12 L 15,5 Z'\n            : 'M 1,8 L 8,15 L 8,1 Z';\n        return <g class-sprotty-button=\"{true}\" class-enabled=\"{button.enabled}\">\n                <rect x={0} y={0} width={16} height={16} opacity={0}></rect>\n                <path d={path}></path>\n            </g>;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from \"inversify\";\nimport { VNode } from 'snabbdom';\nimport { Action, generateRequestId, RequestAction } from \"sprotty-protocol/lib/actions\";\nimport { CommandExecutionContext, HiddenCommand, CommandResult } from '../../base/commands/command';\nimport { IVNodePostprocessor } from '../../base/views/vnode-postprocessor';\nimport { isSelectable } from '../select/model';\nimport { SModelElement, SModelRoot } from '../../base/model/smodel';\nimport { KeyListener } from '../../base/views/key-tool';\nimport { matchesKeystroke } from '../../utils/keyboard';\nimport { isExportable } from './model';\nimport { SvgExporter, ExportSvgAction } from './svg-exporter';\nimport { isViewport } from '../viewport/model';\nimport { isHoverable } from '../hover/model';\nimport { TYPES } from '../../base/types';\n\n@injectable()\nexport class ExportSvgKeyListener extends KeyListener {\n    override keyDown(element: SModelElement, event: KeyboardEvent): Action[] {\n        if (matchesKeystroke(event, 'KeyE', 'ctrlCmd', 'shift'))\n            return [ RequestExportSvgAction.create() ];\n        else\n            return [];\n    }\n}\n\nexport interface RequestExportSvgAction extends RequestAction<ExportSvgAction> {\n    kind: typeof RequestExportSvgAction.KIND\n}\nexport namespace RequestExportSvgAction {\n    export const KIND = 'requestExportSvg';\n\n    export function create(): RequestExportSvgAction {\n        return {\n            kind: KIND,\n            requestId: generateRequestId()\n        };\n    }\n}\n\nexport class ExportSvgCommand extends HiddenCommand {\n    static readonly KIND = RequestExportSvgAction.KIND;\n\n    constructor(@inject(TYPES.Action) protected action: RequestExportSvgAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandResult {\n        if (isExportable(context.root)) {\n            const root = context.modelFactory.createRoot(context.root);\n            if (isExportable(root)) {\n                if (isViewport(root)) {\n                    root.zoom = 1;\n                    root.scroll = { x: 0, y: 0 };\n                }\n                root.index.all().forEach(element => {\n                    if (isSelectable(element) && element.selected)\n                        element.selected = false;\n                    if (isHoverable(element) && element.hoverFeedback)\n                        element.hoverFeedback = false;\n                });\n                return {\n                    model: root,\n                    modelChanged: true,\n                    cause: this.action\n                };\n            }\n        }\n        return {\n            model: context.root,\n            modelChanged: false\n        };\n    }\n}\n\n@injectable()\nexport class ExportSvgPostprocessor implements IVNodePostprocessor {\n\n    root: SModelRoot;\n\n    @inject(TYPES.SvgExporter) protected svgExporter: SvgExporter;\n\n    decorate(vnode: VNode, element: SModelElement): VNode {\n        if (element instanceof SModelRoot)\n            this.root = element;\n        return vnode;\n    }\n\n    postUpdate(cause?: Action): void {\n        if (this.root && cause !== undefined && cause.kind === RequestExportSvgAction.KIND) {\n            this.svgExporter.export(this.root, cause as RequestExportSvgAction);\n        }\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from \"inversify\";\nimport { VNode } from \"snabbdom\";\nimport { Animation } from \"../../base/animations/animation\";\nimport { CommandExecutionContext } from \"../../base/commands/command\";\nimport { SModelRoot, SModelElement, SChildElement } from \"../../base/model/smodel\";\nimport { IVNodePostprocessor } from \"../../base/views/vnode-postprocessor\";\nimport { setAttr } from \"../../base/views/vnode-utils\";\nimport { Fadeable, isFadeable } from \"./model\";\n\nexport interface ResolvedElementFade {\n    element: SModelElement & Fadeable\n    type: 'in' | 'out'\n}\n\nexport class FadeAnimation extends Animation {\n\n    constructor(protected model: SModelRoot,\n                public elementFades: ResolvedElementFade[],\n                context: CommandExecutionContext,\n                protected removeAfterFadeOut: boolean = false) {\n        super(context);\n    }\n\n    tween(t: number, context: CommandExecutionContext): SModelRoot {\n        for (const elementFade of this.elementFades) {\n            const element = elementFade.element;\n            if (elementFade.type === 'in') {\n                element.opacity = t;\n            } else if (elementFade.type === 'out') {\n                element.opacity = 1 - t;\n                if (t === 1 && this.removeAfterFadeOut && element instanceof SChildElement) {\n                    element.parent.remove(element);\n                }\n            }\n        }\n        return this.model;\n    }\n\n}\n\n@injectable()\nexport class ElementFader implements IVNodePostprocessor {\n\n    decorate(vnode: VNode, element: SModelElement): VNode {\n        if (isFadeable(element) && element.opacity !== 1) {\n            setAttr(vnode, 'opacity', element.opacity);\n        }\n        return vnode;\n    }\n\n    postUpdate(): void {\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from \"inversify\";\nimport {\n    Action, generateRequestId, RequestAction,\n    ResponseAction, RequestPopupModelAction as ProtocolRequestPopupModelAction,\n    SetPopupModelAction as ProtocolSetPopupModelAction\n} from \"sprotty-protocol/lib/actions\";\nimport { SModelRoot as SModelRootSchema } from 'sprotty-protocol/lib/model';\nimport { Bounds, Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { matchesKeystroke } from '../../utils/keyboard';\nimport { TYPES } from \"../../base/types\";\nimport { SModelElement, SModelRoot } from \"../../base/model/smodel\";\nimport { MouseListener } from \"../../base/views/mouse-tool\";\nimport { CommandExecutionContext, PopupCommand, SystemCommand, CommandReturn, ICommand } from \"../../base/commands/command\";\nimport { IActionHandler } from \"../../base/actions/action-handler\";\nimport { EMPTY_ROOT } from \"../../base/model/smodel-factory\";\nimport { KeyListener } from \"../../base/views/key-tool\";\nimport { findParentByFeature, findParent } from \"../../base/model/smodel-utils\";\nimport { ViewerOptions } from \"../../base/views/viewer-options\";\nimport { getAbsoluteBounds } from '../bounds/model';\nimport { hasPopupFeature, isHoverable } from \"./model\";\n\n/**\n * Triggered when the user puts the mouse pointer over an element.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface HoverFeedbackAction extends Action {\n    kind: typeof HoverFeedbackAction.KIND\n    mouseoverElement: string\n    mouseIsOver: boolean\n}\nexport namespace HoverFeedbackAction {\n    export const KIND = 'hoverFeedback';\n\n    export function create(options: { mouseoverElement: string, mouseIsOver: boolean }): HoverFeedbackAction {\n        return {\n            kind: KIND,\n            mouseoverElement: options.mouseoverElement,\n            mouseIsOver: options.mouseIsOver\n        };\n    }\n}\n\n@injectable()\nexport class HoverFeedbackCommand extends SystemCommand {\n    static readonly KIND = HoverFeedbackAction.KIND;\n\n    constructor(@inject(TYPES.Action) protected readonly action: HoverFeedbackAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        const model: SModelRoot = context.root;\n        const modelElement: SModelElement | undefined = model.index.getById(this.action.mouseoverElement);\n\n        if (modelElement) {\n            if (isHoverable(modelElement)) {\n                modelElement.hoverFeedback = this.action.mouseIsOver;\n            }\n        }\n\n        return this.redo(context);\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        return context.root;\n    }\n}\n\n/**\n * Triggered when the user hovers the mouse pointer over an element to get a popup with details on\n * that element. This action is sent from the client to the model source, e.g. a DiagramServer.\n * The response is a SetPopupModelAction.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport class RequestPopupModelAction implements RequestAction<SetPopupModelAction>, ProtocolRequestPopupModelAction {\n    static readonly KIND = 'requestPopupModel';\n    readonly kind = RequestPopupModelAction.KIND;\n\n    constructor(public readonly elementId: string,\n        public readonly bounds: Bounds,\n        public readonly requestId = '') { }\n\n    /** Factory function to dispatch a request with the `IActionDispatcher` */\n    static create(elementId: string, bounds: Bounds): RequestAction<SetPopupModelAction> {\n        return new RequestPopupModelAction(elementId, bounds, generateRequestId());\n    }\n}\n\n/**\n * Sent from the model source to the client to display a popup in response to a RequestPopupModelAction.\n * This action can also be used to remove any existing popup by choosing EMPTY_ROOT as root element.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport class SetPopupModelAction implements ResponseAction, ProtocolSetPopupModelAction {\n    static readonly KIND = 'setPopupModel';\n    readonly kind = SetPopupModelAction.KIND;\n\n    constructor(public readonly newRoot: SModelRootSchema,\n        public readonly responseId = '') { }\n}\n\n@injectable()\nexport class SetPopupModelCommand extends PopupCommand {\n    static readonly KIND = ProtocolSetPopupModelAction.KIND;\n\n    oldRoot: SModelRoot;\n    newRoot: SModelRoot;\n\n    constructor(@inject(TYPES.Action) protected readonly action: ProtocolSetPopupModelAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        this.oldRoot = context.root;\n        this.newRoot = context.modelFactory.createRoot(this.action.newRoot);\n\n        return this.newRoot;\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        return this.oldRoot;\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        return this.newRoot;\n    }\n}\n\nexport interface HoverState {\n    mouseOverTimer: number | undefined\n    mouseOutTimer: number | undefined\n    popupOpen: boolean\n    previousPopupElement: SModelElement | undefined\n}\n\nexport abstract class AbstractHoverMouseListener extends MouseListener {\n\n    protected mouseIsDown: boolean;\n\n    @inject(TYPES.ViewerOptions) protected options: ViewerOptions;\n    @inject(TYPES.HoverState) protected state: HoverState;\n\n    override mouseDown(target: SModelElement, event: MouseEvent): (Action | Promise<Action>)[] {\n        this.mouseIsDown = true;\n        return [];\n    }\n\n    override mouseUp(target: SModelElement, event: MouseEvent): (Action | Promise<Action>)[] {\n        this.mouseIsDown = false;\n        return [];\n    }\n\n    protected stopMouseOutTimer(): void {\n        if (this.state.mouseOutTimer !== undefined) {\n            window.clearTimeout(this.state.mouseOutTimer);\n            this.state.mouseOutTimer = undefined;\n        }\n    }\n\n    protected startMouseOutTimer(): Promise<Action> {\n        this.stopMouseOutTimer();\n        return new Promise((resolve) => {\n            this.state.mouseOutTimer = window.setTimeout(() => {\n                this.state.popupOpen = false;\n                this.state.previousPopupElement = undefined;\n                resolve(new SetPopupModelAction({ type: EMPTY_ROOT.type, id: EMPTY_ROOT.id }));\n            }, this.options.popupCloseDelay);\n        });\n    }\n\n    protected stopMouseOverTimer(): void {\n        if (this.state.mouseOverTimer !== undefined) {\n            window.clearTimeout(this.state.mouseOverTimer);\n            this.state.mouseOverTimer = undefined;\n        }\n    }\n}\n\n@injectable()\nexport class HoverMouseListener extends AbstractHoverMouseListener {\n\n    protected lastHoverFeedbackElementId?: string;\n\n    @inject(TYPES.ViewerOptions) protected override options: ViewerOptions;\n\n    protected computePopupBounds(target: SModelElement, mousePosition: Point): Bounds {\n        // Default position: below the mouse cursor\n        let offset: Point = { x: -5, y: 20 };\n\n        const targetBounds = getAbsoluteBounds(target);\n        const canvasBounds = target.root.canvasBounds;\n        const boundsInWindow = Bounds.translate(targetBounds, canvasBounds);\n        const distRight = boundsInWindow.x + boundsInWindow.width - mousePosition.x;\n        const distBottom = boundsInWindow.y + boundsInWindow.height - mousePosition.y;\n        if (distBottom <= distRight && this.allowSidePosition(target, 'below', distBottom)) {\n            // Put the popup below the target element\n            offset = { x: -5, y: Math.round(distBottom + 5) };\n        } else if (distRight <= distBottom && this.allowSidePosition(target, 'right', distRight)) {\n            // Put the popup right of the target element\n            offset = { x: Math.round(distRight + 5), y: -5 };\n        }\n        let leftPopupPosition = mousePosition.x + offset.x;\n        const canvasRightBorderPosition = canvasBounds.x + canvasBounds.width;\n        if (leftPopupPosition > canvasRightBorderPosition) {\n            leftPopupPosition = canvasRightBorderPosition;\n        }\n        let topPopupPosition = mousePosition.y + offset.y;\n        const canvasBottomBorderPosition = canvasBounds.y + canvasBounds.height;\n        if (topPopupPosition > canvasBottomBorderPosition) {\n            topPopupPosition = canvasBottomBorderPosition;\n        }\n        return { x: leftPopupPosition, y: topPopupPosition, width: -1, height: -1 };\n    }\n\n    protected allowSidePosition(target: SModelElement, side: 'above' | 'below' | 'left' | 'right', distance: number): boolean {\n        return !(target instanceof SModelRoot) && distance <= 150;\n    }\n\n    protected startMouseOverTimer(target: SModelElement, event: MouseEvent): Promise<Action> {\n        this.stopMouseOverTimer();\n        return new Promise((resolve) => {\n            this.state.mouseOverTimer = window.setTimeout(() => {\n                const popupBounds = this.computePopupBounds(target, { x: event.pageX, y: event.pageY });\n                resolve(new RequestPopupModelAction(target.id, popupBounds));\n\n                this.state.popupOpen = true;\n                this.state.previousPopupElement = target;\n            }, this.options.popupOpenDelay);\n        });\n    }\n\n    override mouseOver(target: SModelElement, event: MouseEvent): (Action | Promise<Action>)[] {\n        const result: (Action | Promise<Action>)[] = [];\n        if (!this.mouseIsDown) {\n            const popupTarget = findParent(target, hasPopupFeature);\n            if (this.state.popupOpen && (popupTarget === undefined ||\n                this.state.previousPopupElement !== undefined && this.state.previousPopupElement.id !== popupTarget.id)) {\n                result.push(this.startMouseOutTimer());\n            } else {\n                this.stopMouseOverTimer();\n                this.stopMouseOutTimer();\n            }\n            if (popupTarget !== undefined &&\n                (this.state.previousPopupElement === undefined || this.state.previousPopupElement.id !== popupTarget.id)) {\n                result.push(this.startMouseOverTimer(popupTarget, event));\n            }\n            if (this.lastHoverFeedbackElementId) {\n                result.push(HoverFeedbackAction.create({ mouseoverElement: this.lastHoverFeedbackElementId, mouseIsOver: false }));\n                this.lastHoverFeedbackElementId = undefined;\n            }\n            const hoverTarget = findParentByFeature(target, isHoverable);\n            if (hoverTarget !== undefined) {\n                result.push(HoverFeedbackAction.create({ mouseoverElement: hoverTarget.id, mouseIsOver: true }));\n                this.lastHoverFeedbackElementId = hoverTarget.id;\n            }\n        }\n        return result;\n    }\n\n    override mouseOut(target: SModelElement, event: MouseEvent): (Action | Promise<Action>)[] {\n        const result: (Action | Promise<Action>)[] = [];\n        if (!this.mouseIsDown) {\n            const elementUnderMouse = this.getElementFromEventPosition(event);\n            if (!this.isSprottyPopup(elementUnderMouse)) {\n                if (this.state.popupOpen) {\n                    const popupTarget = findParent(target, hasPopupFeature);\n                    if (this.state.previousPopupElement !== undefined && popupTarget !== undefined\n                        && this.state.previousPopupElement.id === popupTarget.id)\n                        result.push(this.startMouseOutTimer());\n                }\n                this.stopMouseOverTimer();\n                const hoverTarget = findParentByFeature(target, isHoverable);\n                if (hoverTarget !== undefined) {\n                    result.push(HoverFeedbackAction.create({ mouseoverElement: hoverTarget.id, mouseIsOver: false }));\n                    if (this.lastHoverFeedbackElementId && this.lastHoverFeedbackElementId !== hoverTarget.id) {\n                        result.push(HoverFeedbackAction.create({ mouseoverElement: this.lastHoverFeedbackElementId, mouseIsOver: false }));\n                    }\n                    this.lastHoverFeedbackElementId = undefined;\n                }\n            }\n        }\n        return result;\n    }\n\n    protected getElementFromEventPosition(event: MouseEvent) {\n        return document.elementFromPoint(event.x, event.y);\n    }\n\n    protected isSprottyPopup(element: Element | null): boolean {\n        return element\n            ? (element.id === this.options.popupDiv\n                || (!!element.parentElement && this.isSprottyPopup(element.parentElement)))\n            : false;\n    }\n\n    override mouseMove(target: SModelElement, event: MouseEvent): (Action | Promise<Action>)[] {\n        const result: (Action | Promise<Action>)[] = [];\n\n        if (!this.mouseIsDown) {\n            if (this.state.previousPopupElement !== undefined && this.closeOnMouseMove(this.state.previousPopupElement, event)) {\n                result.push(this.startMouseOutTimer());\n            }\n\n            const popupTarget = findParent(target, hasPopupFeature);\n            if (popupTarget !== undefined && (this.state.previousPopupElement === undefined\n                || this.state.previousPopupElement.id !== popupTarget.id)) {\n                result.push(this.startMouseOverTimer(popupTarget, event));\n            }\n        }\n\n        return result;\n    }\n\n    protected closeOnMouseMove(target: SModelElement, event: MouseEvent): boolean {\n        return target instanceof SModelRoot;\n    }\n\n}\n\n@injectable()\nexport class PopupHoverMouseListener extends AbstractHoverMouseListener {\n\n    override mouseOut(target: SModelElement, event: MouseEvent): (Action | Promise<Action>)[] {\n        return [this.startMouseOutTimer()];\n    }\n\n    override mouseOver(target: SModelElement, event: MouseEvent): (Action | Promise<Action>)[] {\n        this.stopMouseOutTimer();\n        this.stopMouseOverTimer();\n        return [];\n    }\n}\n\nexport class HoverKeyListener extends KeyListener {\n    override keyDown(element: SModelElement, event: KeyboardEvent): Action[] {\n        if (matchesKeystroke(event, 'Escape')) {\n            return [new SetPopupModelAction({ type: EMPTY_ROOT.type, id: EMPTY_ROOT.id })];\n        }\n        return [];\n    }\n}\n\n@injectable()\nexport class ClosePopupActionHandler implements IActionHandler {\n    protected popupOpen: boolean = false;\n\n    handle(action: Action): void | ICommand | Action {\n        if (action.kind === SetPopupModelCommand.KIND) {\n            this.popupOpen = (action as SetPopupModelAction).newRoot.type !== EMPTY_ROOT.type;\n        } else if (this.popupOpen) {\n            return new SetPopupModelAction({ id: EMPTY_ROOT.id, type: EMPTY_ROOT.type });\n        }\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SModelExtension } from '../../base/model/smodel-extension';\nimport { SModelElement } from '../../base/model/smodel';\nimport { SShapeElement, boundsFeature } from '../bounds/model';\nimport { hoverFeedbackFeature, popupFeature } from '../hover/model';\n\nexport const decorationFeature = Symbol('decorationFeature');\n\nexport interface Decoration extends SModelExtension {\n}\n\nexport function isDecoration<T extends SModelElement>(e: T): e is T & Decoration {\n    return e.hasFeature(decorationFeature);\n}\n\nexport class SDecoration extends SShapeElement implements Decoration {\n    static readonly DEFAULT_FEATURES = [decorationFeature, boundsFeature, hoverFeedbackFeature, popupFeature];\n}\n\nexport type SIssueSeverity = 'error' | 'warning' | 'info';\n\nexport class SIssueMarker extends SDecoration {\n    issues: SIssue[];\n}\n\nexport class SIssue {\n    message: string;\n    severity: SIssueSeverity;\n}\n", "/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/** @jsx svg */\nimport { svg } from '../../lib/jsx';\n\nimport { VNode } from 'snabbdom';\nimport { IView, RenderingContext } from '../../base/views/view';\nimport { SIssueMarker, SIssueSeverity } from './model';\nimport { setClass } from '../../base/views/vnode-utils';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class IssueMarkerView implements IView {\n    render(marker: SIssueMarker, context: RenderingContext): VNode {\n        const scale = 16 / 1792;\n        const trafo = `scale(${scale}, ${scale})`;\n        const maxSeverity = this.getMaxSeverity(marker);\n        const group = <g class-sprotty-issue={true}>\n            <g transform={trafo}>\n                <path d={this.getPath(maxSeverity)} />\n            </g>\n        </g>;\n        setClass(group, 'sprotty-' + maxSeverity, true);\n        return group;\n    }\n\n    protected getMaxSeverity(marker: SIssueMarker): SIssueSeverity {\n        let currentSeverity: SIssueSeverity = 'info';\n        for (const severity of marker.issues.map(s => s.severity)) {\n            if (severity === 'error' || (severity === 'warning' && currentSeverity === 'info'))\n                currentSeverity = severity;\n        }\n        return currentSeverity;\n    }\n\n    protected getPath(severity: SIssueSeverity) {\n        switch (severity) {\n            case 'error':\n            case 'warning':\n                // eslint-disable-next-line max-len\n                return \"M768 128q209 0 385.5 103t279.5 279.5 103 385.5-103 385.5-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103zm128 1247v-190q0-14-9-23.5t-22-9.5h-192q-13 0-23 10t-10 23v190q0 13 10 23t23 10h192q13 0 22-9.5t9-23.5zm-2-344l18-621q0-12-10-18-10-8-24-8h-220q-14 0-24 8-10 6-10 18l17 621q0 10 10 17.5t24 7.5h185q14 0 23.5-7.5t10.5-17.5z\";\n            case 'info':\n                // eslint-disable-next-line max-len\n                return \"M1024 1376v-160q0-14-9-23t-23-9h-96v-512q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v160q0 14 9 23t23 9h96v320h-96q-14 0-23 9t-9 23v160q0 14 9 23t23 9h448q14 0 23-9t9-23zm-128-896v-160q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v160q0 14 9 23t23 9h192q14 0 23-9t9-23zm640 416q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\";\n        }\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from \"inversify\";\nimport { VNode } from \"snabbdom\";\nimport { SModelElement, SChildElement } from \"../../base/model/smodel\";\nimport { IVNodePostprocessor } from \"../../base/views/vnode-postprocessor\";\nimport { isDecoration, Decoration } from \"./model\";\nimport { setAttr } from \"../../base/views/vnode-utils\";\nimport { isSizeable } from \"../bounds/model\";\nimport { SRoutableElement } from \"../routing/model\";\nimport { EdgeRouterRegistry } from \"../routing/routing\";\nimport { Point } from \"sprotty-protocol\";\n\n@injectable()\nexport class DecorationPlacer implements IVNodePostprocessor {\n\n    @inject(EdgeRouterRegistry) edgeRouterRegistry: EdgeRouterRegistry;\n\n    decorate(vnode: VNode, element: SModelElement): VNode {\n        if (isDecoration(element)) {\n            const position = this.getPosition(element);\n            const translate = 'translate(' + position.x + ', ' + position.y + ')';\n            setAttr(vnode, 'transform', translate);\n        }\n        return vnode;\n    }\n\n    protected getPosition(element: SModelElement & Decoration): Point {\n        if (element instanceof SChildElement && element.parent instanceof SRoutableElement) {\n            const route =  this.edgeRouterRegistry.route(element.parent);\n            if (route.length > 1) {\n                const index = Math.floor(0.5  * (route.length - 1));\n                const offset = isSizeable(element)\n                    ? {\n                        x: - 0.5 * element.bounds.width,\n                        y: - 0.5 * element.bounds.width\n                    }\n                    : Point.ORIGIN;\n                return {\n                    x: 0.5 * (route[index].x + route[index + 1].x) + offset.x,\n                    y: 0.5 * (route[index].y + route[index + 1].y) + offset.y\n                };\n            }\n        }\n        if (isSizeable(element))\n            return {\n                x: -0.666 * element.bounds.width,\n                y: -0.666 * element.bounds.height\n            };\n        return Point.ORIGIN;\n    }\n\n    postUpdate(): void {\n    }\n}\n", "(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\ntypeof define === 'function' && define.amd ? define(factory) :\n(global = global || self, global.TinyQueue = factory());\n}(this, function () { 'use strict';\n\nvar TinyQueue = function TinyQueue(data, compare) {\n    if ( data === void 0 ) data = [];\n    if ( compare === void 0 ) compare = defaultCompare;\n\n    this.data = data;\n    this.length = this.data.length;\n    this.compare = compare;\n\n    if (this.length > 0) {\n        for (var i = (this.length >> 1) - 1; i >= 0; i--) { this._down(i); }\n    }\n};\n\nTinyQueue.prototype.push = function push (item) {\n    this.data.push(item);\n    this.length++;\n    this._up(this.length - 1);\n};\n\nTinyQueue.prototype.pop = function pop () {\n    if (this.length === 0) { return undefined; }\n\n    var top = this.data[0];\n    var bottom = this.data.pop();\n    this.length--;\n\n    if (this.length > 0) {\n        this.data[0] = bottom;\n        this._down(0);\n    }\n\n    return top;\n};\n\nTinyQueue.prototype.peek = function peek () {\n    return this.data[0];\n};\n\nTinyQueue.prototype._up = function _up (pos) {\n    var ref = this;\n        var data = ref.data;\n        var compare = ref.compare;\n    var item = data[pos];\n\n    while (pos > 0) {\n        var parent = (pos - 1) >> 1;\n        var current = data[parent];\n        if (compare(item, current) >= 0) { break; }\n        data[pos] = current;\n        pos = parent;\n    }\n\n    data[pos] = item;\n};\n\nTinyQueue.prototype._down = function _down (pos) {\n    var ref = this;\n        var data = ref.data;\n        var compare = ref.compare;\n    var halfLength = this.length >> 1;\n    var item = data[pos];\n\n    while (pos < halfLength) {\n        var left = (pos << 1) + 1;\n        var best = data[left];\n        var right = left + 1;\n\n        if (right < this.length && compare(data[right], best) < 0) {\n            left = right;\n            best = data[right];\n        }\n        if (compare(best, item) >= 0) { break; }\n\n        data[pos] = best;\n        pos = left;\n    }\n\n    data[pos] = item;\n};\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn TinyQueue;\n\n}));\n", "/********************************************************************************\n * Copyright (c) 2019 Rowan Winsemius and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n// Based on the sweepline implementation at https://github.com/rowanwins/sweepline-intersections\n// which is published under the terms of MIT, but has been adapted to the use case of sprotty.\nimport TinyQueue from \"tinyqueue\";\nimport { Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { PointToPointLine } from \"../../utils/geometry\";\nimport { Intersection } from \"./intersection-finder\";\nimport { RoutedPoint } from \"../routing/routing\";\n\n/*\n * The algorithm implemented in this module is loosely based on the Bentley-Ottmann algorithm for\n * finding intersection among line segments in `O((n+k) log n)`, whereas `n` is the number of line\n * segments and `k` is the number of intersections.\n * The underlying idea is to use a imaginary sweep line that moves over the x/y plane and testing\n * only the line segments for intersection that the sweepline currently crosses, instead of\n * testing all segment with each other, which would be `O(n^2)`.\n * It does so by generating a prioritized event queue for start and end events of the line segments\n * and working its way through the queue (i.e., sweeping).\n * More information can be found at https://en.wikipedia.org/wiki/Bentley%E2%80%93Ottmann_algorithm\n * In contrast to the original Bently-Ottmann algorithm, the implementation below does not use a tree\n * data structure to store the segments in order to simplify the implementation.\n * See also https://github.com/rowanwins/sweepline-intersections#algorithm-notes\n */\n\n/**\n * Add the specified `route` to the event `queue` from left to right.\n * @param routeId id of the route.\n * @param route the route as array of points.\n * @param queue the queue to add the route to.\n */\nexport function addRoute(routeId: string, route: RoutedPoint[], queue: TinyQueue<SweepEvent>) {\n    if (route.length < 1) return;\n    let currentPoint = route[0];\n    let nextPoint = undefined;\n    for (let i = 0; i < route.length - 1; i++) {\n        nextPoint = route[i + 1];\n\n        const e1 = new SweepEvent(routeId, currentPoint, i);\n        const e2 = new SweepEvent(routeId, nextPoint, i + 1);\n\n        e1.otherEvent = e2;\n        e2.otherEvent = e1;\n\n        if (checkWhichEventIsLeft(e1, e2) > 0) {\n            e2.isLeftEndpoint = true;\n            e1.isLeftEndpoint = false;\n        } else {\n            e1.isLeftEndpoint = true;\n            e2.isLeftEndpoint = false;\n        }\n        queue.push(e1);\n        queue.push(e2);\n\n        currentPoint = nextPoint;\n    }\n}\n\n/**\n * Returns which of the two events is left.\n * This is used to classify the endpoints of a segment when generating the\n * event queue.\n */\nexport function checkWhichEventIsLeft(e1: SweepEvent, e2: SweepEvent): 1 | -1 {\n    if (e1.point.x > e2.point.x) return 1;\n    if (e1.point.x < e2.point.x) return -1;\n    if (e1.point.y !== e2.point.y) return e1.point.y > e2.point.y ? 1 : -1;\n    return 1;\n}\n\n/**\n * An event -- or with other words a start or end point of a segment -- in the context\n * of the event queue for the sweep.\n *\n * Stores the original Sprotty `edgeId` and the segment index of this segment in the edge\n * to keep track of which edge and segment this event originated from.\n */\nexport class SweepEvent {\n    otherEvent: SweepEvent;\n    isLeftEndpoint: boolean;\n    constructor(readonly edgeId: string, readonly point: Point, readonly segmentIndex: number) { }\n}\n\n/**\n * A line segment consists of a start and a stop event.\n */\nexport class Segment {\n    readonly leftSweepEvent: SweepEvent;\n    readonly rightSweepEvent: SweepEvent;\n    constructor(event: SweepEvent) {\n        this.leftSweepEvent = event;\n        this.rightSweepEvent = event.otherEvent;\n    }\n}\n\n/**\n * Performs the main sweep algorithm on the specified event queue.\n *\n * An empty priority queue is created to store segments encountered.\n * An item is removed from the priority queue if the vertex is the left endpoint\n * of a segment, we test it against every other segment in the segment queue for\n * intersections with any intersection recorded. We then add the vertex (and it's\n * associated right endpoint) to the segment queue.\n * If we encounter a right endpoint we remove the first item from the segment queue.\n *\n * Each pair of segments are only tested once. And only segments that overlap on the\n * x plane are tested against each other.\n *\n * @param eventQueue the event queue.\n * @returns the identified intersections.\n */\nexport function runSweep(eventQueue: TinyQueue<SweepEvent>): Intersection[] {\n    const intersectionPoints: Intersection[] = [];\n    const outQueue = new TinyQueue<Segment>([], checkWhichSegmentHasRightEndpointFirst);\n    while (eventQueue.length) {\n        const event = eventQueue.pop();\n        if (event?.isLeftEndpoint) {\n            const segment = new Segment(event);\n            for (let i = 0; i < outQueue.data.length; i++) {\n                const otherSegment = outQueue.data[i];\n                const intersection = intersectionOfSegments(segment, otherSegment);\n                if (intersection) {\n                    intersectionPoints.push(\n                        <Intersection>{\n                            routable1: event.edgeId,\n                            routable2: otherSegment.leftSweepEvent.edgeId,\n                            segmentIndex1: getSegmentIndex(segment),\n                            segmentIndex2: getSegmentIndex(otherSegment),\n                            intersectionPoint: intersection\n                        }\n                    );\n                }\n            }\n            outQueue.push(segment);\n        } else if (event?.isLeftEndpoint === false) {\n            outQueue.pop();\n        }\n    }\n    return intersectionPoints;\n}\n\n/**\n * Specifies which of the two specified segments has a right endpoint first.\n * Used as a comparator to sort the event queue.\n */\nexport function checkWhichSegmentHasRightEndpointFirst(seg1: Segment, seg2: Segment): 1 | -1 {\n    if (seg1.rightSweepEvent.point.x > seg2.rightSweepEvent.point.x) return 1;\n    if (seg1.rightSweepEvent.point.x < seg2.rightSweepEvent.point.x) return -1;\n    if (seg1.rightSweepEvent.point.y !== seg2.rightSweepEvent.point.y) return seg1.rightSweepEvent.point.y < seg2.rightSweepEvent.point.y ? 1 : -1;\n    return 1;\n}\n\nexport function getSegmentIndex(segment: Segment): number {\n    return Math.min(segment.leftSweepEvent.segmentIndex, segment.rightSweepEvent.segmentIndex);\n}\n\n/**\n * Tests whether two segments intersect and returns the intersection point if existing.\n */\nexport function intersectionOfSegments(seg1: Segment, seg2: Segment): Point | undefined {\n    if (seg1.leftSweepEvent.edgeId === seg2.leftSweepEvent.edgeId) {\n        return undefined;\n    }\n    const seg1Line = new PointToPointLine(seg1.leftSweepEvent.point, seg1.rightSweepEvent.point);\n    const seg2Line = new PointToPointLine(seg2.leftSweepEvent.point, seg2.rightSweepEvent.point);\n    return seg1Line.intersection(seg2Line);\n}\n", "/********************************************************************************\n * Copyright (c) 2021-2022 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from \"inversify\";\nimport { Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport TinyQueue from \"tinyqueue\";\nimport { EdgeRouting, IEdgeRoutePostprocessor, RoutedPoint } from \"../routing/routing\";\nimport { addRoute, checkWhichEventIsLeft, runSweep, SweepEvent } from \"./sweepline\";\n\nexport interface Intersection {\n    readonly routable1: string;\n    readonly segmentIndex1: number;\n    readonly routable2: string;\n    readonly segmentIndex2: number;\n    readonly intersectionPoint: Point;\n}\n\nexport interface IntersectingRoutedPoint extends RoutedPoint {\n    intersections: Intersection[];\n}\n\nexport function isIntersectingRoutedPoint(routedPoint: Point): routedPoint is IntersectingRoutedPoint {\n    return routedPoint !== undefined && 'intersections' in routedPoint && 'kind' in routedPoint;\n}\n\nexport const BY_X_THEN_Y = (a: Intersection, b: Intersection): number => {\n    if (a.intersectionPoint.x === b.intersectionPoint.x) {\n        return a.intersectionPoint.y - b.intersectionPoint.y;\n    }\n    return a.intersectionPoint.x - b.intersectionPoint.x;\n};\n\nexport const BY_DESCENDING_X_THEN_Y = (a: Intersection, b: Intersection): number => {\n    if (a.intersectionPoint.x === b.intersectionPoint.x) {\n        return a.intersectionPoint.y - b.intersectionPoint.y;\n    }\n    return b.intersectionPoint.x - a.intersectionPoint.x;\n};\n\nexport const BY_X_THEN_DESCENDING_Y = (a: Intersection, b: Intersection): number => {\n    if (a.intersectionPoint.x === b.intersectionPoint.x) {\n        return b.intersectionPoint.y - a.intersectionPoint.y;\n    }\n    return a.intersectionPoint.x - b.intersectionPoint.x;\n};\n\nexport const BY_DESCENDING_X_THEN_DESCENDING_Y = (a: Intersection, b: Intersection): number => {\n    if (a.intersectionPoint.x === b.intersectionPoint.x) {\n        return b.intersectionPoint.y - a.intersectionPoint.y;\n    }\n    return b.intersectionPoint.x - a.intersectionPoint.x;\n};\n\n/**\n * Finds intersections among edges and updates routed points to reflect those intersections.\n *\n * This only yields correct intersections among straight line segments and doesn't work with bezier curves.\n */\n@injectable()\nexport class IntersectionFinder implements IEdgeRoutePostprocessor {\n\n    /**\n     * Finds all intersections in the specified `routing` and replaces the `RoutedPoints` that are\n     * intersecting by adding intersection information to routing points (@see `IntersectingRoutedPoints`).\n     * @param routing the edge routing to find intersections for and update.\n     */\n    apply(routing: EdgeRouting) {\n        const intersections = this.find(routing);\n        this.addToRouting(intersections, routing);\n    }\n\n    /**\n     * Finds the intersections in the specified `routing` and returns them.\n     * @param routing the edge routing to find intersections for and update.\n     * @returns the identified intersections.\n     */\n    find(routing: EdgeRouting): Intersection[] {\n        const eventQueue = new TinyQueue<SweepEvent>(undefined, checkWhichEventIsLeft);\n        routing.routes.forEach((route, routeId) => {\n            if (this.isSupportedRoute(route)) {\n                addRoute(routeId, route, eventQueue);\n            }\n        });\n        return runSweep(eventQueue);\n    }\n\n    /**\n     * Specifies whether or not a specific route should be included in this intersection search or not.\n     *\n     * As this intersection finder only supports linear line segments, this method only returns `true`\n     * for routes that only contain routed points, which are either 'source', 'target' or 'linear'.\n     */\n    protected isSupportedRoute(route: RoutedPoint[]): boolean {\n        return route.find(point => point.kind !== 'source' && point.kind !== 'target' && point.kind !== 'linear') === undefined;\n    }\n\n    protected addToRouting(intersections: Intersection[], routing: EdgeRouting) {\n        for (const intersection of intersections) {\n            const routable1 = routing.get(intersection.routable1);\n            const routable2 = routing.get(intersection.routable2);\n            this.addIntersectionToRoutedPoint(intersection, routable1, intersection.segmentIndex1);\n            this.addIntersectionToRoutedPoint(intersection, routable2, intersection.segmentIndex2);\n        }\n    }\n\n    private addIntersectionToRoutedPoint(intersection: Intersection, routedPoint: RoutedPoint[] | undefined, segmentIndex: number) {\n        if (routedPoint && routedPoint.length > segmentIndex) {\n            const segment = routedPoint[segmentIndex + 1];\n            if (isIntersectingRoutedPoint(segment)) {\n                segment.intersections.push(intersection);\n            } else {\n                const intersectingRoutedPoint = { ...segment, intersections: [intersection] };\n                routedPoint[segmentIndex + 1] = intersectingRoutedPoint;\n            }\n        }\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, optional } from 'inversify';\nimport { VNode } from 'snabbdom';\nimport { Bounds, Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { Action, DeleteElementAction, ReconnectAction, SelectAction, SelectAllAction } from 'sprotty-protocol/lib/actions';\nimport { Animation, CompoundAnimation } from '../../base/animations/animation';\nimport { CommandExecutionContext, ICommand, MergeableCommand, CommandReturn } from '../../base/commands/command';\nimport { SChildElement, SModelElement, SModelRoot } from '../../base/model/smodel';\nimport { findParentByFeature, translatePoint } from '../../base/model/smodel-utils';\nimport { TYPES } from '../../base/types';\nimport { MouseListener } from '../../base/views/mouse-tool';\nimport { IVNodePostprocessor } from '../../base/views/vnode-postprocessor';\nimport { setAttr } from '../../base/views/vnode-utils';\nimport { SEdge } from '../../graph/sgraph';\nimport { CommitModelAction } from '../../model-source/commit-model';\nimport { findChildrenAtPosition, isAlignable } from '../bounds/model';\nimport { CreatingOnDrag, isCreatingOnDrag } from '../edit/create-on-drag';\nimport { SwitchEditModeAction } from '../edit/edit-routing';\nimport { ReconnectCommand } from '../edit/reconnect';\nimport { edgeInProgressID, edgeInProgressTargetHandleID, isConnectable, SRoutableElement, SRoutingHandle } from '../routing/model';\nimport { EdgeMemento, EdgeRouterRegistry, EdgeSnapshot, RoutedPoint } from '../routing/routing';\nimport { isEdgeLayoutable } from '../edge-layout/model';\nimport { isSelectable } from '../select/model';\nimport { isViewport } from '../viewport/model';\nimport { isLocateable, isMoveable, Locateable } from './model';\nimport { ISnapper } from './snap';\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface MoveAction extends Action {\n    kind: typeof MoveAction.KIND\n    moves: ElementMove[]\n    animate: boolean\n    finished: boolean\n}\nexport namespace MoveAction {\n    export const KIND = 'move';\n\n    export function create(moves: ElementMove[], options: { animate?: boolean, finished?: boolean } = {}): MoveAction {\n        return {\n            kind: KIND,\n            moves,\n            animate: options.animate ?? true,\n            finished: options.finished ?? false\n        };\n    }\n}\n\nexport interface ElementMove {\n    elementId: string\n    elementType?: string\n    fromPosition?: Point\n    toPosition: Point\n}\n\nexport interface ResolvedElementMove {\n    element: SModelElement & Locateable\n    fromPosition: Point\n    toPosition: Point\n}\n\nexport interface ResolvedHandleMove {\n    handle: SRoutingHandle\n    fromPosition: Point\n    toPosition: Point\n}\n\n@injectable()\nexport class MoveCommand extends MergeableCommand {\n    static readonly KIND = MoveAction.KIND;\n\n    @inject(EdgeRouterRegistry) @optional() edgeRouterRegistry?: EdgeRouterRegistry;\n\n    protected resolvedMoves: Map<string, ResolvedElementMove> = new Map;\n    protected edgeMementi: EdgeMemento[] = [];\n\n    constructor(@inject(TYPES.Action) protected readonly action: MoveAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        const index = context.root.index;\n        const edge2handleMoves = new Map<SRoutableElement, ResolvedHandleMove[]>();\n        const attachedEdgeShifts = new Map<SRoutableElement, Point>();\n        this.action.moves.forEach(move => {\n            const element = index.getById(move.elementId);\n            if (element instanceof SRoutingHandle && this.edgeRouterRegistry) {\n                const edge = element.parent;\n                if (edge instanceof SRoutableElement) {\n                    const resolvedMove = this.resolveHandleMove(element, edge, move);\n                    if (resolvedMove) {\n                        let movesByEdge = edge2handleMoves.get(edge);\n                        if (!movesByEdge) {\n                            movesByEdge = [];\n                            edge2handleMoves.set(edge, movesByEdge);\n                        }\n                        movesByEdge.push(resolvedMove);\n                    }\n                }\n            } else if (element && isLocateable(element)) {\n                const resolvedMove = this.resolveElementMove(element, move);\n                if (resolvedMove) {\n                    this.resolvedMoves.set(resolvedMove.element.id, resolvedMove);\n                    if (this.edgeRouterRegistry) {\n                        index.getAttachedElements(element).forEach(edge => {\n                            if (edge instanceof SRoutableElement) {\n                                const existingDelta = attachedEdgeShifts.get(edge);\n                                const newDelta = Point.subtract(resolvedMove.toPosition, resolvedMove.fromPosition);\n                                const delta = (existingDelta)\n                                    ? Point.linear(existingDelta, newDelta, 0.5)\n                                    : newDelta;\n                                attachedEdgeShifts.set(edge, delta);\n                            }\n                        });\n                    }\n                }\n            }\n        });\n        this.doMove(edge2handleMoves, attachedEdgeShifts);\n        if (this.action.animate) {\n            this.undoMove();\n            return new CompoundAnimation(context.root, context, [\n                new MoveAnimation(context.root, this.resolvedMoves, context, false),\n                new MorphEdgesAnimation(context.root, this.edgeMementi, context, false)\n            ]).start();\n        }\n        return context.root;\n    }\n\n    protected resolveHandleMove(handle: SRoutingHandle, edge: SRoutableElement, move: ElementMove): ResolvedHandleMove | undefined {\n        let fromPosition = move.fromPosition;\n        if (!fromPosition) {\n            const router = this.edgeRouterRegistry!.get(edge.routerKind);\n            fromPosition = router.getHandlePosition(edge, router.route(edge), handle);\n        }\n        if (fromPosition)\n            return {\n                handle,\n                fromPosition,\n                toPosition: move.toPosition\n            };\n        return undefined;\n    }\n\n    protected resolveElementMove(element: SModelElement & Locateable, move: ElementMove): ResolvedElementMove | undefined {\n        const fromPosition = move.fromPosition\n            || { x: element.position.x, y: element.position.y };\n        return {\n            element,\n            fromPosition,\n            toPosition: move.toPosition\n        };\n    }\n\n    protected doMove(edge2move: Map<SRoutableElement, ResolvedHandleMove[]>, attachedEdgeShifts: Map<SRoutableElement, Point>) {\n        this.resolvedMoves.forEach(res => {\n            res.element.position = res.toPosition;\n        });\n        // reset edges to state before\n        edge2move.forEach((moves, edge) => {\n            const router = this.edgeRouterRegistry!.get(edge.routerKind);\n            const before = router.takeSnapshot(edge);\n            router.applyHandleMoves(edge, moves);\n            const after = router.takeSnapshot(edge);\n            this.edgeMementi.push({ edge, before, after });\n        });\n        attachedEdgeShifts.forEach((delta, edge) => {\n            if (!edge2move.get(edge)) {\n                const router = this.edgeRouterRegistry!.get(edge.routerKind);\n                const before = router.takeSnapshot(edge);\n                if (edge.source\n                    && edge.target\n                    && this.resolvedMoves.get(edge.source.id)\n                    && this.resolvedMoves.get(edge.target.id)) {\n                    // move the entire edge when both source and target are moved\n                    edge.routingPoints = edge.routingPoints.map(rp => Point.add(rp, delta));\n                } else {\n                    // add/remove RPs according to the new source/target positions\n                    const updateHandles = isSelectable(edge) && edge.selected;\n                    router.cleanupRoutingPoints(edge, edge.routingPoints, updateHandles, this.action.finished);\n                }\n                const after = router.takeSnapshot(edge);\n                this.edgeMementi.push({ edge, before, after });\n            }\n        });\n    }\n\n    protected undoMove() {\n        this.resolvedMoves.forEach(res => {\n            (res.element as any).position = res.fromPosition;\n        });\n        this.edgeMementi.forEach(memento => {\n            const router = this.edgeRouterRegistry!.get(memento.edge.routerKind);\n            router.applySnapshot(memento.edge, memento.before);\n        });\n    }\n\n    undo(context: CommandExecutionContext): Promise<SModelRoot> {\n        return new CompoundAnimation(context.root, context, [\n            new MoveAnimation(context.root, this.resolvedMoves, context, true),\n            new MorphEdgesAnimation(context.root, this.edgeMementi, context, true)\n        ]).start();\n    }\n\n    redo(context: CommandExecutionContext): Promise<SModelRoot> {\n        return new CompoundAnimation(context.root, context, [\n            new MoveAnimation(context.root, this.resolvedMoves, context, false),\n            new MorphEdgesAnimation(context.root, this.edgeMementi, context, false)\n        ]).start();\n    }\n\n    override merge(other: ICommand, context: CommandExecutionContext) {\n        if (!this.action.animate && other instanceof MoveCommand) {\n            other.resolvedMoves.forEach(\n                (otherMove, otherElementId) => {\n                    const existingMove = this.resolvedMoves.get(otherElementId);\n                    if (existingMove) {\n                        existingMove.toPosition = otherMove.toPosition;\n                    } else {\n                        this.resolvedMoves.set(otherElementId, otherMove);\n                    }\n                }\n            );\n            other.edgeMementi.forEach(otherMemento => {\n                const existingMemento = this.edgeMementi.find(edgeMemento => edgeMemento.edge.id === otherMemento.edge.id);\n                if (existingMemento) {\n                    existingMemento.after = otherMemento.after;\n                } else {\n                    this.edgeMementi.push(otherMemento);\n                }\n            });\n            return true;\n        } else if (other instanceof ReconnectCommand) {\n            const otherMemento = other.memento;\n            if (otherMemento) {\n                const existingMemento = this.edgeMementi.find(edgeMemento => edgeMemento.edge.id === otherMemento.edge.id);\n                if (existingMemento) {\n                    existingMemento.after = otherMemento.after;\n                } else {\n                    this.edgeMementi.push(otherMemento);\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n}\n\nexport class MoveAnimation extends Animation {\n\n    constructor(protected model: SModelRoot,\n                public elementMoves: Map<string, ResolvedElementMove>,\n                context: CommandExecutionContext,\n                protected reverse: boolean = false) {\n        super(context);\n    }\n\n    tween(t: number) {\n        this.elementMoves.forEach((elementMove) => {\n            if (this.reverse) {\n                elementMove.element.position = {\n                    x: (1 - t) * elementMove.toPosition.x + t * elementMove.fromPosition.x,\n                    y: (1 - t) * elementMove.toPosition.y + t * elementMove.fromPosition.y\n                };\n            } else {\n                elementMove.element.position = {\n                    x: (1 - t) * elementMove.fromPosition.x + t * elementMove.toPosition.x,\n                    y: (1 - t) * elementMove.fromPosition.y + t * elementMove.toPosition.y\n                };\n            }\n        });\n        return this.model;\n    }\n}\n\ninterface ExpandedEdgeMorph {\n    startExpandedRoute: Point[],\n    endExpandedRoute: Point[],\n    memento: EdgeMemento\n}\n\nexport class MorphEdgesAnimation extends Animation {\n\n    protected expanded: ExpandedEdgeMorph[] = [];\n\n    constructor(protected model: SModelRoot,\n                originalMementi: EdgeMemento[],\n                context: CommandExecutionContext,\n                protected reverse: boolean = false) {\n        super(context);\n        originalMementi.forEach(edgeMemento => {\n            const start = this.reverse ? edgeMemento.after : edgeMemento.before;\n            const end = this.reverse ? edgeMemento.before : edgeMemento.after;\n            const startRoute = start.routedPoints;\n            const endRoute = end.routedPoints;\n            const maxRoutingPoints = Math.max(startRoute.length, endRoute.length);\n            this.expanded.push({\n                startExpandedRoute: this.growToSize(startRoute, maxRoutingPoints),\n                endExpandedRoute: this.growToSize(endRoute, maxRoutingPoints),\n                memento: edgeMemento\n            });\n        });\n    }\n\n    protected midPoint(edgeMemento: EdgeMemento): Point {\n        const edge = edgeMemento.edge;\n        const source = edgeMemento.edge.source!;\n        const target = edgeMemento.edge.target!;\n        return Point.linear(\n            translatePoint(Bounds.center(source.bounds), source.parent, edge.parent),\n            translatePoint(Bounds.center(target.bounds), target.parent, edge.parent),\n            0.5);\n    }\n\n    override start() {\n        this.expanded.forEach(morph => {\n            morph.memento.edge.removeAll(e => e instanceof SRoutingHandle);\n        });\n        return super.start();\n    }\n\n    tween(t: number) {\n        if (t === 1) {\n            this.expanded.forEach(morph => {\n                const memento = morph.memento;\n                if (this.reverse)\n                    memento.before.router.applySnapshot(memento.edge, memento.before);\n                else\n                    memento.after.router.applySnapshot(memento.edge, memento.after);\n            });\n        } else {\n            this.expanded.forEach(morph => {\n                const newRoutingPoints: Point[] = [];\n                // ignore source and target anchor\n                for (let i = 1; i < morph.startExpandedRoute.length - 1; ++i)\n                    newRoutingPoints.push(Point.linear(morph.startExpandedRoute[i], morph.endExpandedRoute[i], t));\n\n                const closestSnapshot = t < 0.5 ? morph.memento.before : morph.memento.after;\n                const newSnapshot: EdgeSnapshot = {\n                    ...closestSnapshot,\n                    routingPoints: newRoutingPoints,\n                    routingHandles: []\n                };\n                closestSnapshot.router.applySnapshot(morph.memento.edge, newSnapshot);\n            });\n        }\n        return this.model;\n    }\n\n    protected growToSize(route: RoutedPoint[], targetSize: number): Point[] {\n        const diff = targetSize - route.length;\n        if (diff <= 0)\n            return route;\n        const result: Point[] = [];\n        result.push(route[0]);\n        const deltaDiff = 1 / (diff + 1);\n        const deltaSmaller = 1 / (route.length - 1);\n        let nextInsertion = 1;\n        for (let i = 1; i < route.length; ++i) {\n            const pos = deltaSmaller * i;\n            let insertions = 0;\n            while (pos > (nextInsertion + insertions) * deltaDiff)\n                ++insertions;\n            nextInsertion += insertions;\n            for (let j = 0; j < insertions; ++j) {\n                const p = Point.linear(route[i - 1], route[i], (j + 1) / (insertions + 1));\n                result.push(p);\n            }\n            result.push(route[i]);\n        }\n        return result;\n    }\n\n}\n\nexport class MoveMouseListener extends MouseListener {\n\n    @inject(EdgeRouterRegistry) @optional() edgeRouterRegistry?: EdgeRouterRegistry;\n    @inject(TYPES.ISnapper) @optional() snapper?: ISnapper;\n\n    hasDragged = false;\n    startDragPosition: Point | undefined;\n    elementId2startPos = new Map<string, Point>();\n\n    override mouseDown(target: SModelElement, event: MouseEvent): (Action | Promise<Action>)[] {\n        if (event.button === 0) {\n            const moveable = findParentByFeature(target, isMoveable);\n            const isRoutingHandle = target instanceof SRoutingHandle;\n            if (moveable !== undefined || isRoutingHandle || isCreatingOnDrag(target)) {\n                this.startDragPosition = { x: event.pageX, y: event.pageY };\n            } else {\n                this.startDragPosition = undefined;\n            }\n            this.hasDragged = false;\n            if (isCreatingOnDrag(target)) {\n                this.startCreatingOnDrag(target, event);\n            } else if (isRoutingHandle) {\n                this.activateRoutingHandle(target, event);\n            }\n        }\n        return [];\n    }\n\n    protected startCreatingOnDrag(target: CreatingOnDrag, event: MouseEvent): (Action | Promise<Action>)[] {\n        const result: Action[] = [];\n        result.push(SelectAllAction.create({ select: false }));\n        result.push(target.createAction(edgeInProgressID));\n        result.push(SelectAction.create({ selectedElementsIDs: [edgeInProgressID] }));\n        result.push(SwitchEditModeAction.create({ elementsToActivate: [edgeInProgressID] }));\n        result.push(SelectAction.create({ selectedElementsIDs: [edgeInProgressTargetHandleID] }));\n        result.push(SwitchEditModeAction.create({ elementsToActivate: [edgeInProgressTargetHandleID] }));\n        return result;\n    }\n\n    protected activateRoutingHandle(target: SRoutingHandle, event: MouseEvent): (Action | Promise<Action>)[] {\n        return [SwitchEditModeAction.create({ elementsToActivate: [target.id] })];\n    }\n\n    override mouseMove(target: SModelElement, event: MouseEvent): Action[] {\n        const result: Action[] = [];\n        if (event.buttons === 0)\n            this.mouseUp(target, event);\n        else if (this.startDragPosition) {\n            if (this.elementId2startPos.size === 0) {\n                this.collectStartPositions(target.root);\n            }\n            this.hasDragged = true;\n            const moveAction = this.getElementMoves(target, event, false);\n            if (moveAction)\n                result.push(moveAction);\n        }\n        return result;\n    }\n\n    protected collectStartPositions(root: SModelRoot) {\n        const selectedElements = new Set<SModelElement>(root.index.all()\n            .filter(element => isSelectable(element) && element.selected));\n\n        selectedElements.forEach(element => {\n            if (!this.isChildOfSelected(selectedElements, element)) {\n                if (isMoveable(element))\n                    this.elementId2startPos.set(element.id, element.position);\n                else if (element instanceof SRoutingHandle) {\n                    const position = this.getHandlePosition(element);\n                    if (position)\n                        this.elementId2startPos.set(element.id, position);\n                }\n            }\n        });\n    }\n\n    protected isChildOfSelected(selectedElements: Set<SModelElement>, element: SModelElement): boolean {\n        while (element instanceof SChildElement) {\n            element = element.parent;\n            if (isMoveable(element) && selectedElements.has(element)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected getElementMoves(target: SModelElement, event: MouseEvent, isFinished: boolean): MoveAction | undefined {\n        if (!this.startDragPosition)\n            return undefined;\n        const elementMoves: ElementMove[] = [];\n        const viewport = findParentByFeature(target, isViewport);\n        const zoom = viewport ? viewport.zoom : 1;\n        const delta = {\n            x: (event.pageX - this.startDragPosition.x) / zoom,\n            y: (event.pageY - this.startDragPosition.y) / zoom\n        };\n        this.elementId2startPos.forEach((startPosition, elementId) => {\n            const element = target.root.index.getById(elementId);\n            if (element) {\n                const move = this.createElementMove(element, startPosition, delta, event);\n                if (move) {\n                    elementMoves.push(move);\n                }\n            }\n        });\n        if (elementMoves.length > 0)\n            return MoveAction.create(elementMoves, { animate: false, finished: isFinished });\n        else\n            return undefined;\n    }\n\n    protected createElementMove(element: SModelElement, startPosition: Point, delta: Point, event: MouseEvent): ElementMove | undefined {\n        const toPosition = this.snap({\n            x: startPosition.x + delta.x,\n            y: startPosition.y + delta.y\n        }, element, !event.shiftKey);\n        if (isMoveable(element)) {\n            return {\n                elementId: element.id,\n                elementType: element.type,\n                fromPosition: {\n                    x: element.position.x,\n                    y: element.position.y\n                },\n                toPosition\n            };\n        } else if (element instanceof SRoutingHandle) {\n            const point = this.getHandlePosition(element);\n            if (point !== undefined) {\n                return {\n                    elementId: element.id,\n                    elementType: element.type,\n                    fromPosition: point,\n                    toPosition\n                };\n            }\n        }\n        return undefined;\n    }\n\n    protected snap(position: Point, element: SModelElement, isSnap: boolean): Point {\n        if (isSnap && this.snapper)\n            return this.snapper.snap(position, element);\n        else\n            return position;\n    }\n\n    protected getHandlePosition(handle: SRoutingHandle): Point | undefined {\n        if (this.edgeRouterRegistry) {\n            const parent = handle.parent;\n            if (!(parent instanceof SRoutableElement))\n                return undefined;\n            const router = this.edgeRouterRegistry.get(parent.routerKind);\n            const route = router.route(parent);\n            return router.getHandlePosition(parent, route, handle);\n        }\n        return undefined;\n    }\n\n    override mouseEnter(target: SModelElement, event: MouseEvent): Action[] {\n        if (target instanceof SModelRoot && event.buttons === 0 && !this.startDragPosition)\n            this.mouseUp(target, event);\n        return [];\n    }\n\n    override mouseUp(target: SModelElement, event: MouseEvent): (Action | Promise<Action>)[] {\n        const result: Action[] = [];\n        if (this.startDragPosition) {\n            const moveAction = this.getElementMoves(target, event, true);\n            if (moveAction) {\n                result.push(moveAction);\n            }\n            target.root.index.all().forEach(element => {\n                if (element instanceof SRoutingHandle) {\n                    result.push(...this.deactivateRoutingHandle(element, target, event));\n                }\n            });\n        }\n        if (!result.some(a => a.kind === ReconnectAction.KIND)) {\n            const edgeInProgress = target.root.index.getById(edgeInProgressID);\n            if (edgeInProgress instanceof SChildElement) {\n                result.push(this.deleteEdgeInProgress(edgeInProgress));\n            }\n        }\n        if (this.hasDragged) {\n            result.push(CommitModelAction.create());\n        }\n        this.hasDragged = false;\n        this.startDragPosition = undefined;\n        this.elementId2startPos.clear();\n        return result;\n    }\n\n    protected deactivateRoutingHandle(element: SRoutingHandle, target: SModelElement, event: MouseEvent): Action[] {\n        const result: Action[] = [];\n        const parent = element.parent;\n        if (parent instanceof SRoutableElement && element.danglingAnchor) {\n            const handlePos = this.getHandlePosition(element);\n            if (handlePos) {\n                const handlePosAbs = translatePoint(handlePos, element.parent, element.root);\n                const newEnd = findChildrenAtPosition(target.root, handlePosAbs)\n                    .find(e => isConnectable(e) && e.canConnect(parent, element.kind as ('source' | 'target')));\n                if (newEnd && this.hasDragged) {\n                    result.push(ReconnectAction.create({\n                        routableId: element.parent.id,\n                        newSourceId: element.kind === 'source' ? newEnd.id : parent.sourceId,\n                        newTargetId: element.kind === 'target' ? newEnd.id : parent.targetId\n                    }));\n                }\n            }\n        }\n        if (element.editMode) {\n            result.push(SwitchEditModeAction.create({ elementsToDeactivate: [element.id] }));\n        }\n        return result;\n    }\n\n    protected deleteEdgeInProgress(edgeInProgress: SChildElement): Action {\n        const deleteIds: string[] = [];\n        deleteIds.push(edgeInProgressID);\n        edgeInProgress.children.forEach(c => {\n            if (c instanceof SRoutingHandle && c.danglingAnchor)\n                deleteIds.push(c.danglingAnchor.id);\n        });\n        return DeleteElementAction.create(deleteIds);\n    }\n\n    override decorate(vnode: VNode, element: SModelElement): VNode {\n        return vnode;\n    }\n}\n\n@injectable()\nexport class LocationPostprocessor implements IVNodePostprocessor {\n\n    decorate(vnode: VNode, element: SModelElement): VNode {\n        if (isEdgeLayoutable(element) && element.parent instanceof SEdge) {\n            // The element is handled by EdgeLayoutDecorator\n            return vnode;\n        }\n        let translate: string = '';\n        if (isLocateable(element) && element instanceof SChildElement && element.parent !== undefined) {\n            const pos = element.position;\n            if (pos.x !== 0 || pos.y !== 0) {\n                translate = 'translate(' + pos.x + ', ' + pos.y + ')';\n            }\n        }\n        if (isAlignable(element)) {\n            const ali = element.alignment;\n            if (ali.x !== 0 || ali.y !== 0) {\n                if (translate.length > 0) {\n                    translate += ' ';\n                }\n                translate += 'translate(' + ali.x + ', ' + ali.y + ')';\n            }\n        }\n        if (translate.length > 0) {\n            setAttr(vnode, 'transform', translate);\n        }\n        return vnode;\n    }\n\n    postUpdate(): void {\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from \"inversify\";\nimport { Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { SModelElement } from \"../../base/model/smodel\";\nimport { isBoundsAware } from \"../bounds/model\";\n\n/**\n * A snapper helps to align nodes and routing handles.\n */\nexport interface ISnapper {\n    /**\n     * @retruns the closest snapped position that for the `element` located at `position`\n     */\n    snap(position: Point, element: SModelElement): Point\n}\n\n/**\n * A simple snapper that snaps the center of nodes and routing points to a grid.\n */\n@injectable()\nexport class CenterGridSnapper implements ISnapper {\n\n    get gridX() {\n        return 10;\n    }\n\n    get gridY() {\n        return 10;\n    }\n\n    snap(position: Point, element: SModelElement): Point {\n        if (element && isBoundsAware(element))\n            return {\n                x: Math.round((position.x + 0.5 * element.bounds.width) / this.gridX) * this.gridX - 0.5 * element.bounds.width,\n                y: Math.round((position.y + 0.5 * element.bounds.height) / this.gridY) * this.gridY - 0.5 * element.bounds.height\n            };\n        else\n            return {\n                x: Math.round(position.x / this.gridX) * this.gridX,\n                y: Math.round(position.y / this.gridY) * this.gridY\n            };\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SModelElement } from '../../base/model/smodel';\n\nexport const openFeature = Symbol('openFeature');\n\nexport function isOpenable(element: SModelElement): element is SModelElement  {\n    return element.hasFeature(openFeature);\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Action, OpenAction } from 'sprotty-protocol/lib/actions';\nimport { MouseListener } from '../../base/views/mouse-tool';\nimport { SModelElement } from '../../base/model/smodel';\nimport { findParentByFeature } from '../../base/model/smodel-utils';\nimport { isOpenable } from './model';\n\n\nexport class OpenMouseListener extends MouseListener {\n    override doubleClick(target: SModelElement, event: MouseEvent): (Action | Promise<Action>)[] {\n        const openableTarget = findParentByFeature(target, isOpenable);\n        if (openableTarget !== undefined) {\n            return [ OpenAction.create(openableTarget.id) ];\n        }\n        return [];\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Viewport } from 'sprotty-protocol/lib/model';\nimport { Bounds, Dimension } from 'sprotty-protocol/lib/utils/geometry';\nimport { hasOwnProperty } from 'sprotty-protocol/lib/utils/object';\nimport { SChildElement, SModelRoot, SParentElement } from '../../base/model/smodel';\nimport { SModelExtension } from '../../base/model/smodel-extension';\nimport { transformToRootBounds } from '../../base/model/smodel-utils';\nimport { isBoundsAware } from '../bounds/model';\n\n/**\n * Model elements implementing this interface can be displayed on a projection bar.\n * _Note:_ If set, the projectedBounds property will be prefered over the model element bounds.\n * Otherwise model elements also have to be `BoundsAware` so their projections can be shown.\n */\nexport interface Projectable extends SModelExtension {\n    projectionCssClasses: string[],\n    projectedBounds?: Bounds,\n}\n\nexport function isProjectable(arg: unknown): arg is Projectable {\n    return hasOwnProperty(arg, 'projectionCssClasses');\n}\n\n/**\n * A projection can be shown in a horizontal or vertical bar to display an overview of the diagram.\n */\nexport interface ViewProjection {\n    elementId: string;\n    projectedBounds: Bounds;\n    cssClasses: string[];\n}\n\n/**\n * Gather all projections of elements contained in the given parent element.\n */\nexport function getProjections(parent: Readonly<SParentElement>): ViewProjection[] | undefined {\n    let result: ViewProjection[] | undefined;\n    for (const child of parent.children) {\n        if (isProjectable(child) && child.projectionCssClasses.length > 0) {\n            const projectedBounds = getProjectedBounds(child);\n            if (projectedBounds) {\n                const projection: ViewProjection = {\n                    elementId: child.id,\n                    projectedBounds,\n                    cssClasses: child.projectionCssClasses\n                };\n                if (result) {\n                    result.push(projection);\n                } else {\n                    result = [projection];\n                }\n            }\n        }\n        if (child.children.length > 0) {\n            const childProj = getProjections(child);\n            if (childProj) {\n                if (result) {\n                    result.push(...childProj);\n                } else {\n                    result = childProj;\n                }\n            }\n        }\n    }\n    return result;\n}\n\n/**\n * Compute the projected bounds of the given model element, that is the absolute position in the diagram.\n */\nexport function getProjectedBounds(model: Readonly<SChildElement & Projectable>): Bounds | undefined {\n    const parent = model.parent;\n    if (model.projectedBounds) {\n        let bounds = model.projectedBounds;\n        if (isBoundsAware(parent)) {\n            bounds = transformToRootBounds(parent, bounds);\n        }\n        return bounds;\n    } else if (isBoundsAware(model)) {\n        let bounds = model.bounds;\n        bounds = transformToRootBounds(parent, bounds);\n        return bounds;\n    }\n    return undefined;\n}\n\nconst MAX_COORD = 1_000_000_000;\n\n/**\n * Determine the total bounds of a model; this takes the viewport into consideration\n * so it can be shown in the projections.\n */\nexport function getModelBounds(model: SModelRoot & Viewport): Bounds | undefined {\n    let minX = MAX_COORD;\n    let minY = MAX_COORD;\n    let maxX = -MAX_COORD;\n    let maxY = -MAX_COORD;\n\n    const bounds = isBoundsAware(model) ? model.bounds : undefined;\n    if (bounds && Dimension.isValid(bounds)) {\n        // Get the bounds directly from the model if it returns a valid size\n        minX = bounds.x;\n        minY = bounds.y;\n        maxX = minX + bounds.width;\n        maxY = minY + bounds.height;\n    } else {\n        // Determine the min. / max coordinates of top-level model elements\n        // Note that this approach is slower, so provide valid bounds to speed up the process.\n        for (const element of model.children) {\n            if (isBoundsAware(element)) {\n                const b = element.bounds;\n                minX = Math.min(minX, b.x);\n                minY = Math.min(minY, b.y);\n                maxX = Math.max(maxX, b.x + b.width);\n                maxY = Math.max(maxY, b.y + b.height);\n            }\n        }\n    }\n\n    // Enlarge the bounds by the current viewport to ensure it always fits into the projection\n    minX = Math.min(minX, model.scroll.x);\n    minY = Math.min(minY, model.scroll.y);\n    maxX = Math.max(maxX, model.scroll.x + model.canvasBounds.width / model.zoom);\n    maxY = Math.max(maxY, model.scroll.y + model.canvasBounds.height / model.zoom);\n\n    if (minX < maxX && minY < maxY) {\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY\n        };\n    }\n    return undefined;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/** @jsx html */\nimport { html } from '../../lib/jsx';\n\nimport { injectable } from 'inversify';\nimport { VNode, VNodeStyle, h } from 'snabbdom';\nimport { Bounds } from 'sprotty-protocol/lib/utils/geometry';\nimport { IView, IViewArgs, RenderingContext } from '../../base/views/view';\nimport { setAttr, setClass } from '../../base/views/vnode-utils';\nimport { ViewportRootElement } from '../viewport/viewport-root';\nimport { getModelBounds, getProjections, ViewProjection } from './model';\n\n/**\n * Special viewport root view that renders horizontal and vertical projection bars for quick navigation.\n */\n@injectable()\nexport class ProjectedViewportView implements IView {\n\n    render(model: Readonly<ViewportRootElement>, context: RenderingContext, args?: IViewArgs): VNode {\n        const rootNode: VNode = <div class-sprotty-root={true}>\n            {this.renderSvg(model, context, args)}\n            {this.renderProjections(model, context, args)}\n        </div>;\n        setAttr(rootNode, 'tabindex', 0); // make root div focus-able\n        return rootNode;\n    }\n\n    protected renderSvg(model: Readonly<ViewportRootElement>, context: RenderingContext, args?: IViewArgs): VNode {\n        const transform = `scale(${model.zoom}) translate(${-model.scroll.x},${-model.scroll.y})`;\n        const ns = 'http://www.w3.org/2000/svg';\n        return h('svg', { ns }, h('g', { ns, attrs: { transform } }, context.renderChildren(model)));\n    }\n\n    protected renderProjections(model: Readonly<ViewportRootElement>, context: RenderingContext, args?: IViewArgs): VNode[] {\n        if (model.zoom <= 0) {\n            return [];\n        }\n        const modelBounds = getModelBounds(model);\n        if (!modelBounds) {\n            return [];\n        }\n        const projections = getProjections(model) ?? [];\n        return [\n            this.renderProjectionBar(projections, model, modelBounds, 'vertical'),\n            this.renderProjectionBar(projections, model, modelBounds, 'horizontal')\n        ];\n    }\n\n    protected renderProjectionBar(projections: ViewProjection[], model: Readonly<ViewportRootElement>, modelBounds: Bounds, orientation: 'horizontal' | 'vertical'): VNode {\n        const params: ProjectionParams = { modelBounds, orientation } as ProjectionParams;\n        // NOTE: Here we assume that the projection bars have the same size as the diagram canvas, i.e. they are drawn as overlay above the canvas.\n        params.factor = orientation === 'horizontal' ? model.canvasBounds.width / modelBounds.width : model.canvasBounds.height / modelBounds.height;\n        params.zoomedFactor = params.factor / model.zoom;\n        return <div\n                class-sprotty-projection-bar={true}\n                class-horizontal={orientation === 'horizontal'}\n                class-vertical={orientation === 'vertical'} >\n            {this.renderViewport(model, params)}\n            {projections.map(p => this.renderProjection(p, model, params))}\n        </div>;\n    }\n\n    protected renderViewport(model: Readonly<ViewportRootElement>, params: ProjectionParams): VNode {\n        let canvasSize, viewportPos: number;\n        if (params.orientation === 'horizontal') {\n            canvasSize = model.canvasBounds.width;\n            viewportPos = (model.scroll.x - params.modelBounds.x) * params.factor;\n        } else {\n            canvasSize = model.canvasBounds.height;\n            viewportPos = (model.scroll.y - params.modelBounds.y) * params.factor;\n        }\n        let viewportSize = canvasSize * params.zoomedFactor;\n        if (viewportPos < 0) {\n            viewportSize += viewportPos;\n            viewportPos = 0;\n        } else if (viewportPos > canvasSize) {\n            viewportPos = canvasSize;\n        }\n        if (viewportSize < 0) {\n            viewportSize = 0;\n        } else if (viewportPos + viewportSize > canvasSize) {\n            viewportSize = canvasSize - viewportPos;\n        }\n        const style: VNodeStyle = params.orientation === 'horizontal' ? {\n            left: `${viewportPos}px`,\n            width: `${viewportSize}px`\n        } : {\n            top: `${viewportPos}px`,\n            height: `${viewportSize}px`\n        };\n        return <div class-sprotty-viewport={true} style={style} />;\n    }\n\n    protected renderProjection(projection: ViewProjection, model: Readonly<ViewportRootElement>, params: ProjectionParams): VNode {\n        let canvasSize, projPos, projSize: number;\n        if (params.orientation === 'horizontal') {\n            canvasSize = model.canvasBounds.width;\n            projPos = (projection.projectedBounds.x - params.modelBounds.x) * params.factor;\n            projSize = projection.projectedBounds.width * params.factor;\n        } else {\n            canvasSize = model.canvasBounds.height;\n            projPos = (projection.projectedBounds.y - params.modelBounds.y) * params.factor;\n            projSize = projection.projectedBounds.height * params.factor;\n        }\n        if (projPos < 0) {\n            projSize += projPos;\n            projPos = 0;\n        } else if (projPos > canvasSize) {\n            projPos = canvasSize;\n        }\n        if (projSize < 0) {\n            projSize = 0;\n        } else if (projPos + projSize > canvasSize) {\n            projSize = canvasSize - projPos;\n        }\n        const style: VNodeStyle = params.orientation === 'horizontal' ? {\n            left: `${projPos}px`,\n            width: `${projSize}px`\n        } : {\n            top: `${projPos}px`,\n            height: `${projSize}px`\n        };\n        const result = <div id={`${params.orientation}-projection:${projection.elementId}`} class-sprotty-projection={true} style={style} />;\n        projection.cssClasses.forEach(cl => setClass(result, cl, true));\n        return result;\n    }\n\n}\n\nexport type ProjectionParams = {\n    modelBounds: Bounds\n    orientation: 'horizontal' | 'vertical'\n    factor: number\n    zoomedFactor: number\n};\n", "/********************************************************************************\n * Copyright (c) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { IAnchorComputer, ELLIPTIC_ANCHOR_KIND, RECTANGULAR_ANCHOR_KIND, DIAMOND_ANCHOR_KIND } from \"./anchor\";\nimport { SConnectableElement } from \"./model\";\nimport { PointToPointLine, Diamond, intersection } from \"../../utils/geometry\";\nimport { injectable } from \"inversify\";\nimport { PolylineEdgeRouter } from \"./polyline-edge-router\";\nimport { almostEquals, Bounds, Point } from \"sprotty-protocol/lib/utils/geometry\";\n\n@injectable()\nexport class EllipseAnchor implements IAnchorComputer {\n\n    get kind() {\n        return PolylineEdgeRouter.KIND + ':' + ELLIPTIC_ANCHOR_KIND;\n    }\n\n    getAnchor(connectable: SConnectableElement, refPoint: Point, offset: number = 0): Point {\n        const bounds = connectable.bounds;\n        const c = Bounds.center(bounds);\n        const dx = c.x - refPoint.x;\n        const dy = c.y - refPoint.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        const normX = (dx / distance) || 0;\n        const normY = (dy / distance) || 0;\n        return {\n            x: c.x - normX * (0.5 * bounds.width + offset),\n            y: c.y - normY * (0.5 * bounds.height + offset)\n        };\n    }\n}\n\n@injectable()\nexport class RectangleAnchor implements IAnchorComputer {\n\n    get kind() {\n        return PolylineEdgeRouter.KIND + ':' + RECTANGULAR_ANCHOR_KIND;\n    }\n\n    getAnchor(connectable: SConnectableElement, refPoint: Point, offset: number = 0): Point {\n        const bounds = connectable.bounds;\n        const c = Bounds.center(bounds);\n        const finder = new NearestPointFinder(c, refPoint);\n        if (!almostEquals(c.y, refPoint.y)) {\n            const xTop = this.getXIntersection(bounds.y, c, refPoint);\n            if (xTop >= bounds.x && xTop <= bounds.x + bounds.width)\n                finder.addCandidate(xTop, bounds.y - offset);\n            const xBottom = this.getXIntersection(bounds.y + bounds.height, c, refPoint);\n            if (xBottom >= bounds.x && xBottom <= bounds.x + bounds.width)\n                finder.addCandidate(xBottom, bounds.y + bounds.height + offset);\n        }\n        if (!almostEquals(c.x, refPoint.x)) {\n            const yLeft = this.getYIntersection(bounds.x, c, refPoint);\n            if (yLeft >= bounds.y && yLeft <= bounds.y + bounds.height)\n                finder.addCandidate(bounds.x - offset, yLeft);\n            const yRight = this.getYIntersection(bounds.x + bounds.width, c, refPoint);\n            if (yRight >= bounds.y && yRight <= bounds.y + bounds.height)\n                finder.addCandidate(bounds.x + bounds.width + offset, yRight);\n        }\n        return finder.best;\n    }\n\n    protected getXIntersection(yIntersection: number, centerPoint: Point, point: Point): number {\n        const t = (yIntersection - centerPoint.y) / (point.y - centerPoint.y);\n        return (point.x - centerPoint.x) * t + centerPoint.x;\n    }\n\n    protected getYIntersection(xIntersection: number, centerPoint: Point, point: Point): number {\n        const t = (xIntersection - centerPoint.x) / (point.x - centerPoint.x);\n        return (point.y - centerPoint.y) * t + centerPoint.y;\n    }\n}\n\nclass NearestPointFinder {\n    protected currentBest: Point | undefined;\n    protected currentDist: number = -1;\n\n    constructor(protected centerPoint: Point, protected refPoint: Point) {\n    }\n\n    addCandidate(x: number, y: number) {\n        const dx = this.refPoint.x - x;\n        const dy = this.refPoint.y - y;\n        const dist = dx * dx + dy * dy;\n        if (this.currentDist < 0 || dist < this.currentDist) {\n            this.currentBest = {\n                x: x,\n                y: y\n            };\n            this.currentDist = dist;\n        }\n    }\n\n    get best(): Point {\n        if (this.currentBest === undefined)\n            return this.centerPoint;\n        else\n            return this.currentBest;\n    }\n}\n\n@injectable()\nexport class DiamondAnchor implements IAnchorComputer {\n\n    get kind() {\n        return PolylineEdgeRouter.KIND + ':' + DIAMOND_ANCHOR_KIND;\n    }\n\n    getAnchor(connectable: SConnectableElement, refPoint: Point, offset: number): Point {\n        const bounds = connectable.bounds;\n        const referenceLine = new PointToPointLine(Bounds.center(bounds), refPoint);\n        const closestDiamondSide = new Diamond(bounds).closestSideLine(refPoint);\n        const anchorPoint = intersection(closestDiamondSide, referenceLine);\n        return Point.shiftTowards(anchorPoint, refPoint, offset);\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport { Action } from 'sprotty-protocol/lib/actions';\nimport { centerOfLine, Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { ResolvedHandleMove } from '../move/move';\nimport { SDanglingAnchor, SRoutableElement, SRoutingHandle } from './model';\nimport { SModelElement } from '../../base/model/smodel';\nimport { EdgeRouterRegistry, RoutedPoint } from './routing';\nimport { AbstractEdgeRouter, LinearRouteOptions } from './abstract-edge-router';\nimport { MouseListener } from '../../base/views/mouse-tool';\nimport { Command, CommandExecutionContext, CommandReturn } from '../../base/commands/command';\nimport { TYPES } from \"../../base/types\";\nimport { SEdge } from '../../graph/sgraph';\n\n@injectable()\nexport class BezierEdgeRouter extends AbstractEdgeRouter {\n\n    static readonly KIND = 'bezier';\n    static readonly DEFAULT_BEZIER_HANDLE_OFFSET = 25;\n\n    get kind() {\n        return BezierEdgeRouter.KIND;\n    }\n\n    route(edge: SRoutableElement): RoutedPoint[] {\n        if (!edge.source || !edge.target)\n            return [];\n        const rpCount = edge.routingPoints.length;\n        const source = edge.source;\n        const target = edge.target;\n\n        const result: RoutedPoint[] = [];\n        result.push({ kind: 'source', x: 0, y: 0 });\n        if (rpCount === 0) {\n            // initial values\n            const [h1, h2] = this.createDefaultBezierHandles(source.position, target.position);\n            result.push( { kind: 'bezier-control-after', x: h1.x, y: h1.y, pointIndex: 0 } );\n            result.push( { kind: 'bezier-control-before', x: h2.x, y: h2.y, pointIndex: 1 } );\n            edge.routingPoints.push(h1);\n            edge.routingPoints.push(h2);\n        } else if (rpCount >= 2) {\n            for (let i = 0; i < rpCount; i++) {\n                const p = edge.routingPoints[i];\n                if (i % 3 === 0) {\n                    result.push({ kind: 'bezier-control-after', x: p.x, y: p.y, pointIndex: i });\n                }\n                if ((i + 1) % 3 === 0) {\n                    result.push({ kind: 'bezier-junction', x: p.x, y: p.y, pointIndex: i });\n                } else if ((i + 2) % 3 === 0) {\n                    result.push({ kind: 'bezier-control-before', x: p.x, y: p.y, pointIndex: i });\n                }\n            }\n        }\n        result.push({ kind: 'target', x: 0, y: 0 });\n\n        // use \"ends\" of edge as reference or next bezier-junction\n        const p0 = rpCount > 2 ? edge.routingPoints[2] : target.position;\n        const pn = rpCount > 2 ? edge.routingPoints[edge.routingPoints.length - 3] : source.position;\n\n        const sourceAnchor = this.getTranslatedAnchor(source, p0, target.parent, edge, edge.sourceAnchorCorrection);\n        const targetAnchor = this.getTranslatedAnchor(target, pn, source.parent, edge, edge.targetAnchorCorrection);\n\n        result[0] = { kind: 'source', x: sourceAnchor.x, y: sourceAnchor.y };\n        result[result.length - 1] = { kind: 'target', x: targetAnchor.x, y: targetAnchor.y };\n\n        return result;\n    }\n\n    private createDefaultBezierHandles(relH1: Point, relH2: Point): [Point, Point] {\n        const h1 = {\n            x: relH1.x - BezierEdgeRouter.DEFAULT_BEZIER_HANDLE_OFFSET,\n            y: relH1.y\n        };\n        const h2 = {\n            x: relH2.x + BezierEdgeRouter.DEFAULT_BEZIER_HANDLE_OFFSET,\n            y: relH2.y\n        };\n        return [ h1, h2 ];\n    }\n\n    createRoutingHandles(edge: SRoutableElement): void {\n        // route ensure there are at least 2 routed points\n        this.route(edge);\n\n        this.rebuildHandles(edge);\n    }\n\n    private rebuildHandles(edge: SRoutableElement) {\n        this.addHandle(edge, 'source', 'routing-point', -2);\n        this.addHandle(edge, 'bezier-control-after', 'bezier-routing-point', 0);\n        this.addHandle(edge, 'bezier-add', 'bezier-create-routing-point', 0);\n        const rpCount = edge.routingPoints.length;\n\n        if (rpCount > 2) {\n            for (let i = 1; i < rpCount - 1; i += 3) {\n                this.addHandle(edge, 'bezier-control-before', 'bezier-routing-point', i);\n                // Add two circle for add/remove segments\n                this.addHandle(edge, 'bezier-add', 'bezier-create-routing-point', i + 1);\n                this.addHandle(edge, 'bezier-junction', 'routing-point', i + 1);\n                this.addHandle(edge, 'bezier-remove', 'bezier-remove-routing-point', i + 1);\n                this.addHandle(edge, 'bezier-control-after', 'bezier-routing-point', i + 2);\n\n                // re-position control-pairs\n                this.moveBezierControlPair(edge.routingPoints[i], i, edge);\n            }\n        }\n        this.addHandle(edge, 'bezier-control-before', 'bezier-routing-point', rpCount - 1);\n        this.addHandle(edge, 'target', 'routing-point', -1);\n    }\n\n    getInnerHandlePosition(edge: SRoutableElement, route: RoutedPoint[], handle: SRoutingHandle) {\n       if (handle.kind === 'bezier-control-before' || handle.kind === 'bezier-junction' || handle.kind === 'bezier-control-after') {\n            for (let i = 0; i < route.length; i++) {\n                const p = route[i];\n                if (p.pointIndex === handle.pointIndex && p.kind === handle.kind)\n                    return p;\n            }\n        } else if (handle.kind === 'bezier-add') {\n            const ctrlPoint = this.findBezierControl(edge, route, handle.pointIndex);\n            return { x: ctrlPoint.x, y: ctrlPoint.y + 12.5};\n        } else if (handle.kind === 'bezier-remove') {\n            const ctrlPoint = this.findBezierControl(edge, route, handle.pointIndex);\n            return { x: ctrlPoint.x, y: ctrlPoint.y - 12.5};\n        }\n        return undefined;\n    }\n\n    protected findBezierControl(edge: SRoutableElement, route: RoutedPoint[], handleIndex: number): Point {\n        let result: Point = { x: route[0].x, y: route[0].y };\n        if (handleIndex > 0) {\n            for (const rp of route) {\n                if (rp.pointIndex !== undefined && rp.pointIndex === handleIndex && rp.kind === 'bezier-junction') {\n                    result = { x: rp.x, y: rp.y };\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n\n    override applyHandleMoves(edge: SRoutableElement, moves: ResolvedHandleMove[]): void {\n        moves.forEach(move => {\n            const handle = move.handle;\n            let orgPosition = { x: 0, y: 0 };\n            let relativePos, newControlPos, ctrlPointIndex;\n            const moveToPos = move.toPosition;\n\n            switch (handle.kind) {\n                case 'bezier-control-before':\n                case 'bezier-control-after':\n                    // find potential other handle/rp and move\n                    this.moveBezierControlPair(moveToPos, move.handle.pointIndex, edge);\n                    break;\n                case 'bezier-junction':\n                    const index = handle.pointIndex;\n                    if (index >= 0 && index < edge.routingPoints.length) {\n                        ctrlPointIndex = index - 1;\n                        orgPosition = edge.routingPoints[index];\n                        relativePos = edge.routingPoints[ctrlPointIndex];\n                        newControlPos = this.calcRelativeMove(orgPosition, moveToPos, relativePos);\n                        edge.routingPoints[index] = moveToPos;\n                        this.moveBezierControlPair(newControlPos, ctrlPointIndex, edge);\n                    }\n                    break;\n                case 'source':\n                    ctrlPointIndex = 0;\n                    relativePos = edge.routingPoints[ctrlPointIndex];\n\n                    if (!(edge.source instanceof SDanglingAnchor)) {\n                        // detach source\n                        const anchor = new SDanglingAnchor();\n                        anchor.id = edge.id + '_dangling-source';\n                        anchor.original = edge.source;\n                        anchor.position = move.toPosition;\n                        handle.root.add(anchor);\n                        handle.danglingAnchor = anchor;\n                        edge.sourceId = anchor.id;\n                        if (edge.source) orgPosition = edge.source.position;\n                    } else if (handle.danglingAnchor) {\n                        orgPosition = handle.danglingAnchor.position;\n                        handle.danglingAnchor.position = moveToPos;\n                    }\n                    newControlPos = this.calcRelativeMove(orgPosition, moveToPos, relativePos);\n                    this.moveBezierControlPair(newControlPos, ctrlPointIndex, edge);\n                    break;\n                case 'target':\n                    ctrlPointIndex = edge.routingPoints.length - 1;\n                    relativePos = edge.routingPoints[ctrlPointIndex];\n\n                    if (!(edge.target instanceof SDanglingAnchor)) {\n                        // detach target\n                        const anchor = new SDanglingAnchor();\n                        anchor.id = edge.id + '_dangling-target';\n                        anchor.original = edge.target;\n                        anchor.position = moveToPos;\n                        handle.root.add(anchor);\n                        handle.danglingAnchor = anchor;\n                        edge.targetId = anchor.id;\n                        if (edge.target) orgPosition = edge.target.position;\n                    } else if (handle.danglingAnchor) {\n                        orgPosition = handle.danglingAnchor.position;\n                        handle.danglingAnchor.position = moveToPos;\n                    }\n                    newControlPos = this.calcRelativeMove(orgPosition, moveToPos, relativePos);\n                    this.moveBezierControlPair(newControlPos, ctrlPointIndex, edge);\n                    break;\n                default:\n                    break;\n            }\n        });\n    }\n\n    protected applyInnerHandleMoves(edge: SRoutableElement, moves: ResolvedHandleMove[]): void {\n        // not required\n    }\n\n    protected getOptions(edge: SRoutableElement): LinearRouteOptions {\n        return  {\n            minimalPointDistance: 2,\n            standardDistance: 0.1,\n            selfEdgeOffset: 20\n        };\n    }\n\n    private calcRelativeMove(oldPos: Point, newPos: Point, relativePoint: Point): Point {\n        return {\n            x: relativePoint.x - (oldPos.x - newPos.x),\n            y: relativePoint.y - (oldPos.y - newPos.y)\n        };\n    }\n\n    public createNewBezierSegment(index: number, edge: SRoutableElement): void {\n        const routingPoints = edge.routingPoints;\n\n        let bezierJunctionPos, start, end: Point;\n        if (routingPoints.length === 2) {\n            start = routingPoints[index < 0 ? 0 : index];\n            end = routingPoints[routingPoints.length - 1];\n            bezierJunctionPos = centerOfLine(start, end);\n        } else {\n            start = routingPoints[index];\n            end = routingPoints[index + 2];\n            bezierJunctionPos = centerOfLine(start, end);\n        }\n        const [h1, h2] = this.createDefaultBezierHandles(bezierJunctionPos, bezierJunctionPos);\n\n        routingPoints.splice(index + 1, 0, h1);\n        routingPoints.splice(index + 2, 0, bezierJunctionPos);\n        routingPoints.splice(index + 3, 0, h2);\n        // ensure handles are correctly positioned\n        this.moveBezierControlPair(h1, index + 1, edge);\n\n        // simple solution for now: just rebuildHandles\n        edge.removeAll(c => c instanceof SRoutingHandle);\n        this.rebuildHandles(edge);\n    }\n\n    public removeBezierSegment(index: number, edge: SRoutableElement): void {\n        const routingPoints = edge.routingPoints;\n\n        routingPoints.splice(index - 1, 3);\n\n        // simple solution for now: just rebuildHandles\n        edge.removeAll(c => c instanceof SRoutingHandle);\n        this.rebuildHandles(edge);\n    }\n\n    private moveBezierControlPair(newPos: Point, ctrlPointIndex: number, edge: SRoutableElement) {\n        if (ctrlPointIndex >= 0 && ctrlPointIndex < edge.routingPoints.length) {\n            // find neighbors\n            const before = ctrlPointIndex - 1;\n            const after = ctrlPointIndex + 1;\n\n            // this is the first control or the last control => nothing to do further\n            if (before < 0 || after === edge.routingPoints.length) {\n                edge.routingPoints[ctrlPointIndex] = newPos;\n            } else  {\n                // behind bezier-junction\n                if (ctrlPointIndex % 3 === 0) {\n                    this.setBezierMirror(edge, newPos, ctrlPointIndex, false);\n                // before bezier-junction\n                } else if ((ctrlPointIndex + 2) % 3 === 0) {\n                    this.setBezierMirror(edge, newPos, ctrlPointIndex, true);\n                }\n            }\n        }\n    }\n\n    private setBezierMirror(edge: SRoutableElement, newPos: Point, pointIndex: number, before: boolean) {\n        edge.routingPoints[pointIndex] = newPos;\n        const jct = edge.routingPoints[before ? (pointIndex + 1) : (pointIndex - 1)];\n        edge.routingPoints[before ? (pointIndex + 2) : (pointIndex - 2)] = {\n            x: jct.x - (newPos.x - jct.x),\n            y: jct.y - (newPos.y - jct.y)\n        };\n    }\n\n}\n\n/**\n * Reacts on mouseDown events if the target kind is bezier-add or bezier-remove\n */\nexport class BezierMouseListener extends MouseListener {\n\n    override mouseDown(target: SModelElement, event: MouseEvent): Action[] {\n        const result = [];\n        if (target instanceof SRoutingHandle && (target.kind === 'bezier-add' || target.kind === 'bezier-remove')) {\n            if (target.type === 'bezier-create-routing-point') {\n                result.push(AddRemoveBezierSegmentAction.create('add', target.id));\n            } else if (target.type === 'bezier-remove-routing-point') {\n                result.push(AddRemoveBezierSegmentAction.create('remove', target.id));\n            }\n        }\n        return result;\n    }\n};\n\nexport interface AddRemoveBezierSegmentAction extends Action {\n    kind: typeof AddRemoveBezierSegmentAction.KIND\n    targetId: string\n    actionTask: 'add' | 'remove'\n}\n\nexport namespace AddRemoveBezierSegmentAction {\n    export const KIND = 'addRemoveBezierSegment';\n    export function create(actionTask: 'add' | 'remove', targetId: string): AddRemoveBezierSegmentAction {\n        return {\n            kind: KIND,\n            actionTask,\n            targetId\n        };\n    }\n}\n\n@injectable()\nexport class AddRemoveBezierSegmentCommand extends Command {\n    static readonly KIND = AddRemoveBezierSegmentAction.KIND;\n\n    constructor(@inject(TYPES.Action) protected readonly action: AddRemoveBezierSegmentAction,\n        @inject(EdgeRouterRegistry) protected readonly edgeRouterRegistry?: EdgeRouterRegistry) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        const index = context.root.index;\n        const target = index.getById(this.action.targetId);\n\n        if (this.edgeRouterRegistry && target instanceof SRoutingHandle) {\n            const raw = this.edgeRouterRegistry.get((target.parent as SRoutableElement).routerKind);\n            if (raw instanceof BezierEdgeRouter) {\n                const router = raw;\n\n                for (const child of context.root.children) {\n                    if (child.id === target.parent.id) {\n                        if (this.action.actionTask === 'add') {\n                            router.createNewBezierSegment(target.pointIndex, child as SEdge);\n                        } else if (this.action.actionTask === 'remove') {\n                            router.removeBezierSegment(target.pointIndex, child as SEdge);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        return context.root;\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        throw new Error('Method not implemented.');\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        throw new Error('Method not implemented.');\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ELLIPTIC_ANCHOR_KIND, RECTANGULAR_ANCHOR_KIND, DIAMOND_ANCHOR_KIND } from \"./anchor\";\nimport { injectable } from \"inversify\";\nimport { DiamondAnchor, EllipseAnchor, RectangleAnchor } from './polyline-anchors';\nimport { BezierEdgeRouter } from './bezier-edge-router';\n\n@injectable()\nexport class BezierEllipseAnchor extends EllipseAnchor {\n\n    override get kind() {\n        return BezierEdgeRouter.KIND + ':' + ELLIPTIC_ANCHOR_KIND;\n    }\n}\n\n@injectable()\nexport class BezierRectangleAnchor extends RectangleAnchor {\n\n    override get kind() {\n        return BezierEdgeRouter.KIND + ':' + RECTANGULAR_ANCHOR_KIND;\n    }\n}\n\n@injectable()\nexport class BezierDiamondAnchor extends DiamondAnchor {\n\n    override get kind() {\n        return BezierEdgeRouter.KIND + ':' + DIAMOND_ANCHOR_KIND;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2019-2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { almostEquals, Bounds, Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { translatePoint } from \"../../base/model/smodel-utils\";\nimport { ResolvedHandleMove } from \"../move/move\";\nimport { DefaultAnchors, AbstractEdgeRouter, LinearRouteOptions, Side } from \"./abstract-edge-router\";\nimport { SRoutableElement, RoutingHandleKind, SRoutingHandle } from \"./model\";\nimport { RoutedPoint } from \"./routing\";\n\nexport interface ManhattanRouterOptions extends LinearRouteOptions {\n    standardDistance: number;\n}\n\nexport class ManhattanEdgeRouter extends AbstractEdgeRouter {\n\n    static readonly KIND = 'manhattan';\n\n    get kind() {\n        return ManhattanEdgeRouter.KIND;\n    }\n\n    protected getOptions(edge: SRoutableElement): ManhattanRouterOptions {\n        return {\n            standardDistance: 20,\n            minimalPointDistance: 3,\n            selfEdgeOffset: 0.25\n        };\n    }\n\n    route(edge: SRoutableElement): RoutedPoint[] {\n        if (!edge.source || !edge.target)\n            return [];\n        const routedCorners = this.createRoutedCorners(edge);\n        const sourceRefPoint = routedCorners[0]\n            || translatePoint(Bounds.center(edge.target.bounds), edge.target.parent, edge.parent);\n        const sourceAnchor = this.getTranslatedAnchor(edge.source, sourceRefPoint, edge.parent, edge, edge.sourceAnchorCorrection);\n        const targetRefPoint = routedCorners[routedCorners.length - 1]\n            || translatePoint(Bounds.center(edge.source.bounds), edge.source.parent, edge.parent);\n        const targetAnchor = this.getTranslatedAnchor(edge.target, targetRefPoint, edge.parent, edge, edge.targetAnchorCorrection);\n        if (!sourceAnchor || !targetAnchor)\n            return [];\n        const routedPoints: RoutedPoint[] = [];\n        routedPoints.push({ kind: 'source', ...sourceAnchor});\n        routedCorners.forEach(corner => routedPoints.push(corner));\n        routedPoints.push({ kind: 'target', ...targetAnchor});\n        return routedPoints;\n    }\n\n    protected createRoutedCorners(edge: SRoutableElement): RoutedPoint[] {\n        const sourceAnchors = new DefaultAnchors(edge.source!, edge.parent, 'source');\n        const targetAnchors = new DefaultAnchors(edge.target!, edge.parent, 'target');\n        if (edge.routingPoints.length > 0) {\n            const routingPointsCopy = edge.routingPoints.slice();\n            this.cleanupRoutingPoints(edge, routingPointsCopy, false, true);\n            if (routingPointsCopy.length > 0)\n                return routingPointsCopy.map((routingPoint, index) => {\n                    return <RoutedPoint> { kind: 'linear', pointIndex: index, ...routingPoint};\n                });\n        }\n        const options = this.getOptions(edge);\n        const corners = this.calculateDefaultCorners(edge, sourceAnchors, targetAnchors, options);\n        return corners.map(corner => {\n            return <RoutedPoint> { kind: 'linear', ...corner };\n        });\n    }\n\n    createRoutingHandles(edge: SRoutableElement) {\n        const routedPoints = this.route(edge);\n        this.commitRoute(edge, routedPoints);\n        if (routedPoints.length > 0) {\n            this.addHandle(edge, 'source', 'routing-point', -2);\n            for (let i = 0; i < routedPoints.length - 1; ++i)\n                this.addHandle(edge, 'manhattan-50%', 'volatile-routing-point', i - 1);\n            this.addHandle(edge, 'target', 'routing-point', routedPoints.length - 2);\n        }\n    }\n\n    protected getInnerHandlePosition(edge: SRoutableElement, route: RoutedPoint[], handle: SRoutingHandle) {\n        const fraction = this.getFraction(handle.kind);\n        if (fraction !== undefined) {\n            const { start, end } = this.findRouteSegment(edge, route, handle.pointIndex);\n            if (start !== undefined && end !== undefined)\n                return Point.linear(start, end, fraction);\n        }\n        return undefined;\n    }\n\n    protected getFraction(kind: RoutingHandleKind): number | undefined {\n        switch (kind) {\n            case 'manhattan-50%': return 0.5;\n            default: return undefined;\n        }\n    }\n\n    protected applyInnerHandleMoves(edge: SRoutableElement, moves: ResolvedHandleMove[]) {\n        const route = this.route(edge);\n        const routingPoints = edge.routingPoints;\n        const minimalPointDistance = this.getOptions(edge).minimalPointDistance;\n        moves.forEach(move => {\n            const handle = move.handle;\n            const index = handle.pointIndex;\n            const correctedX = this.correctX(routingPoints, index, move.toPosition.x, minimalPointDistance);\n            const correctedY = this.correctY(routingPoints, index, move.toPosition.y, minimalPointDistance);\n            switch (handle.kind) {\n                case 'manhattan-50%':\n                    if (index < 0) {\n                        if (almostEquals(route[0].x, route[1].x))\n                            this.alignX(routingPoints, 0, correctedX);\n                        else\n                            this.alignY(routingPoints, 0, correctedY);\n                    } else if (index < routingPoints.length - 1) {\n                        if (almostEquals(routingPoints[index].x, routingPoints[index + 1].x)) {\n                            this.alignX(routingPoints, index, correctedX);\n                            this.alignX(routingPoints, index + 1, correctedX);\n                        } else {\n                            this.alignY(routingPoints, index, correctedY);\n                            this.alignY(routingPoints, index + 1, correctedY);\n                        }\n                    } else {\n                        if (almostEquals(route[route.length - 2].x, route[route.length - 1].x))\n                            this.alignX(routingPoints, routingPoints.length - 1, correctedX);\n                        else\n                            this.alignY(routingPoints, routingPoints.length - 1, correctedY);\n                    }\n                    break;\n            }\n        });\n    }\n\n    protected correctX(routingPoints: Point[], index: number, x: number, minimalPointDistance: number) {\n        if (index > 0 && Math.abs(x - routingPoints[index - 1].x) < minimalPointDistance)\n            return routingPoints[index - 1].x;\n        else if (index < routingPoints.length - 2 && Math.abs(x - routingPoints[index + 2].x) < minimalPointDistance)\n            return routingPoints[index + 2].x;\n        else\n            return x;\n    }\n\n    protected alignX(routingPoints: Point[], index: number, x: number) {\n        if (index >= 0 && index < routingPoints.length)\n            routingPoints[index] = {\n                x,\n                y: routingPoints[index].y\n            };\n    }\n\n    protected correctY(routingPoints: Point[], index: number, y: number, minimalPointDistance: number) {\n        if (index > 0 && Math.abs(y - routingPoints[index - 1].y) < minimalPointDistance)\n            return routingPoints[index - 1].y;\n        else if (index < routingPoints.length - 2 && Math.abs(y - routingPoints[index + 2].y) < minimalPointDistance)\n            return routingPoints[index + 2].y;\n        else\n            return y;\n    }\n\n    protected alignY(routingPoints: Point[], index: number, y: number) {\n        if (index >= 0 && index < routingPoints.length)\n            routingPoints[index] = {\n                x: routingPoints[index].x,\n                y\n            };\n    }\n\n    override cleanupRoutingPoints(edge: SRoutableElement, routingPoints: Point[], updateHandles: boolean, addRoutingPoints: boolean) {\n        const sourceAnchors = new DefaultAnchors(edge.source!, edge.parent, \"source\");\n        const targetAnchors = new DefaultAnchors(edge.target!, edge.parent, \"target\");\n        if (this.resetRoutingPointsOnReconnect(edge, routingPoints, updateHandles, sourceAnchors, targetAnchors))\n            return;\n        // delete leading RPs inside the bounds of the source\n        for (let i = 0; i < routingPoints.length; ++i)\n            if (Bounds.includes(sourceAnchors.bounds, routingPoints[i])) {\n                routingPoints.splice(0, 1);\n                if (updateHandles) {\n                    this.removeHandle(edge, -1);\n                }\n            } else {\n                break;\n            }\n        // delete trailing RPs inside the bounds of the target\n        for (let i = routingPoints.length - 1; i >= 0; --i)\n            if (Bounds.includes(targetAnchors.bounds, routingPoints[i])) {\n                routingPoints.splice(i, 1);\n                if (updateHandles) {\n                    this.removeHandle(edge, i);\n                }\n            } else {\n                break;\n        }\n        if (routingPoints.length >= 2) {\n            const options = this.getOptions(edge);\n            for (let i = routingPoints.length - 2; i >= 0; --i) {\n                if (Point.manhattanDistance(routingPoints[i], routingPoints[i + 1]) < options.minimalPointDistance) {\n                    routingPoints.splice(i, 2);\n                    --i;\n                    if (updateHandles) {\n                        this.removeHandle(edge, i - 1);\n                        this.removeHandle(edge, i);\n                    }\n                }\n            }\n        }\n        if (addRoutingPoints) {\n            this.addAdditionalCorner(edge, routingPoints, sourceAnchors, targetAnchors, updateHandles);\n            this.addAdditionalCorner(edge, routingPoints, targetAnchors, sourceAnchors, updateHandles);\n            this.manhattanify(edge, routingPoints);\n        }\n    }\n\n    protected removeHandle(edge: SRoutableElement, pointIndex: number) {\n        const toBeRemoved: SRoutingHandle[] = [];\n        edge.children.forEach(child => {\n            if (child instanceof SRoutingHandle) {\n                if (child.pointIndex > pointIndex)\n                    --child.pointIndex;\n                else if (child.pointIndex === pointIndex)\n                    toBeRemoved.push(child);\n            }\n        });\n        toBeRemoved.forEach(child => edge.remove(child));\n    }\n\n    protected addAdditionalCorner(edge: SRoutableElement, routingPoints: Point[], currentAnchors: DefaultAnchors, otherAnchors: DefaultAnchors, updateHandles: boolean) {\n        if (routingPoints.length === 0)\n            return;\n        const refPoint = currentAnchors.kind === 'source' ? routingPoints[0] : routingPoints[routingPoints.length - 1];\n        const index = currentAnchors.kind === 'source' ? 0 : routingPoints.length;\n        const shiftIndex = index - (currentAnchors.kind === 'source' ? 1 : 0);\n        let isHorizontal: boolean;\n        if (routingPoints.length > 1) {\n            isHorizontal = index === 0\n            ? almostEquals(routingPoints[0].x, routingPoints[1].x)\n            : almostEquals(routingPoints[routingPoints.length - 1].x, routingPoints[routingPoints.length - 2].x);\n        } else {\n            const nearestSide = otherAnchors.getNearestSide(refPoint);\n            isHorizontal = nearestSide === Side.TOP || nearestSide === Side.BOTTOM;\n        }\n        if (isHorizontal) {\n            if (refPoint.y < currentAnchors.get(Side.TOP).y || refPoint.y > currentAnchors.get(Side.BOTTOM).y) {\n                const newPoint = { x: currentAnchors.get(Side.TOP).x, y: refPoint.y };\n                routingPoints.splice(index, 0, newPoint);\n                if (updateHandles) {\n                    edge.children.forEach(child => {\n                        if (child instanceof SRoutingHandle && child.pointIndex >= shiftIndex)\n                            ++child.pointIndex;\n                    });\n                    this.addHandle(edge, 'manhattan-50%', 'volatile-routing-point', shiftIndex);\n                }\n            }\n        } else {\n            if (refPoint.x < currentAnchors.get(Side.LEFT).x || refPoint.x > currentAnchors.get(Side.RIGHT).x) {\n                const newPoint = { x: refPoint.x, y: currentAnchors.get(Side.LEFT).y };\n                routingPoints.splice(index, 0, newPoint);\n                if (updateHandles) {\n                    edge.children.forEach(child => {\n                        if (child instanceof SRoutingHandle && child.pointIndex >= shiftIndex)\n                            ++child.pointIndex;\n                    });\n                    this.addHandle(edge, 'manhattan-50%', 'volatile-routing-point', shiftIndex);\n                }\n            }\n        }\n    }\n\n    /**\n     * Add artificial routing points to keep all angles rectilinear.\n     *\n     * This makes edge morphing look a lot smoother, where RP positions are interpolated\n     * linearly probably resulting in non-rectilinear angles. We don't add handles for\n     * these additional RPs.\n     */\n    protected manhattanify(edge: SRoutableElement, routingPoints: Point[]) {\n        for (let i = 1; i < routingPoints.length; ++i) {\n            const isVertical = Math.abs(routingPoints[i - 1].x - routingPoints[i].x) < 1;\n            const isHorizontal = Math.abs(routingPoints[i - 1].y - routingPoints[i].y) < 1;\n            if (!isVertical && !isHorizontal) {\n                routingPoints.splice(i, 0, {\n                    x: routingPoints[i - 1].x,\n                    y: routingPoints[i].y\n                });\n                ++i;\n            }\n        }\n    }\n\n    protected override calculateDefaultCorners(edge: SRoutableElement, sourceAnchors: DefaultAnchors, targetAnchors: DefaultAnchors, options: ManhattanRouterOptions): Point[] {\n        const selfEdge = super.calculateDefaultCorners(edge, sourceAnchors, targetAnchors, options);\n        if (selfEdge.length > 0)\n            return selfEdge;\n        const bestAnchors = this.getBestConnectionAnchors(edge, sourceAnchors, targetAnchors, options);\n        const sourceSide = bestAnchors.source;\n        const targetSide = bestAnchors.target;\n        const corners: Point[] = [];\n        const startPoint = sourceAnchors.get(sourceSide);\n        let endPoint = targetAnchors.get(targetSide);\n        switch (sourceSide) {\n            case Side.RIGHT:\n                switch (targetSide) {\n                    case Side.BOTTOM:\n                        corners.push({ x: endPoint.x, y: startPoint.y });\n                        break;\n                    case Side.TOP:\n                        corners.push({ x: endPoint.x, y: startPoint.y });\n                        break;\n                    case Side.RIGHT:\n                        corners.push({ x: Math.max(startPoint.x, endPoint.x) + 1.5 * options.standardDistance, y: startPoint.y });\n                        corners.push({ x: Math.max(startPoint.x, endPoint.x) + 1.5 * options.standardDistance, y: endPoint.y });\n                        break;\n                    case Side.LEFT:\n                        if (endPoint.y !== startPoint.y) {\n                            corners.push({ x: (startPoint.x + endPoint.x) / 2, y: startPoint.y });\n                            corners.push({ x: (startPoint.x + endPoint.x) / 2, y: endPoint.y });\n                        }\n                        break;\n                }\n                break;\n            case Side.LEFT:\n                switch (targetSide) {\n                    case Side.BOTTOM:\n                        corners.push({ x: endPoint.x, y: startPoint.y });\n                        break;\n                    case Side.TOP:\n                        corners.push({ x: endPoint.x, y: startPoint.y });\n                        break;\n                    default:\n                        endPoint = targetAnchors.get(Side.RIGHT);\n                        if (endPoint.y !== startPoint.y) {\n                            corners.push({ x: (startPoint.x + endPoint.x) / 2, y: startPoint.y });\n                            corners.push({ x: (startPoint.x + endPoint.x) / 2, y: endPoint.y });\n                        }\n                        break;\n                }\n                break;\n            case Side.TOP:\n                switch (targetSide) {\n                    case Side.RIGHT:\n                        if ((endPoint.x - startPoint.x) > 0) {\n                            corners.push({ x: startPoint.x, y: startPoint.y - options.standardDistance });\n                            corners.push({ x: endPoint.x + 1.5 * options.standardDistance, y: startPoint.y - options.standardDistance });\n                            corners.push({ x: endPoint.x + 1.5 * options.standardDistance, y: endPoint.y });\n                        } else {\n                            corners.push({ x: startPoint.x, y: endPoint.y });\n                        }\n                        break;\n                    case Side.LEFT:\n                        if ((endPoint.x - startPoint.x) < 0) {\n                            corners.push({ x: startPoint.x, y: startPoint.y - options.standardDistance });\n                            corners.push({ x: endPoint.x - 1.5 * options.standardDistance, y: startPoint.y - options.standardDistance });\n                            corners.push({ x: endPoint.x - 1.5 * options.standardDistance, y: endPoint.y });\n                        } else {\n                            corners.push({ x: startPoint.x, y: endPoint.y });\n                        }\n                        break;\n                    case Side.TOP:\n                        corners.push({ x: startPoint.x, y: Math.min(startPoint.y, endPoint.y) - 1.5 * options.standardDistance });\n                        corners.push({ x: endPoint.x, y: Math.min(startPoint.y, endPoint.y) - 1.5 * options.standardDistance });\n                        break;\n                    case Side.BOTTOM:\n                        if (endPoint.x !== startPoint.x) {\n                            corners.push({ x: startPoint.x, y: (startPoint.y + endPoint.y) / 2 });\n                            corners.push({ x: endPoint.x, y: (startPoint.y + endPoint.y) / 2 });\n                        }\n                        break;\n                }\n                break;\n            case Side.BOTTOM:\n                switch (targetSide) {\n                    case Side.RIGHT:\n                        if ((endPoint.x - startPoint.x) > 0) {\n                            corners.push({ x: startPoint.x, y: startPoint.y + options.standardDistance });\n                            corners.push({ x: endPoint.x + 1.5 * options.standardDistance, y: startPoint.y + options.standardDistance });\n                            corners.push({ x: endPoint.x + 1.5 * options.standardDistance, y: endPoint.y });\n                        } else {\n                            corners.push({ x: startPoint.x, y: endPoint.y });\n                        }\n                        break;\n                    case Side.LEFT:\n                        if ((endPoint.x - startPoint.x) < 0) {\n                            corners.push({ x: startPoint.x, y: startPoint.y + options.standardDistance });\n                            corners.push({ x: endPoint.x - 1.5 * options.standardDistance, y: startPoint.y + options.standardDistance });\n                            corners.push({ x: endPoint.x - 1.5 * options.standardDistance, y: endPoint.y });\n                        } else {\n                            corners.push({ x: startPoint.x, y: endPoint.y });\n                        }\n                        break;\n                    default:\n                        endPoint = targetAnchors.get(Side.TOP);\n                        if (endPoint.x !== startPoint.x) {\n                            corners.push({ x: startPoint.x, y: (startPoint.y + endPoint.y) / 2 });\n                            corners.push({ x: endPoint.x, y: (startPoint.y + endPoint.y) / 2 });\n                        }\n                        break;\n                }\n                break;\n        }\n        return corners;\n    }\n\n    protected getBestConnectionAnchors(edge: SRoutableElement,\n                                        sourceAnchors: DefaultAnchors, targetAnchors: DefaultAnchors,\n                                        options: ManhattanRouterOptions): { source: Side, target: Side } {\n        // distance is enough\n        let sourcePoint = sourceAnchors.get(Side.RIGHT);\n        let targetPoint = targetAnchors.get(Side.LEFT);\n        if ((targetPoint.x - sourcePoint.x) > options.standardDistance)\n            return { source: Side.RIGHT, target: Side.LEFT };\n\n        sourcePoint = sourceAnchors.get(Side.LEFT);\n        targetPoint = targetAnchors.get(Side.RIGHT);\n        if ((sourcePoint.x - targetPoint.x) > options.standardDistance)\n            return { source: Side.LEFT, target: Side.RIGHT };\n\n        sourcePoint = sourceAnchors.get(Side.TOP);\n        targetPoint = targetAnchors.get(Side.BOTTOM);\n        if ((sourcePoint.y - targetPoint.y) > options.standardDistance)\n            return { source: Side.TOP, target: Side.BOTTOM };\n\n        sourcePoint = sourceAnchors.get(Side.BOTTOM);\n        targetPoint = targetAnchors.get(Side.TOP);\n        if ((targetPoint.y - sourcePoint.y) > options.standardDistance)\n            return { source: Side.BOTTOM, target: Side.TOP };\n\n        // One additional point\n        sourcePoint = sourceAnchors.get(Side.RIGHT);\n        targetPoint = targetAnchors.get(Side.TOP);\n        if (((targetPoint.x - sourcePoint.x) > 0.5 * options.standardDistance) && ((targetPoint.y - sourcePoint.y) > options.standardDistance))\n            return { source: Side.RIGHT, target: Side.TOP };\n\n        targetPoint = targetAnchors.get(Side.BOTTOM);\n        if (((targetPoint.x - sourcePoint.x) > 0.5 * options.standardDistance) && ((sourcePoint.y - targetPoint.y) > options.standardDistance))\n            return { source: Side.RIGHT, target: Side.BOTTOM };\n\n        sourcePoint = sourceAnchors.get(Side.LEFT);\n        targetPoint = targetAnchors.get(Side.BOTTOM);\n        if (((sourcePoint.x - targetPoint.x) > 0.5 * options.standardDistance) && ((sourcePoint.y - targetPoint.y) > options.standardDistance))\n            return { source: Side.LEFT, target: Side.BOTTOM };\n\n        targetPoint = targetAnchors.get(Side.TOP);\n        if (((sourcePoint.x - targetPoint.x) > 0.5 * options.standardDistance) && ((targetPoint.y - sourcePoint.y) > options.standardDistance))\n            return { source: Side.LEFT, target: Side.TOP };\n\n        sourcePoint = sourceAnchors.get(Side.TOP);\n        targetPoint = targetAnchors.get(Side.RIGHT);\n        if (((sourcePoint.y - targetPoint.y) > 0.5 * options.standardDistance) && ((sourcePoint.x - targetPoint.x) > options.standardDistance))\n            return { source: Side.TOP, target: Side.RIGHT };\n\n        targetPoint = targetAnchors.get(Side.LEFT);\n        if (((sourcePoint.y - targetPoint.y) > 0.5 * options.standardDistance) && ((targetPoint.x - sourcePoint.x) > options.standardDistance))\n            return { source: Side.TOP, target: Side.LEFT };\n\n        sourcePoint = sourceAnchors.get(Side.BOTTOM);\n        targetPoint = targetAnchors.get(Side.RIGHT);\n        if (((targetPoint.y - sourcePoint.y) > 0.5 * options.standardDistance) && ((sourcePoint.x - targetPoint.x) > options.standardDistance))\n            return { source: Side.BOTTOM, target: Side.RIGHT };\n\n        targetPoint = targetAnchors.get(Side.LEFT);\n        if (((targetPoint.y - sourcePoint.y) > 0.5 * options.standardDistance) && ((targetPoint.x - sourcePoint.x) > options.standardDistance))\n            return { source: Side.BOTTOM, target: Side.LEFT };\n\n        // Two points\n        // priority NN >> EE >> NE >> NW >> SE >> SW\n        sourcePoint = sourceAnchors.get(Side.TOP);\n        targetPoint = targetAnchors.get(Side.TOP);\n        if (!Bounds.includes(targetAnchors.bounds, sourcePoint) && !Bounds.includes(sourceAnchors.bounds, targetPoint)) {\n            if ((sourcePoint.y - targetPoint.y) < 0) {\n                if (Math.abs(sourcePoint.x - targetPoint.x) > ((sourceAnchors.bounds.width + options.standardDistance) / 2))\n                    return { source: Side.TOP, target: Side.TOP };\n            } else {\n                if (Math.abs(sourcePoint.x - targetPoint.x) > (targetAnchors.bounds.width / 2))\n                    return { source: Side.TOP, target: Side.TOP };\n            }\n        }\n\n        sourcePoint = sourceAnchors.get(Side.RIGHT);\n        targetPoint = targetAnchors.get(Side.RIGHT);\n        if (!Bounds.includes(targetAnchors.bounds, sourcePoint) && !Bounds.includes(sourceAnchors.bounds, targetPoint)) {\n            if ((sourcePoint.x - targetPoint.x) > 0) {\n                if (Math.abs(sourcePoint.y - targetPoint.y) > ((sourceAnchors.bounds.height + options.standardDistance) / 2))\n                    return { source: Side.RIGHT, target: Side.RIGHT };\n            } else if (Math.abs(sourcePoint.y - targetPoint.y) > (targetAnchors.bounds.height / 2))\n                return { source: Side.RIGHT, target: Side.RIGHT };\n        }\n\n        // Secondly, judge NE NW is available\n        sourcePoint = sourceAnchors.get(Side.TOP);\n        targetPoint = targetAnchors.get(Side.RIGHT);\n        if (!Bounds.includes(targetAnchors.bounds, sourcePoint) && !Bounds.includes(sourceAnchors.bounds, targetPoint))\n            return { source: Side.TOP, target: Side.RIGHT };\n\n        targetPoint = targetAnchors.get(Side.LEFT);\n        if (!Bounds.includes(targetAnchors.bounds, sourcePoint) && !Bounds.includes(sourceAnchors.bounds, targetPoint))\n            return { source: Side.TOP, target: Side.LEFT };\n\n        // Finally, judge SE SW is available\n        sourcePoint = sourceAnchors.get(Side.BOTTOM);\n        targetPoint = targetAnchors.get(Side.RIGHT);\n        if (!Bounds.includes(targetAnchors.bounds, sourcePoint) && !Bounds.includes(sourceAnchors.bounds, targetPoint))\n            return { source: Side.BOTTOM, target: Side.RIGHT };\n\n        targetPoint = targetAnchors.get(Side.LEFT);\n        if (!Bounds.includes(targetAnchors.bounds, sourcePoint) && !Bounds.includes(sourceAnchors.bounds, targetPoint))\n            return { source: Side.BOTTOM, target: Side.LEFT };\n\n        // Only to return to the\n        return { source: Side.RIGHT, target: Side.BOTTOM };\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Bounds, Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { Line, PointToPointLine, intersection } from \"../../utils/geometry\";\nimport { RECTANGULAR_ANCHOR_KIND, IAnchorComputer, DIAMOND_ANCHOR_KIND, ELLIPTIC_ANCHOR_KIND } from \"./anchor\";\nimport { ManhattanEdgeRouter } from \"./manhattan-edge-router\";\nimport { SConnectableElement } from \"./model\";\nimport { injectable } from \"inversify\";\n\n@injectable()\nexport class ManhattanRectangularAnchor implements IAnchorComputer {\n\n    static KIND = ManhattanEdgeRouter.KIND + ':' + RECTANGULAR_ANCHOR_KIND;\n\n    get kind() {\n        return ManhattanRectangularAnchor.KIND;\n    }\n\n    getAnchor(connectable: SConnectableElement, refPoint: Point, offset: number): Point {\n        const b = connectable.bounds;\n        if (b.width <= 0 || b.height <= 0) {\n            return b;\n        }\n        const bounds: Bounds = {\n            x: b.x - offset,\n            y: b.y - offset,\n            width: b.width + 2 * offset,\n            height: b.height + 2 * offset\n        };\n        if (refPoint.x >= bounds.x && bounds.x + bounds.width >= refPoint.x) {\n            if (refPoint.y < bounds.y + 0.5 * bounds.height)\n            return { x: refPoint.x, y: bounds.y };\n            else\n            return { x: refPoint.x, y: bounds.y + bounds.height };\n        }\n        if (refPoint.y >= bounds.y && bounds.y + bounds.height >= refPoint.y) {\n            if (refPoint.x < bounds.x + 0.5 * bounds.width)\n            return { x: bounds.x, y: refPoint.y };\n            else\n            return { x: bounds.x + bounds.width, y: refPoint.y };\n        }\n        return Bounds.center(bounds);\n    }\n}\n\n@injectable()\nexport class ManhattanDiamondAnchor implements IAnchorComputer {\n\n    static KIND = ManhattanEdgeRouter.KIND + ':' + DIAMOND_ANCHOR_KIND;\n\n    get kind() {\n        return ManhattanDiamondAnchor.KIND;\n    }\n\n    getAnchor(connectable: SConnectableElement, refPoint: Point, offset: number = 0): Point {\n        const b = connectable.bounds;\n        if (b.width <= 0 || b.height <= 0) {\n            return b;\n        }\n        const bounds = {\n            x: b.x - offset,\n            y: b.y - offset,\n            width: b.width + 2 * offset,\n            height: b.height + 2 * offset\n        };\n        const c = Bounds.center(bounds);\n\n        let outline: Line | undefined = undefined;\n        let refLine: Line | undefined = undefined;\n        if (refPoint.x >= bounds.x && refPoint.x <= bounds.x + bounds.width) {\n            if (bounds.x + 0.5 * bounds.width >= refPoint.x) {\n                refLine = new PointToPointLine(refPoint, { x: refPoint.x, y: c.y });\n                if (refPoint.y < c.y)\n                    outline = new PointToPointLine({ x: bounds.x, y: c.y }, { x: c.x, y: bounds.y });\n                else\n                    outline = new PointToPointLine({ x: bounds.x, y: c.y }, { x: c.x, y: bounds.y + bounds.height });\n            } else {\n                refLine = new PointToPointLine(refPoint, { x: refPoint.x, y: c.y });\n                if (refPoint.y < c.y)\n                    outline = new PointToPointLine({ x: bounds.x + bounds.width, y: c.y }, { x: c.x, y: bounds.y });\n                else\n                    outline = new PointToPointLine({ x: bounds.x + bounds.width, y: c.y }, { x: c.x, y: bounds.y + bounds.height });\n            }\n        } else if (refPoint.y >= bounds.y && refPoint.y <= bounds.y + bounds.height) {\n            if (bounds.y + 0.5 * bounds.height >= refPoint.y) {\n                refLine = new PointToPointLine(refPoint, { x: c.x , y: refPoint.y });\n                if (refPoint.x < c.x)\n                    outline = new PointToPointLine({ x: bounds.x, y: c.y }, { x: c.x, y: bounds.y });\n                else\n                    outline = new PointToPointLine({ x: bounds.x + bounds.width, y: c.y }, { x: c.x, y: bounds.y });\n            } else {\n                refLine = new PointToPointLine(refPoint, { x: c.x , y: refPoint.y });\n                if (refPoint.x < c.x)\n                    outline = new PointToPointLine({ x: bounds.x, y: c.y }, { x: c.x, y: bounds.y + bounds.height });\n                else\n                    outline = new PointToPointLine({ x: bounds.x + bounds.width, y: c.y }, { x: c.x, y: bounds.y + bounds.height });\n            }\n        }\n        if (!!refLine && !!outline)\n            return intersection(outline, refLine);\n        else\n            return c;\n    }\n}\n\n@injectable()\nexport class ManhattanEllipticAnchor implements IAnchorComputer {\n\n    static KIND = ManhattanEdgeRouter.KIND + ':' + ELLIPTIC_ANCHOR_KIND;\n\n    get kind() {\n        return ManhattanEllipticAnchor.KIND;\n    }\n\n    getAnchor(connectable: SConnectableElement, refPoint: Point, offset: number = 0): Point {\n        const b = connectable.bounds;\n        if (b.width <= 0 || b.height <= 0) {\n            return b;\n        }\n        const bounds = {\n            x: b.x - offset,\n            y: b.y - offset,\n            width: b.width + 2 * offset,\n            height: b.height + 2 * offset\n        };\n        const c = Bounds.center(bounds);\n        const refRelative = Point.subtract(refPoint, c);\n        let x = c.x;\n        let y = c.y;\n        if (refPoint.x >= bounds.x && bounds.x + bounds.width >= refPoint.x) {\n            x += refRelative.x;\n            const dy = 0.5 * bounds.height * Math.sqrt(1 - (refRelative.x * refRelative.x) / (0.25 * bounds.width * bounds.width));\n            if (refRelative.y < 0)\n                y -= dy;\n            else\n                y += dy;\n        } else if (refPoint.y >= bounds.y && bounds.y + bounds.height >= refPoint.y) {\n            y += refRelative.y;\n            const dx = 0.5 * bounds.width * Math.sqrt(1 - (refRelative.y * refRelative.y) / (0.25 * bounds.height * bounds.height));\n            if (refRelative.x < 0)\n                x -= dx;\n            else\n                x += dx;\n        }\n        return { x, y };\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { VNode } from 'snabbdom';\nimport { Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { IViewArgs, IView, RenderingContext } from '../../base/views/view';\nimport { SRoutableElement, getAbsoluteRouteBounds } from './model';\n\n@injectable()\nexport abstract class RoutableView implements IView {\n    /**\n     * Check whether the given model element is in the current viewport. Use this method\n     * in your `render` implementation to skip rendering in case the element is not visible.\n     * This can greatly enhance performance for large models.\n     */\n    isVisible(model: Readonly<SRoutableElement>, route: Point[], context: RenderingContext): boolean {\n        if (context.targetKind === 'hidden') {\n            // Don't hide any element for hidden rendering\n            return true;\n        }\n        if (route.length === 0) {\n            // We should hide only if we know the element's route\n            return true;\n        }\n        const ab = getAbsoluteRouteBounds(model, route);\n        const canvasBounds = model.root.canvasBounds;\n        return ab.x <= canvasBounds.width\n            && ab.x + ab.width >= 0\n            && ab.y <= canvasBounds.height\n            && ab.y + ab.height >= 0;\n    }\n\n    abstract render(model: Readonly<SRoutableElement>, context: RenderingContext, args?: IViewArgs): VNode | undefined;\n}\n", "/********************************************************************************\n * Copyright (c) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from \"inversify\";\nimport { ResponseAction } from \"sprotty-protocol/lib/actions\";\nimport { TYPES } from \"../types\";\nimport { SystemCommand, CommandExecutionContext, CommandReturn } from \"./command\";\nimport { IActionDispatcher } from \"../actions/action-dispatcher\";\n\n/**\n * A command that does not modify the internal model, but retrieves information\n * from it by dispatching a response action.\n */\n@injectable()\nexport abstract class ModelRequestCommand extends SystemCommand {\n\n    @inject(TYPES.IActionDispatcher) protected actionDispatcher: IActionDispatcher;\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        const result = this.retrieveResult(context);\n        this.actionDispatcher.dispatch(result);\n        return { model: context.root, modelChanged: false };\n    }\n\n    protected abstract retrieveResult(context: CommandExecutionContext): ResponseAction;\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        return { model: context.root, modelChanged: false };\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        return { model: context.root, modelChanged: false };\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, optional } from 'inversify';\nimport { VNode } from 'snabbdom';\nimport {\n    Action, BringToFrontAction, generateRequestId, RequestAction, ResponseAction, SelectAction as ProtocolSelectAction,\n    SelectAllAction as ProtocolSelectAllActon\n} from 'sprotty-protocol/lib/actions';\nimport { Command, CommandExecutionContext } from '../../base/commands/command';\nimport { ModelRequestCommand } from '../../base/commands/request-command';\nimport { SChildElement, SModelElement, SModelRoot, SParentElement } from '../../base/model/smodel';\nimport { findParentByFeature } from '../../base/model/smodel-utils';\nimport { TYPES } from '../../base/types';\nimport { KeyListener } from '../../base/views/key-tool';\nimport { MouseListener } from '../../base/views/mouse-tool';\nimport { setClass } from '../../base/views/vnode-utils';\nimport { isCtrlOrCmd } from '../../utils/browser';\nimport { toArray } from '../../utils/iterable';\nimport { matchesKeystroke } from '../../utils/keyboard';\nimport { ButtonHandlerRegistry } from '../button/button-handler';\nimport { SButton } from '../button/model';\nimport { SwitchEditModeAction } from '../edit/edit-routing';\nimport { SRoutingHandle } from '../routing/model';\nimport { SRoutableElement } from '../routing/model';\nimport { isSelectable, Selectable } from './model';\n\n/**\n * Triggered when the user changes the selection, e.g. by clicking on a selectable element. The resulting\n * SelectCommand changes the `selected` state accordingly, so the elements can be rendered differently.\n * This action is also forwarded to the diagram server, if present, so it may react on the selection change.\n * Furthermore, the server can send such an action to the client in order to change the selection programmatically.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport class SelectAction implements Action, ProtocolSelectAction {\n    static readonly KIND = 'elementSelected';\n    readonly kind = SelectAction.KIND;\n\n    constructor(public readonly selectedElementsIDs: string[] = [],\n        public readonly deselectedElementsIDs: string[] = []) {\n    }\n}\n\n/**\n * Programmatic action for selecting or deselecting all elements.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport class SelectAllAction implements Action, ProtocolSelectAllActon {\n    static readonly KIND = 'allSelected';\n    readonly kind = SelectAllAction.KIND;\n\n    /**\n     * If `select` is true, all elements are selected, otherwise they are deselected.\n     */\n    constructor(public readonly select: boolean = true) {\n    }\n}\n\n/**\n * Request action for retrieving the current selection.\n */\nexport interface GetSelectionAction extends RequestAction<SelectionResult> {\n    kind: typeof GetSelectionAction.KIND\n}\nexport namespace GetSelectionAction {\n    export const KIND = 'getSelection';\n\n    export function create(): GetSelectionAction {\n        return {\n            kind: KIND,\n            requestId: generateRequestId()\n        };\n    }\n}\n\nexport interface SelectionResult extends ResponseAction {\n    kind: typeof SelectionResult.KIND\n    selectedElementsIDs: string[]\n}\nexport namespace SelectionResult {\n    export const KIND = 'selectionResult';\n\n    export function create(selectedElementsIDs: string[], requestId: string): SelectionResult {\n        return {\n            kind: KIND,\n            selectedElementsIDs,\n            responseId: requestId\n        };\n    }\n}\n\n@injectable()\nexport class SelectCommand extends Command {\n    static readonly KIND = ProtocolSelectAction.KIND;\n\n    protected selected: (SChildElement & Selectable)[] = [];\n    protected deselected: (SChildElement & Selectable)[] = [];\n\n    constructor(@inject(TYPES.Action) public action: ProtocolSelectAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): SModelRoot {\n        const model = context.root;\n        this.action.selectedElementsIDs.forEach(id => {\n            const element = model.index.getById(id);\n            if (element instanceof SChildElement && isSelectable(element)) {\n                this.selected.push(element);\n            }\n        });\n        this.action.deselectedElementsIDs.forEach(id => {\n            const element = model.index.getById(id);\n            if (element instanceof SChildElement && isSelectable(element)) {\n                this.deselected.push(element);\n            }\n        });\n        return this.redo(context);\n    }\n\n    undo(context: CommandExecutionContext): SModelRoot {\n        for (const element of this.selected) {\n            element.selected = false;\n        }\n        for (const element of this.deselected) {\n            element.selected = true;\n        }\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): SModelRoot {\n        for (const element of this.deselected) {\n            element.selected = false;\n        }\n        for (const element of this.selected) {\n            element.selected = true;\n        }\n        return context.root;\n    }\n}\n\n@injectable()\nexport class SelectAllCommand extends Command {\n    static readonly KIND = ProtocolSelectAllActon.KIND;\n\n    protected previousSelection: Record<string, boolean> = {};\n\n    constructor(@inject(TYPES.Action) protected readonly action: ProtocolSelectAllActon) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): SModelRoot {\n        this.selectAll(context.root, this.action.select);\n        return context.root;\n    }\n\n    protected selectAll(element: SParentElement, newState: boolean): void {\n        if (isSelectable(element)) {\n            this.previousSelection[element.id] = element.selected;\n            element.selected = newState;\n        }\n        for (const child of element.children) {\n            this.selectAll(child, newState);\n        }\n    }\n\n    undo(context: CommandExecutionContext): SModelRoot {\n        const index = context.root.index;\n        Object.keys(this.previousSelection).forEach(id => {\n            const element = index.getById(id);\n            if (element !== undefined && isSelectable(element))\n                element.selected = this.previousSelection[id];\n        });\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): SModelRoot {\n        this.selectAll(context.root, this.action.select);\n        return context.root;\n    }\n}\n\nexport class SelectMouseListener extends MouseListener {\n\n    @inject(ButtonHandlerRegistry) @optional() protected buttonHandlerRegistry: ButtonHandlerRegistry;\n\n    wasSelected = false;\n    hasDragged = false;\n\n    override mouseDown(target: SModelElement, event: MouseEvent): (Action | Promise<Action>)[] {\n        if (event.button !== 0) {\n            return [];\n        }\n        const buttonHandled = this.handleButton(target, event);\n        if (buttonHandled) {\n            return buttonHandled;\n        }\n        const selectableTarget = findParentByFeature(target, isSelectable);\n        if (selectableTarget !== undefined || target instanceof SModelRoot) {\n            this.hasDragged = false;\n            let deselectedElements: SModelElement[] = [];\n            // multi-selection?\n            if (!isCtrlOrCmd(event)) {\n                deselectedElements = toArray(target.root.index.all()\n                    .filter(element => isSelectable(element) && element.selected\n                        && !(selectableTarget instanceof SRoutingHandle && element === selectableTarget.parent as SModelElement)));\n            }\n            if (selectableTarget !== undefined) {\n                if (!selectableTarget.selected) {\n                    this.wasSelected = false;\n                    return this.handleSelectTarget(selectableTarget, deselectedElements, event);\n                } else if (isCtrlOrCmd(event)) {\n                    this.wasSelected = false;\n                    return this.handleDeselectTarget(selectableTarget, event);\n                } else {\n                    this.wasSelected = true;\n                }\n            } else {\n                return this.handleDeselectAll(deselectedElements, event);\n            }\n        }\n        return [];\n    }\n\n    protected handleButton(target: SModelElement, event: MouseEvent): (Action | Promise<Action>)[] | undefined {\n        if (this.buttonHandlerRegistry !== undefined && target instanceof SButton && target.enabled) {\n            const buttonHandler = this.buttonHandlerRegistry.get(target.type);\n            if (buttonHandler !== undefined) {\n                return buttonHandler.buttonPressed(target);\n            }\n        }\n        return undefined;\n    }\n\n    protected handleSelectTarget(selectableTarget: SModelElement & Selectable, deselectedElements: SModelElement[], event: MouseEvent): (Action | Promise<Action>)[] {\n        const result: Action[] = [];\n        result.push(new SelectAction([selectableTarget.id], deselectedElements.map(e => e.id)));\n        result.push(BringToFrontAction.create([selectableTarget.id]));\n        const routableDeselect = deselectedElements.filter(e => e instanceof SRoutableElement).map(e => e.id);\n        if (selectableTarget instanceof SRoutableElement) {\n            result.push(SwitchEditModeAction.create({ elementsToActivate: [selectableTarget.id], elementsToDeactivate: routableDeselect }));\n        } else if (routableDeselect.length > 0) {\n            result.push(SwitchEditModeAction.create({ elementsToDeactivate: routableDeselect }));\n        }\n        return result;\n    }\n\n    protected handleDeselectTarget(selectableTarget: SModelElement & Selectable, event: MouseEvent): (Action | Promise<Action>)[] {\n        const result: Action[] = [];\n        result.push(new SelectAction([], [selectableTarget.id]));\n        if (selectableTarget instanceof SRoutableElement) {\n            result.push(SwitchEditModeAction.create({ elementsToDeactivate: [selectableTarget.id] }));\n        }\n        return result;\n    }\n\n    protected handleDeselectAll(deselectedElements: SModelElement[], event: MouseEvent): (Action | Promise<Action>)[] {\n        const result: Action[] = [];\n        result.push(new SelectAction([], deselectedElements.map(e => e.id)));\n        const routableDeselect = deselectedElements.filter(e => e instanceof SRoutableElement).map(e => e.id);\n        if (routableDeselect.length > 0) {\n            result.push(SwitchEditModeAction.create({ elementsToDeactivate: routableDeselect }));\n        }\n        return result;\n    }\n\n    override mouseMove(target: SModelElement, event: MouseEvent): Action[] {\n        this.hasDragged = true;\n        return [];\n    }\n\n    override mouseUp(target: SModelElement, event: MouseEvent): Action[] {\n        if (event.button === 0) {\n            if (!this.hasDragged) {\n                const selectableTarget = findParentByFeature(target, isSelectable);\n                if (selectableTarget !== undefined && this.wasSelected) {\n                    return [new SelectAction([selectableTarget.id], [])];\n                }\n            }\n        }\n        this.hasDragged = false;\n        return [];\n    }\n\n    override decorate(vnode: VNode, element: SModelElement): VNode {\n        const selectableTarget = findParentByFeature(element, isSelectable);\n        if (selectableTarget !== undefined) {\n            setClass(vnode, 'selected', selectableTarget.selected);\n        }\n        return vnode;\n    }\n}\n\n@injectable()\nexport class GetSelectionCommand extends ModelRequestCommand {\n    static readonly KIND = GetSelectionAction.KIND;\n\n    protected previousSelection: Record<string, boolean> = {};\n\n    constructor(@inject(TYPES.Action) protected readonly action: GetSelectionAction) {\n        super();\n    }\n\n    protected retrieveResult(context: CommandExecutionContext): ResponseAction {\n        const selection = context.root.index.all()\n            .filter(e => isSelectable(e) && e.selected)\n            .map(e => e.id);\n        return SelectionResult.create(toArray(selection), this.action.requestId);\n    }\n\n}\n\nexport class SelectKeyboardListener extends KeyListener {\n    override keyDown(element: SModelElement, event: KeyboardEvent): Action[] {\n        if (matchesKeystroke(event, 'KeyA', 'ctrlCmd')) {\n            return [new SelectAllAction()];\n        }\n        return [];\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Action } from 'sprotty-protocol/lib/actions';\nimport { matchesKeystroke } from '../../utils/keyboard';\nimport { KeyListener } from '../../base/views/key-tool';\nimport { SModelElement } from '../../base/model/smodel';\nimport { isMac } from '../../utils/browser';\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface UndoAction extends Action {\n    kind: typeof UndoAction.KIND;\n}\nexport namespace UndoAction {\n    export const KIND = 'undo';\n\n    export function create(): UndoAction {\n        return {\n            kind: KIND\n        };\n    }\n}\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface RedoAction extends Action {\n    kind: typeof RedoAction.KIND;\n}\nexport namespace RedoAction {\n    export const KIND = 'redo';\n\n    export function create(): RedoAction {\n        return {\n            kind: KIND\n        };\n    }\n}\n\nexport class UndoRedoKeyListener extends KeyListener {\n    override keyDown(element: SModelElement, event: KeyboardEvent): Action[] {\n        if (matchesKeystroke(event, 'KeyZ', 'ctrlCmd'))\n            return [UndoAction.create()];\n        if (matchesKeystroke(event, 'KeyZ', 'ctrlCmd', 'shift') || (!isMac() && matchesKeystroke(event, 'KeyY', 'ctrlCmd')))\n            return [RedoAction.create()];\n        return [];\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SModelElement as SModelElementSchema, SModelRoot as SModelRootSchema } from 'sprotty-protocol/lib/model';\nimport { SModelRoot, SModelElement, isParent, IModelIndex } from '../../base/model/smodel';\nimport { SModelIndex } from 'sprotty-protocol';\n\nexport interface Match {\n    left?: SModelElementSchema\n    right?: SModelElementSchema\n    leftParentId?: string\n    rightParentId?: string\n}\n\nexport interface MatchResult {\n    [id: string]: Match\n}\n\nexport function forEachMatch(matchResult: MatchResult, callback: (id: string, match: Match) => void): void {\n    Object.keys(matchResult).forEach(id => callback(id, matchResult[id]));\n}\n\nexport class ModelMatcher {\n    match(left: SModelRootSchema | SModelRoot, right: SModelRootSchema | SModelRoot): MatchResult {\n        const result: MatchResult = {};\n        this.matchLeft(left, result);\n        this.matchRight(right, result);\n        return result;\n    }\n\n    protected matchLeft(element: SModelElementSchema | SModelElement, result: MatchResult, parentId?: string): void {\n        let match = result[element.id];\n        if (match !== undefined) {\n            match.left = element;\n            match.leftParentId = parentId;\n        } else {\n            match = {\n                left: element,\n                leftParentId: parentId\n            };\n            result[element.id] = match;\n        }\n        if (isParent(element)) {\n            for (const child of element.children) {\n                this.matchLeft(child, result, element.id);\n            }\n        }\n    }\n\n    protected matchRight(element: SModelElementSchema | SModelElement, result: MatchResult, parentId?: string) {\n        let match = result[element.id];\n        if (match !== undefined) {\n            match.right = element;\n            match.rightParentId = parentId;\n        } else {\n            match = {\n                right: element,\n                rightParentId: parentId\n            };\n            result[element.id] = match;\n        }\n        if (isParent(element)) {\n            for (const child of element.children) {\n                this.matchRight(child, result, element.id);\n            }\n        }\n    }\n}\n\nexport function applyMatches(root: SModelRootSchema, matches: Match[], index?: IModelIndex): void {\n    if (root instanceof SModelRoot) {\n        index = root.index;\n    } else if (index === undefined) {\n        index = new SModelIndex();\n        index.add(root);\n    }\n    for (const match of matches) {\n        let newElementInserted = false;\n        if (match.left !== undefined && match.leftParentId !== undefined) {\n            const parent = index.getById(match.leftParentId);\n            if (parent !== undefined && parent.children !== undefined) {\n                const i = parent.children.indexOf(match.left);\n                if (i >= 0) {\n                    if (match.right !== undefined && match.leftParentId === match.rightParentId) {\n                        parent.children.splice(i, 1, match.right);\n                        newElementInserted = true;\n                    } else {\n                        parent.children.splice(i, 1);\n                    }\n                }\n                index.remove(match.left);\n            }\n        }\n        if (!newElementInserted && match.right !== undefined && match.rightParentId !== undefined) {\n            const parent = index.getById(match.rightParentId);\n            if (parent !== undefined) {\n                if (parent.children === undefined)\n                    parent.children = [];\n                parent.children.push(match.right);\n            }\n        }\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Dimension } from \"sprotty-protocol/lib/utils/geometry\";\nimport { Animation } from \"../../base/animations/animation\";\nimport { SModelRoot, SModelElement } from \"../../base/model/smodel\";\nimport { CommandExecutionContext } from \"../../base/commands/command\";\nimport { BoundsAware } from './model';\n\nexport interface ResolvedElementResize {\n    element: SModelElement & BoundsAware\n    fromDimension: Dimension\n    toDimension: Dimension\n}\n\nexport class ResizeAnimation extends Animation {\n    constructor(protected model: SModelRoot,\n        public elementResizes: Map<string, ResolvedElementResize>,\n        context: CommandExecutionContext,\n        protected reverse: boolean = false) {\n        super(context);\n    }\n\n    tween(t: number) {\n        this.elementResizes.forEach(\n            (elementResize) => {\n                const element = elementResize.element;\n                const newDimension: Dimension = (this.reverse) ? {\n                        width: (1 - t) * elementResize.toDimension.width + t * elementResize.fromDimension.width,\n                        height: (1 - t) * elementResize.toDimension.height + t * elementResize.fromDimension.height\n                    } : {\n                        width: (1 - t) * elementResize.fromDimension.width + t * elementResize.toDimension.width,\n                        height: (1 - t) * elementResize.fromDimension.height + t * elementResize.toDimension.height\n                    };\n                element.bounds = {\n                    x: element.bounds.x,\n                    y: element.bounds.y,\n                    width: newDimension.width,\n                    height: newDimension.height\n                };\n            }\n        );\n        return this.model;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2022 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, optional } from \"inversify\";\nimport { Action, UpdateModelAction as ProtocolUpdateModelAction } from \"sprotty-protocol/lib/actions\";\nimport { SModelRoot as SModelRootSchema } from 'sprotty-protocol/lib/model';\nimport { almostEquals, Dimension } from \"sprotty-protocol/lib/utils/geometry\";\nimport { Animation, CompoundAnimation } from '../../base/animations/animation';\nimport { CommandExecutionContext, CommandReturn, Command } from '../../base/commands/command';\nimport { FadeAnimation, ResolvedElementFade } from '../fade/fade';\nimport { SModelRoot, SChildElement, SModelElement, SParentElement } from \"../../base/model/smodel\";\nimport { MoveAnimation, ResolvedElementMove, MorphEdgesAnimation } from \"../move/move\";\nimport { Fadeable, isFadeable } from \"../fade/model\";\nimport { isLocateable } from \"../move/model\";\nimport { isSizeable } from \"../bounds/model\";\nimport { ViewportRootElement } from \"../viewport/viewport-root\";\nimport { isSelectable } from \"../select/model\";\nimport { MatchResult, ModelMatcher, Match, forEachMatch } from \"./model-matching\";\nimport { ResolvedElementResize, ResizeAnimation } from '../bounds/resize';\nimport { TYPES } from \"../../base/types\";\nimport { isViewport } from \"../viewport/model\";\nimport { EdgeRouterRegistry, EdgeSnapshot, EdgeMemento } from \"../routing/routing\";\nimport { SRoutableElement } from \"../routing/model\";\nimport { containsSome } from \"../../base/model/smodel-utils\";\n\n/**\n * Sent from the model source to the client in order to update the model. If no model is present yet,\n * this behaves the same as a SetModelAction. The transition from the old model to the new one can be animated.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport class UpdateModelAction implements Action, ProtocolUpdateModelAction {\n    static readonly KIND = 'updateModel';\n    readonly kind = UpdateModelAction.KIND;\n\n    public readonly newRoot?: SModelRootSchema;\n    public readonly matches?: Match[];\n\n    constructor(input: SModelRootSchema | Match[],\n        public readonly animate: boolean = true,\n        public readonly cause?: Action) {\n        if ((input as SModelRootSchema).id !== undefined)\n            this.newRoot = input as SModelRootSchema;\n        else\n            this.matches = input as Match[];\n    }\n}\n\nexport interface UpdateAnimationData {\n    fades: ResolvedElementFade[]\n    moves?: ResolvedElementMove[]\n    resizes?: ResolvedElementResize[]\n    edgeMementi?: EdgeMemento[]\n}\n\n@injectable()\nexport class UpdateModelCommand extends Command {\n    static readonly KIND = ProtocolUpdateModelAction.KIND;\n\n    oldRoot: SModelRoot;\n    newRoot: SModelRoot;\n\n    @inject(EdgeRouterRegistry) @optional() edgeRouterRegistry?: EdgeRouterRegistry;\n\n    constructor(@inject(TYPES.Action) protected readonly action: ProtocolUpdateModelAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        let newRoot: SModelRoot;\n        if (this.action.newRoot !== undefined) {\n            newRoot = context.modelFactory.createRoot(this.action.newRoot);\n        } else {\n            newRoot = context.modelFactory.createRoot(context.root);\n            if (this.action.matches !== undefined)\n                this.applyMatches(newRoot, this.action.matches, context);\n        }\n        this.oldRoot = context.root;\n        this.newRoot = newRoot;\n        return this.performUpdate(this.oldRoot, this.newRoot, context);\n    }\n\n    protected performUpdate(oldRoot: SModelRoot, newRoot: SModelRoot, context: CommandExecutionContext): CommandReturn {\n        if ((this.action.animate === undefined || this.action.animate) && oldRoot.id === newRoot.id) {\n            let matchResult: MatchResult;\n            if (this.action.matches === undefined) {\n                const matcher = new ModelMatcher();\n                matchResult = matcher.match(oldRoot, newRoot);\n            } else {\n                matchResult = this.convertToMatchResult(this.action.matches, oldRoot, newRoot);\n            }\n            const animationOrRoot = this.computeAnimation(newRoot, matchResult, context);\n            if (animationOrRoot instanceof Animation)\n                return animationOrRoot.start();\n            else\n                return animationOrRoot;\n        } else {\n            if (oldRoot.type === newRoot.type && Dimension.isValid(oldRoot.canvasBounds))\n                newRoot.canvasBounds = oldRoot.canvasBounds;\n            if (isViewport(oldRoot) && isViewport(newRoot)) {\n                newRoot.zoom = oldRoot.zoom;\n                newRoot.scroll = oldRoot.scroll;\n            }\n            return newRoot;\n        }\n    }\n\n    protected applyMatches(root: SModelRoot, matches: Match[], context: CommandExecutionContext): void {\n        const index = root.index;\n        for (const match of matches) {\n            if (match.left !== undefined) {\n                const element = index.getById(match.left.id);\n                if (element instanceof SChildElement)\n                    element.parent.remove(element);\n            }\n        }\n        for (const match of matches) {\n            if (match.right !== undefined) {\n                const element = context.modelFactory.createElement(match.right);\n                let parent: SModelElement | undefined;\n                if (match.rightParentId !== undefined)\n                    parent = index.getById(match.rightParentId);\n                if (parent instanceof SParentElement)\n                    parent.add(element);\n                else\n                    root.add(element);\n            }\n        }\n    }\n\n    protected convertToMatchResult(matches: Match[], leftRoot: SModelRoot, rightRoot: SModelRoot): MatchResult {\n        const result: MatchResult = {};\n        for (const match of matches) {\n            const converted: Match = {};\n            let id: string | undefined = undefined;\n            if (match.left !== undefined) {\n                id = match.left.id;\n                converted.left = leftRoot.index.getById(id);\n                converted.leftParentId = match.leftParentId;\n            }\n            if (match.right !== undefined) {\n                id = match.right.id;\n                converted.right = rightRoot.index.getById(id);\n                converted.rightParentId = match.rightParentId;\n            }\n            if (id !== undefined)\n                result[id] = converted;\n        }\n        return result;\n    }\n\n    protected computeAnimation(newRoot: SModelRoot, matchResult: MatchResult, context: CommandExecutionContext): SModelRoot | Animation {\n        const animationData: UpdateAnimationData = {\n            fades: [] as ResolvedElementFade[]\n        };\n        forEachMatch(matchResult, (id, match) => {\n            if (match.left !== undefined && match.right !== undefined) {\n                // The element is still there, but may have been moved\n                this.updateElement(match.left as SModelElement, match.right as SModelElement, animationData);\n            } else if (match.right !== undefined) {\n                // An element has been added\n                const right = match.right as SModelElement;\n                if (isFadeable(right)) {\n                    right.opacity = 0;\n                    animationData.fades.push({\n                        element: right,\n                        type: 'in'\n                    });\n                }\n            } else if (match.left instanceof SChildElement) {\n                // An element has been removed\n                const left = match.left;\n                if (isFadeable(left) && match.leftParentId !== undefined) {\n                    if (!containsSome(newRoot, left)) {\n                        const parent = newRoot.index.getById(match.leftParentId);\n                        if (parent instanceof SParentElement) {\n                            const leftCopy = context.modelFactory.createElement(left) as SChildElement & Fadeable;\n                            parent.add(leftCopy);\n                            animationData.fades.push({\n                                element: leftCopy,\n                                type: 'out'\n                            });\n                        }\n                    }\n                }\n            }\n        });\n\n        const animations = this.createAnimations(animationData, newRoot, context);\n        if (animations.length >= 2) {\n            return new CompoundAnimation(newRoot, context, animations);\n        } else if (animations.length === 1) {\n            return animations[0];\n        } else {\n            return newRoot;\n        }\n    }\n\n    protected updateElement(left: SModelElement, right: SModelElement, animationData: UpdateAnimationData): void {\n        if (isLocateable(left) && isLocateable(right)) {\n            const leftPos = left.position;\n            const rightPos = right.position;\n            if (!almostEquals(leftPos.x, rightPos.x) || !almostEquals(leftPos.y, rightPos.y)) {\n                if (animationData.moves === undefined)\n                    animationData.moves = [];\n                animationData.moves.push({\n                    element: right,\n                    fromPosition: leftPos,\n                    toPosition: rightPos\n                });\n                right.position = leftPos;\n            }\n        }\n        if (isSizeable(left) && isSizeable(right)) {\n            if (!Dimension.isValid(right.bounds)) {\n                right.bounds = {\n                    x: right.bounds.x,\n                    y: right.bounds.y,\n                    width: left.bounds.width,\n                    height: left.bounds.height\n                };\n            } else if (!almostEquals(left.bounds.width, right.bounds.width)\n                || !almostEquals(left.bounds.height, right.bounds.height)) {\n                if (animationData.resizes === undefined)\n                    animationData.resizes = [];\n                animationData.resizes.push({\n                    element: right,\n                    fromDimension: {\n                        width: left.bounds.width,\n                        height: left.bounds.height,\n                    },\n                    toDimension: {\n                        width: right.bounds.width,\n                        height: right.bounds.height,\n                    }\n                });\n            }\n        }\n        if (left instanceof SRoutableElement && right instanceof SRoutableElement && this.edgeRouterRegistry) {\n            if (animationData.edgeMementi === undefined)\n                animationData.edgeMementi = [];\n            animationData.edgeMementi.push({\n                edge: right,\n                before: this.takeSnapshot(left),\n                after: this.takeSnapshot(right),\n            });\n        }\n        if (isSelectable(left) && isSelectable(right)) {\n            right.selected = left.selected;\n        }\n        if (left instanceof SModelRoot && right instanceof SModelRoot) {\n            right.canvasBounds = left.canvasBounds;\n        }\n        if (left instanceof ViewportRootElement && right instanceof ViewportRootElement) {\n            right.scroll = left.scroll;\n            right.zoom = left.zoom;\n        }\n    }\n\n    protected takeSnapshot(edge: SRoutableElement): EdgeSnapshot {\n        const router = this.edgeRouterRegistry!.get(edge.routerKind);\n        return router.takeSnapshot(edge);\n    }\n\n    protected createAnimations(data: UpdateAnimationData, root: SModelRoot, context: CommandExecutionContext): Animation[] {\n        const animations: Animation[] = [];\n        if (data.fades.length > 0) {\n            animations.push(new FadeAnimation(root, data.fades, context, true));\n        }\n        if (data.moves !== undefined && data.moves.length > 0) {\n            const movesMap: Map<string, ResolvedElementMove> = new Map;\n            for (const move of data.moves) {\n                movesMap.set(move.element.id, move);\n            }\n            animations.push(new MoveAnimation(root, movesMap, context, false));\n        }\n        if (data.resizes !== undefined && data.resizes.length > 0) {\n            const resizesMap: Map<string, ResolvedElementResize> = new Map;\n            for (const resize of data.resizes) {\n                resizesMap.set(resize.element.id, resize);\n            }\n            animations.push(new ResizeAnimation(root, resizesMap, context, false));\n        }\n        if (data.edgeMementi !== undefined && data.edgeMementi.length > 0) {\n            animations.push(new MorphEdgesAnimation(root, data.edgeMementi, context, false));\n        }\n        return animations;\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        return this.performUpdate(this.newRoot, this.oldRoot, context);\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        return this.performUpdate(this.oldRoot, this.newRoot, context);\n    }\n}\n\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from \"inversify\";\nimport { Action, generateRequestId, RequestAction, ResponseAction, SetViewportAction as ProtocolSetViewPortAction} from \"sprotty-protocol/lib/actions\";\nimport { Viewport } from \"sprotty-protocol/lib/model\";\nimport { Bounds, Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { SModelElement, SModelRoot } from \"../../base/model/smodel\";\nimport { MergeableCommand, ICommand, CommandExecutionContext, CommandReturn } from \"../../base/commands/command\";\nimport { Animation } from \"../../base/animations/animation\";\nimport { isViewport } from \"./model\";\nimport { TYPES } from \"../../base/types\";\nimport { ModelRequestCommand } from \"../../base/commands/request-command\";\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport class SetViewportAction implements Action, ProtocolSetViewPortAction {\n    static readonly KIND = 'viewport';\n    readonly kind = SetViewportAction.KIND;\n\n    constructor(public readonly elementId: string,\n                public readonly newViewport: Viewport,\n                public readonly animate: boolean) {\n    }\n}\n\n/**\n * Request action for retrieving the current viewport and canvas bounds.\n */\nexport interface GetViewportAction extends RequestAction<ViewportResult> {\n    kind: typeof GetViewportAction.KIND;\n}\nexport namespace GetViewportAction {\n    export const KIND = 'getViewport';\n\n    export function create(): GetViewportAction {\n        return {\n            kind: KIND,\n            requestId: generateRequestId()\n        };\n    }\n}\n\nexport interface ViewportResult extends ResponseAction {\n    kind: typeof ViewportResult.KIND;\n    viewport: Viewport\n    canvasBounds: Bounds\n}\nexport namespace ViewportResult {\n    export const KIND = 'viewportResult';\n\n    export function create(viewport: Viewport, canvasBounds: Bounds, requestId: string): ViewportResult {\n        return {\n            kind: KIND,\n            viewport,\n            canvasBounds,\n            responseId: requestId\n        };\n    }\n}\n\n@injectable()\nexport class SetViewportCommand extends MergeableCommand {\n    static readonly KIND = ProtocolSetViewPortAction.KIND;\n\n    protected element: SModelElement & Viewport;\n    protected oldViewport: Viewport;\n    protected newViewport: Viewport;\n\n    constructor(@inject(TYPES.Action) protected readonly action: ProtocolSetViewPortAction) {\n        super();\n        this.newViewport = action.newViewport;\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        const model = context.root;\n        const element = model.index.getById(this.action.elementId);\n        if (element && isViewport(element)) {\n            this.element = element;\n            this.oldViewport = {\n                scroll: this.element.scroll,\n                zoom: this.element.zoom,\n            };\n            if (this.action.animate)\n                return new ViewportAnimation(this.element, this.oldViewport, this.newViewport, context).start();\n            else {\n                this.element.scroll = this.newViewport.scroll;\n                this.element.zoom = this.newViewport.zoom;\n            }\n        }\n        return model;\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        return new ViewportAnimation(this.element, this.newViewport, this.oldViewport, context).start();\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        return new ViewportAnimation(this.element, this.oldViewport, this.newViewport, context).start();\n    }\n\n    override merge(command: ICommand, context: CommandExecutionContext): boolean {\n        if (!this.action.animate && command instanceof SetViewportCommand && this.element === command.element) {\n            this.newViewport = command.newViewport;\n            return true;\n        }\n        return false;\n    }\n}\n\nexport class GetViewportCommand extends ModelRequestCommand {\n    static readonly KIND = GetViewportAction.KIND;\n\n    constructor(@inject(TYPES.Action) protected readonly action: GetViewportAction) {\n        super();\n    }\n\n    protected retrieveResult(context: CommandExecutionContext): ResponseAction {\n        const elem = context.root;\n        let viewport: Viewport;\n        if (isViewport(elem)) {\n            viewport = { scroll: elem.scroll, zoom: elem.zoom };\n        } else {\n            viewport = { scroll: Point.ORIGIN, zoom: 1 };\n        }\n        return ViewportResult.create(viewport, elem.canvasBounds, this.action.requestId);\n    }\n}\n\nexport class ViewportAnimation extends Animation {\n\n    protected zoomFactor: number;\n\n    constructor(protected element: SModelElement & Viewport,\n                protected oldViewport: Viewport,\n                protected newViewport: Viewport,\n                protected override context: CommandExecutionContext) {\n        super(context);\n        this.zoomFactor = Math.log(newViewport.zoom / oldViewport.zoom);\n    }\n\n    tween(t: number, context: CommandExecutionContext): SModelRoot {\n        this.element.scroll = {\n            x: (1 - t) * this.oldViewport.scroll.x + t * this.newViewport.scroll.x,\n            y: (1 - t) * this.oldViewport.scroll.y + t * this.newViewport.scroll.y\n        };\n        this.element.zoom = this.oldViewport.zoom * Math.exp(t * this.zoomFactor);\n        return context.root;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Action, CenterAction as ProtocolCenterAction, FitToScreenAction as ProtocolFitToScreenAction} from \"sprotty-protocol/lib/actions\";\nimport { Viewport } from \"sprotty-protocol/lib/model\";\nimport { Bounds, Dimension } from \"sprotty-protocol/lib/utils/geometry\";\nimport { matchesKeystroke } from \"../../utils/keyboard\";\nimport { SChildElement } from '../../base/model/smodel';\nimport { Command, CommandExecutionContext, CommandReturn } from \"../../base/commands/command\";\nimport { SModelElement, SModelRoot } from \"../../base/model/smodel\";\nimport { KeyListener } from \"../../base/views/key-tool\";\nimport { isBoundsAware } from \"../bounds/model\";\nimport { isSelectable } from \"../select/model\";\nimport { ViewportAnimation } from \"./viewport\";\nimport { isViewport } from \"./model\";\nimport { injectable, inject } from \"inversify\";\nimport { TYPES } from \"../../base/types\";\n\n/**\n * Triggered when the user requests the viewer to center on the current model. The resulting\n * CenterCommand changes the scroll setting of the viewport accordingly.\n * It also resets the zoom to its default if retainZoom is false.\n * This action can also be sent from the model source to the client in order to perform such a\n * viewport change programmatically.\n *\n * @deprecated Use the declaration in `sprotty-protocol` instead.\n */\nexport class CenterAction implements Action, ProtocolCenterAction {\n    static readonly KIND = 'center';\n    readonly kind = CenterAction.KIND;\n\n    constructor(public readonly elementIds: string[],\n                public readonly animate: boolean = true,\n                public readonly retainZoom: boolean = false) {\n    }\n}\n\n/**\n * Triggered when the user requests the viewer to fit its content to the available drawing area.\n * The resulting FitToScreenCommand changes the zoom and scroll settings of the viewport so the model\n * can be shown completely. This action can also be sent from the model source to the client in order\n * to perform such a viewport change programmatically.\n *\n * @deprecated Use the declaration in `sprotty-protocol` instead.\n */\nexport class FitToScreenAction implements Action, ProtocolFitToScreenAction {\n    static readonly KIND = 'fit';\n    readonly kind = FitToScreenAction.KIND;\n\n    constructor(public readonly elementIds: string[],\n                public readonly padding?: number,\n                public readonly maxZoom?: number,\n                public readonly animate: boolean = true) {\n    }\n}\n\n@injectable()\nexport abstract class BoundsAwareViewportCommand extends Command {\n\n    oldViewport: Viewport;\n    newViewport?: Viewport;\n\n    constructor(protected readonly animate: boolean) {\n        super();\n    }\n\n    protected initialize(model: SModelRoot) {\n        if (isViewport(model)) {\n            this.oldViewport = {\n                scroll: model.scroll,\n                zoom: model.zoom\n            };\n            const allBounds: Bounds[] = [];\n            this.getElementIds().forEach(\n                id => {\n                    const element = model.index.getById(id);\n                    if (element && isBoundsAware(element))\n                        allBounds.push(this.boundsInViewport(element, element.bounds, model));\n                }\n            );\n            if (allBounds.length === 0) {\n                model.index.all().forEach(\n                    element => {\n                        if (isSelectable(element) && element.selected && isBoundsAware(element))\n                            allBounds.push(this.boundsInViewport(element, element.bounds, model));\n                    }\n                );\n            }\n            if (allBounds.length === 0) {\n                model.index.all().forEach(\n                    element => {\n                        if (isBoundsAware(element))\n                            allBounds.push(this.boundsInViewport(element, element.bounds, model));\n                    }\n                );\n            }\n            if (allBounds.length !== 0) {\n                const bounds = allBounds.reduce((b0, b1) => Bounds.combine(b0, b1));\n                if (Dimension.isValid(bounds))\n                    this.newViewport = this.getNewViewport(bounds, model);\n            }\n        }\n    }\n\n    protected boundsInViewport(element: SModelElement, bounds: Bounds, viewport: SModelRoot & Viewport): Bounds {\n        if (element instanceof SChildElement && element.parent !== viewport)\n            return this.boundsInViewport(element.parent, element.parent.localToParent(bounds) as Bounds, viewport);\n        else\n            return bounds;\n    }\n\n    protected abstract getNewViewport(bounds: Bounds, model: SModelRoot): Viewport | undefined;\n\n    protected abstract getElementIds(): string[];\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        this.initialize(context.root);\n        return this.redo(context);\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        const model = context.root;\n        if (isViewport(model) && this.newViewport !== undefined && !this.equal(this.newViewport, this.oldViewport)) {\n            if (this.animate)\n                return new ViewportAnimation(model, this.newViewport, this.oldViewport, context).start();\n            else {\n                model.scroll = this.oldViewport.scroll;\n                model.zoom = this.oldViewport.zoom;\n            }\n        }\n        return model;\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        const model = context.root;\n        if (isViewport(model) && this.newViewport !== undefined && !this.equal(this.newViewport, this.oldViewport)) {\n            if (this.animate) {\n               return new ViewportAnimation(model, this.oldViewport, this.newViewport, context).start();\n            } else {\n                model.scroll = this.newViewport.scroll;\n                model.zoom = this.newViewport.zoom;\n            }\n        }\n        return model;\n    }\n\n    protected equal(vp1: Viewport, vp2: Viewport): boolean {\n        return vp1.zoom === vp2.zoom && vp1.scroll.x === vp2.scroll.x && vp1.scroll.y === vp2.scroll.y;\n    }\n}\n\nexport class CenterCommand extends BoundsAwareViewportCommand {\n    static readonly KIND = ProtocolCenterAction.KIND;\n\n    constructor(@inject(TYPES.Action) protected action: ProtocolCenterAction) {\n        super(action.animate);\n    }\n\n    getElementIds() {\n        return this.action.elementIds;\n    }\n\n    getNewViewport(bounds: Bounds, model: SModelRoot): Viewport | undefined {\n        if (!Dimension.isValid(model.canvasBounds)) {\n            return undefined;\n        }\n        const zoom = (this.action.retainZoom && isViewport(model)) ? model.zoom : 1;\n        const c = Bounds.center(bounds);\n        return {\n            scroll: {\n                x: c.x - 0.5 * model.canvasBounds.width / zoom,\n                y: c.y - 0.5 * model.canvasBounds.height / zoom\n            },\n            zoom: zoom\n        };\n    }\n}\n\nexport class FitToScreenCommand extends BoundsAwareViewportCommand {\n    static readonly KIND = ProtocolFitToScreenAction.KIND;\n\n    constructor(@inject(TYPES.Action) protected readonly action: ProtocolFitToScreenAction) {\n        super(action.animate);\n    }\n\n    getElementIds() {\n        return this.action.elementIds;\n    }\n\n    getNewViewport(bounds: Bounds, model: SModelRoot): Viewport | undefined {\n        if (!Dimension.isValid(model.canvasBounds)) {\n            return undefined;\n        }\n        const c = Bounds.center(bounds);\n        const delta = this.action.padding === undefined\n            ? 0\n            : 2 *  this.action.padding;\n        let zoom = Math.min(\n            model.canvasBounds.width / (bounds.width + delta),\n            model.canvasBounds.height / (bounds.height + delta));\n        if (this.action.maxZoom !== undefined)\n           zoom = Math.min(zoom, this.action.maxZoom);\n        if (zoom === Infinity) {\n            zoom = 1;\n        }\n        return {\n            scroll: {\n                x: c.x - 0.5 * model.canvasBounds.width / zoom,\n                y: c.y - 0.5 * model.canvasBounds.height / zoom\n            },\n            zoom: zoom\n        };\n    }\n}\n\nexport class CenterKeyboardListener extends KeyListener {\n    override keyDown(element: SModelElement, event: KeyboardEvent): Action[] {\n        if (matchesKeystroke(event, 'KeyC', 'ctrlCmd', 'shift'))\n            return [new CenterAction([])];\n        if (matchesKeystroke(event, 'KeyF', 'ctrlCmd', 'shift'))\n            return [new FitToScreenAction([])];\n        return [];\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Action, CenterAction, SetViewportAction } from 'sprotty-protocol/lib/actions';\nimport { Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { SModelElement, SModelRoot } from '../../base/model/smodel';\nimport { MouseListener } from '../../base/views/mouse-tool';\nimport { SModelExtension } from '../../base/model/smodel-extension';\nimport { findParentByFeature } from '../../base/model/smodel-utils';\nimport { isViewport } from './model';\nimport { isMoveable } from '../move/model';\nimport { SRoutingHandle } from '../routing/model';\nimport { getModelBounds } from '../projection/model';\nimport { hitsMouseEvent } from '../../utils/browser';\nimport { Viewport } from 'sprotty-protocol/lib/model';\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface Scrollable extends SModelExtension {\n    scroll: Point\n}\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport function isScrollable(element: SModelElement | Scrollable): element is Scrollable {\n    return 'scroll' in element;\n}\n\nexport class ScrollMouseListener extends MouseListener {\n\n    protected lastScrollPosition: Point |undefined;\n    protected scrollbar: HTMLElement | undefined;\n    protected scrollbarMouseDownTimeout: number | undefined;\n    protected scrollbarMouseDownDelay = 200;\n\n    override mouseDown(target: SModelElement, event: MouseEvent): (Action | Promise<Action>)[] {\n        const moveable = findParentByFeature(target, isMoveable);\n        if (moveable === undefined && !(target instanceof SRoutingHandle)) {\n            const viewport = findParentByFeature(target, isViewport);\n            if (viewport) {\n                this.lastScrollPosition = { x: event.pageX, y: event.pageY };\n                this.scrollbar = this.getScrollbar(event);\n                if (this.scrollbar) {\n                    window.clearTimeout(this.scrollbarMouseDownTimeout);\n                    return this.moveScrollBar(viewport, event, this.scrollbar, true)\n                        .map(action => new Promise(resolve => {\n                            this.scrollbarMouseDownTimeout = window.setTimeout(() => resolve(action), this.scrollbarMouseDownDelay);\n                        }));\n                }\n            } else {\n                this.lastScrollPosition = undefined;\n                this.scrollbar = undefined;\n            }\n        }\n        return [];\n    }\n\n    override mouseMove(target: SModelElement, event: MouseEvent): Action[] {\n        if (event.buttons === 0) {\n            return this.mouseUp(target, event);\n        }\n        if (this.scrollbar) {\n            window.clearTimeout(this.scrollbarMouseDownTimeout);\n            const viewport = findParentByFeature(target, isViewport);\n            if (viewport) {\n                return this.moveScrollBar(viewport, event, this.scrollbar);\n            }\n        }\n        if (this.lastScrollPosition) {\n            const viewport = findParentByFeature(target, isViewport);\n            if (viewport) {\n                return this.dragCanvas(viewport, event, this.lastScrollPosition);\n            }\n        }\n        return [];\n    }\n\n    override mouseEnter(target: SModelElement, event: MouseEvent): Action[] {\n        if (target instanceof SModelRoot && event.buttons === 0) {\n            this.mouseUp(target, event);\n        }\n        return [];\n    }\n\n    override mouseUp(target: SModelElement, event: MouseEvent): Action[] {\n        this.lastScrollPosition = undefined;\n        this.scrollbar = undefined;\n        return [];\n    }\n\n    override doubleClick(target: SModelElement, event: MouseEvent): Action[] {\n        const viewport = findParentByFeature(target, isViewport);\n        if (viewport) {\n            const scrollbar = this.getScrollbar(event);\n            if (scrollbar) {\n                window.clearTimeout(this.scrollbarMouseDownTimeout);\n                const targetElement = this.findClickTarget(scrollbar, event);\n                let elementId: string | undefined;\n                if (targetElement && targetElement.id.startsWith('horizontal-projection:')) {\n                    elementId = targetElement.id.substring('horizontal-projection:'.length);\n                } else if (targetElement && targetElement.id.startsWith('vertical-projection:')) {\n                    elementId = targetElement.id.substring('vertical-projection:'.length);\n                }\n                if (elementId) {\n                    return [CenterAction.create([elementId], { animate: true, retainZoom: true })];\n                }\n            }\n        }\n        return [];\n    }\n\n    protected dragCanvas(viewport: SModelRoot & Viewport, event: MouseEvent, lastScrollPosition: Point): Action[] {\n        const dx = (event.pageX - lastScrollPosition.x) / viewport.zoom;\n        const dy = (event.pageY - lastScrollPosition.y) / viewport.zoom;\n        const newViewport: Viewport = {\n            scroll: {\n                x: viewport.scroll.x - dx,\n                y: viewport.scroll.y - dy,\n            },\n            zoom: viewport.zoom\n        };\n        this.lastScrollPosition = { x: event.pageX, y: event.pageY };\n        return [SetViewportAction.create(viewport.id, newViewport, { animate: false })];\n    }\n\n    protected moveScrollBar(model: SModelRoot & Viewport, event: MouseEvent, scrollbar: HTMLElement, animate: boolean = false): Action[] {\n        const modelBounds = getModelBounds(model);\n        if (!modelBounds || model.zoom <= 0) {\n            return [];\n        }\n        const scrollbarRect = scrollbar.getBoundingClientRect();\n        let newScroll: Point;\n        if (this.getScrollbarOrientation(scrollbar) === 'horizontal') {\n            if (scrollbarRect.width <= 0) {\n                return [];\n            }\n            const viewportSize = (model.canvasBounds.width / (model.zoom * modelBounds.width)) * scrollbarRect.width;\n            let position = event.clientX - scrollbarRect.x - viewportSize / 2;\n            if (position < 0) {\n                position = 0;\n            } else if (position > scrollbarRect.width - viewportSize) {\n                position = scrollbarRect.width - viewportSize;\n            }\n            newScroll = {\n                x: modelBounds.x + (position / scrollbarRect.width) * modelBounds.width,\n                y: model.scroll.y\n            };\n        } else {\n            if (scrollbarRect.height <= 0) {\n                return [];\n            }\n            const viewportSize = (model.canvasBounds.height / (model.zoom * modelBounds.height)) * scrollbarRect.height;\n            let position = event.clientY - scrollbarRect.y - viewportSize / 2;\n            if (position < 0) {\n                position = 0;\n            } else if (position > scrollbarRect.height - viewportSize) {\n                position = scrollbarRect.height - viewportSize;\n            }\n            newScroll = {\n                x: model.scroll.x,\n                y: modelBounds.y + (position / scrollbarRect.height) * modelBounds.height\n            };\n        }\n        return [SetViewportAction.create(model.id, { scroll: newScroll, zoom: model.zoom }, { animate })];\n    }\n\n    protected getScrollbar(event: MouseEvent): HTMLElement | undefined {\n        let element = event.target as HTMLElement | null;\n        while (element) {\n            if (element.classList && element.classList.contains('sprotty-projection-bar')) {\n                return element;\n            }\n            element = element.parentElement;\n        }\n        return undefined;\n    }\n\n    protected getScrollbarOrientation(scrollbar: HTMLElement): 'horizontal' | 'vertical' {\n        if (scrollbar.classList.contains('horizontal')) {\n            return 'horizontal';\n        } else {\n            return 'vertical';\n        }\n    }\n\n    protected findClickTarget(scrollbar: HTMLElement, event: MouseEvent): HTMLElement | undefined {\n        const matching = Array.from(scrollbar.children).filter(child =>\n            child.id && child.classList.contains('sprotty-projection') && hitsMouseEvent(child, event)\n        ) as HTMLElement[];\n        if (matching.length > 0) {\n            return matching[matching.length - 1];\n        }\n        return undefined;\n    }\n\n}\n", "/********************************************************************************\n * Copyright (c) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { Action } from 'sprotty-protocol/lib/actions';\nimport { TYPES } from '../../base/types';\nimport { SModelRoot, SChildElement, SModelElement, SParentElement } from '../../base/model/smodel';\nimport { Command, CommandExecutionContext } from '../../base/commands/command';\nimport { SRoutableElement, SConnectableElement } from '../routing/model';\n\n/**\n * Action to render the selected elements in front of others by manipulating the z-order.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface BringToFrontAction extends Action {\n    kind: typeof BringToFrontAction.KIND;\n    elementIDs: string[]\n}\nexport namespace BringToFrontAction {\n    export const KIND = 'bringToFront';\n\n    export function create(elementIDs: string[]): BringToFrontAction {\n        return {\n            kind: KIND,\n            elementIDs\n        };\n    }\n}\n\nexport type ZOrderElement = {\n    element: SChildElement\n    index: number\n};\n\n@injectable()\nexport class BringToFrontCommand extends Command {\n    static readonly KIND = BringToFrontAction.KIND;\n\n    protected selected: ZOrderElement[] = [];\n\n    constructor(@inject(TYPES.Action) public action: BringToFrontAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): SModelRoot {\n        const model = context.root;\n        this.action.elementIDs.forEach(id => {\n            const element = model.index.getById(id);\n            if (element instanceof SRoutableElement) {\n                if (element.source)\n                    this.addToSelection(element.source);\n                if (element.target)\n                    this.addToSelection(element.target);\n            }\n            if (element instanceof SChildElement) {\n                this.addToSelection(element);\n            }\n            this.includeConnectedEdges(element);\n        });\n        return this.redo(context);\n    }\n\n    protected includeConnectedEdges(element?: SModelElement): void {\n        if (element instanceof SConnectableElement) {\n            element.incomingEdges.forEach(edge => this.addToSelection(edge));\n            element.outgoingEdges.forEach(edge => this.addToSelection(edge));\n        }\n        if (element instanceof SParentElement) {\n            for (const child of element.children) {\n                this.includeConnectedEdges(child);\n            }\n        }\n    }\n\n    protected addToSelection(element: SChildElement): void {\n        this.selected.push({\n            element: element,\n            index: element.parent.children.indexOf(element)\n        });\n    }\n\n    undo(context: CommandExecutionContext): SModelRoot {\n        for (let i = this.selected.length - 1; i >= 0; i--) {\n            const selection = this.selected[i];\n            const element = selection.element;\n            element.parent.move(element, selection.index);\n        }\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): SModelRoot {\n        for (let i = 0; i < this.selected.length; i++) {\n            this.bringToFront(this.selected[i]);\n        }\n        return context.root;\n    }\n\n    protected bringToFront(selection: ZOrderElement) {\n        const element = selection.element;\n        const childrenLength = element.parent.children.length;\n        element.parent.move(element, childrenLength - 1);\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from \"inversify\";\nimport {\n    SCompartment as SCompartmentSchema, SEdge as SEdgeSchema, SGraph as SGraphSchema, SLabel as SLabelSchema,\n    SModelElement as SModelElementSchema, SModelRoot as SModelRootSchema, SNode as SNodeSchema, SPort as SPortSchema\n} from 'sprotty-protocol/lib/model';\nimport { getBasicType } from 'sprotty-protocol/lib/utils/model-utils';\nimport { SModelFactory, createFeatureSet } from \"../base/model/smodel-factory\";\nimport { SChildElement, SModelRoot, SParentElement } from \"../base/model/smodel\";\nimport { SCompartment, SEdge, SGraph, SLabel, SNode, SPort } from \"./sgraph\";\nimport { SButton, SButtonSchema } from '../features/button/model';\n\n/**\n * @deprecated\n * Subclassing SModelFactory is discouraged. Use `registerModelElement`\n * or `configureModelElement` instead.\n */\n@injectable()\nexport class SGraphFactory extends SModelFactory {\n\n    protected readonly defaultGraphFeatures = createFeatureSet(SGraph.DEFAULT_FEATURES);\n    protected readonly defaultNodeFeatures = createFeatureSet(SNode.DEFAULT_FEATURES);\n    protected readonly defaultPortFeatures = createFeatureSet(SPort.DEFAULT_FEATURES);\n    protected readonly defaultEdgeFeatures = createFeatureSet(SEdge.DEFAULT_FEATURES);\n    protected readonly defaultLabelFeatures = createFeatureSet(SLabel.DEFAULT_FEATURES);\n    protected readonly defaultCompartmentFeatures = createFeatureSet(SCompartment.DEFAULT_FEATURES);\n    protected readonly defaultButtonFeatures = createFeatureSet(SButton.DEFAULT_FEATURES);\n\n    override createElement(schema: SModelElementSchema, parent?: SParentElement): SChildElement {\n        let child: SChildElement;\n        if (this.registry.hasKey(schema.type)) {\n            const regElement = this.registry.get(schema.type, undefined);\n            if (!(regElement instanceof SChildElement))\n                throw new Error(`Element with type ${schema.type} was expected to be an SChildElement.`);\n            child = regElement;\n        } else if (this.isNodeSchema(schema)) {\n            child = new SNode();\n            child.features = this.defaultNodeFeatures;\n        } else if (this.isPortSchema(schema)) {\n            child = new SPort();\n            child.features = this.defaultPortFeatures;\n        } else if (this.isEdgeSchema(schema)) {\n            child = new SEdge();\n            child.features = this.defaultEdgeFeatures;\n        } else if (this.isLabelSchema(schema)) {\n            child = new SLabel();\n            child.features = this.defaultLabelFeatures;\n        } else if (this.isCompartmentSchema(schema)) {\n            child = new SCompartment();\n            child.features = this.defaultCompartmentFeatures;\n        } else if (this.isButtonSchema(schema)) {\n            child = new SButton();\n            child.features = this.defaultButtonFeatures;\n        } else {\n            child = new SChildElement();\n        }\n        return this.initializeChild(child, schema, parent);\n    }\n\n    override createRoot(schema: SModelRootSchema): SModelRoot {\n        let root: SModelRoot;\n        if (this.registry.hasKey(schema.type)) {\n            const regElement = this.registry.get(schema.type, undefined);\n            if (!(regElement instanceof SModelRoot))\n                throw new Error(`Element with type ${schema.type} was expected to be an SModelRoot.`);\n            root = regElement;\n        } else if (this.isGraphSchema(schema)) {\n            root = new SGraph();\n            root.features = this.defaultGraphFeatures;\n        } else {\n            root = new SModelRoot();\n        }\n        return this.initializeRoot(root, schema);\n    }\n\n    isGraphSchema(schema: SModelElementSchema): schema is SGraphSchema {\n        return getBasicType(schema) === 'graph';\n    }\n\n    isNodeSchema(schema: SModelElementSchema): schema is SNodeSchema {\n        return getBasicType(schema) === 'node';\n    }\n\n    isPortSchema(schema: SModelElementSchema): schema is SPortSchema {\n        return getBasicType(schema) === 'port';\n    }\n\n    isEdgeSchema(schema: SModelElementSchema): schema is SEdgeSchema {\n        return getBasicType(schema) === 'edge';\n    }\n\n    isLabelSchema(schema: SModelElementSchema): schema is SLabelSchema {\n        return getBasicType(schema) === 'label';\n    }\n\n    isCompartmentSchema(schema: SModelElementSchema): schema is SCompartmentSchema {\n        return getBasicType(schema) === 'comp';\n    }\n\n    isButtonSchema(schema: SModelElementSchema): schema is SButtonSchema {\n        return getBasicType(schema) === 'button';\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"../base/types\";\nimport { SGraphFactory } from \"./sgraph-factory\";\n\nconst graphModule = new ContainerModule((bind, unbind, isBound, rebind) => {\n    rebind(TYPES.IModelFactory).to(SGraphFactory).inSingletonScope();\n});\n\nexport default graphModule;\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"../../base/types\";\nimport { SetBoundsCommand, RequestBoundsCommand } from \"./bounds-manipulation\";\nimport { HiddenBoundsUpdater } from './hidden-bounds-updater';\nimport { configureLayout, Layouter, LayoutRegistry } from \"./layout\";\nimport { configureCommand } from \"../../base/commands/command-registration\";\nimport { HBoxLayouter } from \"./hbox-layout\";\nimport { VBoxLayouter } from \"./vbox-layout\";\nimport { StackLayouter} from \"./stack-layout\";\n\nconst boundsModule = new ContainerModule((bind, _unbind, isBound) => {\n    configureCommand({ bind, isBound }, SetBoundsCommand);\n    configureCommand({ bind, isBound }, RequestBoundsCommand);\n    bind(HiddenBoundsUpdater).toSelf().inSingletonScope();\n    bind(TYPES.HiddenVNodePostprocessor).toService(HiddenBoundsUpdater);\n    bind(TYPES.Layouter).to(Layouter).inSingletonScope();\n    bind(TYPES.LayoutRegistry).to(LayoutRegistry).inSingletonScope();\n\n    configureLayout({bind, isBound}, VBoxLayouter.KIND, VBoxLayouter);\n    configureLayout({bind, isBound}, HBoxLayouter.KIND, HBoxLayouter);\n    configureLayout({bind, isBound}, StackLayouter.KIND, StackLayouter);\n});\n\nexport default boundsModule;\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { ButtonHandlerRegistry } from './button-handler';\n\nconst buttonModule = new ContainerModule(bind => {\n    bind(ButtonHandlerRegistry).toSelf().inSingletonScope();\n});\n\nexport default buttonModule;\n", "/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"../../base/types\";\nimport { CommandPaletteActionProviderRegistry } from \"./action-providers\";\nimport { CommandPalette, CommandPaletteKeyListener } from \"./command-palette\";\n\nconst commandPaletteModule = new ContainerModule((bind) => {\n    bind(CommandPalette).toSelf().inSingletonScope();\n    bind(TYPES.IUIExtension).toService(CommandPalette);\n    bind(CommandPaletteKeyListener).toSelf().inSingletonScope();\n    bind(TYPES.KeyListener).toService(CommandPaletteKeyListener);\n    bind(CommandPaletteActionProviderRegistry).toSelf().inSingletonScope();\n    bind(TYPES.ICommandPaletteActionProviderRegistry).toService(CommandPaletteActionProviderRegistry);\n});\n\nexport default commandPaletteModule;\n", "/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { ContainerModule } from \"inversify\";\n\nimport { IContextMenuService } from \"./context-menu-service\";\nimport { ContextMenuProviderRegistry } from \"./menu-providers\";\nimport { ContextMenuMouseListener } from \"./mouse-listener\";\nimport { TYPES } from \"../../base/types\";\n\nconst contextMenuModule = new ContainerModule(bind => {\n    bind(TYPES.IContextMenuServiceProvider).toProvider<IContextMenuService>(ctx => {\n        return () => {\n            return new Promise<IContextMenuService>((resolve, reject) => {\n                if (ctx.container.isBound(TYPES.IContextMenuService)) {\n                    resolve(ctx.container.get<IContextMenuService>(TYPES.IContextMenuService));\n                } else {\n                    reject();\n                }\n            });\n        };\n    });\n    bind(ContextMenuMouseListener).toSelf().inSingletonScope();\n    bind(TYPES.MouseListener).toService(ContextMenuMouseListener);\n    bind(TYPES.IContextMenuProviderRegistry).to(ContextMenuProviderRegistry);\n});\n\nexport default contextMenuModule;\n", "/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { configureModelElement } from \"../../base/views/view\";\nimport { ContainerModule } from \"inversify\";\nimport { SIssueMarker } from \"./model\";\nimport { IssueMarkerView } from \"./views\";\nimport { TYPES } from \"../../base/types\";\nimport { DecorationPlacer } from \"./decoration-placer\";\n\nconst decorationModule = new ContainerModule((bind, _unbind, isBound)  => {\n    configureModelElement({ bind, isBound }, 'marker', SIssueMarker, IssueMarkerView);\n    bind(DecorationPlacer).toSelf().inSingletonScope();\n    bind(TYPES.IVNodePostprocessor).toService(DecorationPlacer);\n});\n\nexport default decorationModule;\n", "/********************************************************************************\n * Copyright (c) 2021 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"../../base/types\";\nimport { IntersectionFinder } from \"../edge-intersection/intersection-finder\";\n\nconst edgeIntersectionModule = new ContainerModule(bind => {\n    bind(IntersectionFinder).toSelf().inSingletonScope();\n    bind(TYPES.IEdgeRoutePostprocessor).toService(IntersectionFinder);\n});\n\nexport default edgeIntersectionModule;\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { configureButtonHandler } from \"../button/button-handler\";\nimport { ExpandButtonHandler } from \"./expand\";\n\nconst expandModule = new ContainerModule((bind, _unbind, isBound) => {\n    configureButtonHandler({bind, isBound}, ExpandButtonHandler.TYPE, ExpandButtonHandler);\n});\n\nexport default expandModule;\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from '../../base/types';\nimport { ExportSvgPostprocessor, ExportSvgKeyListener, ExportSvgCommand } from './export';\nimport { SvgExporter } from './svg-exporter';\nimport { configureCommand } from \"../../base/commands/command-registration\";\n\nconst exportSvgModule = new ContainerModule((bind, _unbind, isBound) => {\n    bind(ExportSvgKeyListener).toSelf().inSingletonScope();\n    bind(TYPES.KeyListener).toService(ExportSvgKeyListener);\n    bind(TYPES.HiddenVNodePostprocessor).to(ExportSvgPostprocessor).inSingletonScope();\n    configureCommand({ bind, isBound }, ExportSvgCommand);\n    bind(TYPES.SvgExporter).to(SvgExporter).inSingletonScope();\n});\n\nexport default exportSvgModule;\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"../../base/types\";\nimport { ElementFader } from \"./fade\";\n\nconst fadeModule = new ContainerModule(bind => {\n    bind(TYPES.IVNodePostprocessor).to(ElementFader).inSingletonScope();\n});\n\nexport default fadeModule;\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from \"inversify\";\nimport { VNode } from \"snabbdom\";\nimport { TYPES } from \"../../base/types\";\nimport { IVNodePostprocessor } from \"../../base/views/vnode-postprocessor\";\nimport { ViewerOptions } from \"../../base/views/viewer-options\";\nimport { SModelElement } from \"../../base/model/smodel\";\n\n@injectable()\nexport class PopupPositionUpdater implements IVNodePostprocessor {\n\n    @inject(TYPES.ViewerOptions) protected options: ViewerOptions;\n\n    decorate(vnode: VNode, element: SModelElement): VNode {\n        return vnode;\n    }\n\n    postUpdate(): void {\n        const popupDiv = document.getElementById(this.options.popupDiv);\n        if (popupDiv !== null && typeof window !== 'undefined') {\n            const boundingClientRect = popupDiv.getBoundingClientRect();\n            if (window.innerHeight < boundingClientRect.height + boundingClientRect.top) {\n                popupDiv.style.top = (window.pageYOffset + window.innerHeight - boundingClientRect.height - 5) + 'px';\n            }\n\n            if (window.innerWidth < boundingClientRect.left + boundingClientRect.width) {\n                popupDiv.style.left = (window.pageXOffset + window.innerWidth - boundingClientRect.width - 5) + 'px';\n            }\n\n            if (boundingClientRect.left < 0) {\n                popupDiv.style.left = '0px';\n            }\n\n            if (boundingClientRect.top < 0) {\n                popupDiv.style.top = '0px';\n            }\n        }\n    }\n\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"../../base/types\";\nimport {\n    HoverMouseListener, PopupHoverMouseListener, HoverFeedbackCommand, SetPopupModelCommand,\n    HoverKeyListener, HoverState, ClosePopupActionHandler\n} from \"./hover\";\nimport { PopupPositionUpdater } from \"./popup-position-updater\";\nimport { configureCommand } from \"../../base/commands/command-registration\";\nimport { configureActionHandler } from \"../../base/actions/action-handler\";\nimport { FitToScreenCommand, CenterCommand } from \"../viewport/center-fit\";\nimport { SetViewportCommand } from \"../viewport/viewport\";\nimport { MoveCommand } from \"../move/move\";\n\nconst hoverModule = new ContainerModule((bind, _unbind, isBound) => {\n    bind(TYPES.PopupVNodePostprocessor).to(PopupPositionUpdater).inSingletonScope();\n    bind(HoverMouseListener).toSelf().inSingletonScope();\n    bind(TYPES.MouseListener).toService(HoverMouseListener);\n    bind(PopupHoverMouseListener).toSelf().inSingletonScope();\n    bind(TYPES.PopupMouseListener).toService(PopupHoverMouseListener);\n    bind(HoverKeyListener).toSelf().inSingletonScope();\n    bind(TYPES.KeyListener).toService(HoverKeyListener);\n    bind<HoverState>(TYPES.HoverState).toConstantValue({\n        mouseOverTimer: undefined,\n        mouseOutTimer: undefined,\n        popupOpen: false,\n        previousPopupElement: undefined\n    });\n    bind(ClosePopupActionHandler).toSelf().inSingletonScope();\n\n    const context = { bind, isBound };\n    configureCommand(context, HoverFeedbackCommand);\n    configureCommand(context, SetPopupModelCommand);\n    configureActionHandler(context, SetPopupModelCommand.KIND, ClosePopupActionHandler);\n    configureActionHandler(context, FitToScreenCommand.KIND, ClosePopupActionHandler);\n    configureActionHandler(context, CenterCommand.KIND, ClosePopupActionHandler);\n    configureActionHandler(context, SetViewportCommand.KIND, ClosePopupActionHandler);\n    configureActionHandler(context, MoveCommand.KIND, ClosePopupActionHandler);\n});\n\nexport default hoverModule;\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from '../../base/types';\nimport { MoveCommand, MoveMouseListener, LocationPostprocessor } from './move';\nimport { configureCommand } from \"../../base/commands/command-registration\";\n\nconst moveModule = new ContainerModule((bind, _unbind, isBound) => {\n    bind(MoveMouseListener).toSelf().inSingletonScope();\n    bind(TYPES.MouseListener).toService(MoveMouseListener);\n    configureCommand({ bind, isBound }, MoveCommand);\n    bind(LocationPostprocessor).toSelf().inSingletonScope();\n    bind(TYPES.IVNodePostprocessor).toService(LocationPostprocessor);\n    bind(TYPES.HiddenVNodePostprocessor).toService(LocationPostprocessor);\n});\n\nexport default moveModule;\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"../../base/types\";\nimport { OpenMouseListener } from \"./open\";\n\nconst openModule = new ContainerModule(bind => {\n    bind(OpenMouseListener).toSelf().inSingletonScope();\n    bind(TYPES.MouseListener).toService(OpenMouseListener);\n});\n\nexport default openModule;\n", "/********************************************************************************\n * Copyright (c) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"../../base/types\";\nimport { ManhattanEdgeRouter } from \"./manhattan-edge-router\";\nimport { PolylineEdgeRouter } from \"./polyline-edge-router\";\nimport { ManhattanRectangularAnchor, ManhattanEllipticAnchor, ManhattanDiamondAnchor } from \"./manhattan-anchors\";\nimport { RectangleAnchor, EllipseAnchor, DiamondAnchor } from \"./polyline-anchors\";\nimport { AnchorComputerRegistry } from \"./anchor\";\nimport { EdgeRouterRegistry } from \"./routing\";\nimport { AddRemoveBezierSegmentCommand, BezierEdgeRouter } from './bezier-edge-router';\nimport { BezierDiamondAnchor, BezierEllipseAnchor, BezierRectangleAnchor } from './bezier-anchors';\nimport { configureCommand } from \"../../base/commands/command-registration\";\n\nconst routingModule = new ContainerModule((bind, _unbind, isBound) => {\n    bind(EdgeRouterRegistry).toSelf().inSingletonScope();\n\n    bind(AnchorComputerRegistry).toSelf().inSingletonScope();\n\n    bind(ManhattanEdgeRouter).toSelf().inSingletonScope();\n    bind(TYPES.IEdgeRouter).toService(ManhattanEdgeRouter);\n    bind(TYPES.IAnchorComputer).to(ManhattanEllipticAnchor).inSingletonScope();\n    bind(TYPES.IAnchorComputer).to(ManhattanRectangularAnchor).inSingletonScope();\n    bind(TYPES.IAnchorComputer).to(ManhattanDiamondAnchor).inSingletonScope();\n\n    bind(PolylineEdgeRouter).toSelf().inSingletonScope();\n    bind(TYPES.IEdgeRouter).toService(PolylineEdgeRouter);\n    bind(TYPES.IAnchorComputer).to(EllipseAnchor);\n    bind(TYPES.IAnchorComputer).to(RectangleAnchor);\n    bind(TYPES.IAnchorComputer).to(DiamondAnchor);\n\n    bind(BezierEdgeRouter).toSelf().inSingletonScope();\n    bind(TYPES.IEdgeRouter).toService(BezierEdgeRouter);\n    bind(TYPES.IAnchorComputer).to(BezierEllipseAnchor);\n    bind(TYPES.IAnchorComputer).to(BezierRectangleAnchor);\n    bind(TYPES.IAnchorComputer).to(BezierDiamondAnchor);\n\n    configureCommand({ bind, isBound }, AddRemoveBezierSegmentCommand);\n});\n\nexport default routingModule;\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"../../base/types\";\nimport { SelectCommand, SelectAllCommand, SelectKeyboardListener, SelectMouseListener, GetSelectionCommand } from \"./select\";\nimport { configureCommand } from \"../../base/commands/command-registration\";\n\nconst selectModule = new ContainerModule((bind, _unbind, isBound) => {\n    configureCommand({ bind, isBound }, SelectCommand);\n    configureCommand({ bind, isBound }, SelectAllCommand);\n    configureCommand({ bind, isBound }, GetSelectionCommand);\n    bind(SelectKeyboardListener).toSelf().inSingletonScope();\n    bind(TYPES.KeyListener).toService(SelectKeyboardListener);\n    bind(SelectMouseListener).toSelf().inSingletonScope();\n    bind(TYPES.MouseListener).toService(SelectMouseListener);\n});\n\nexport default selectModule;\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"../../base/types\";\nimport { UndoRedoKeyListener } from \"./undo-redo\";\n\nconst undoRedoModule = new ContainerModule(bind => {\n    bind(UndoRedoKeyListener).toSelf().inSingletonScope();\n    bind(TYPES.KeyListener).toService(UndoRedoKeyListener);\n});\n\nexport default undoRedoModule;\n", "/********************************************************************************\n * Copyright (c) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { configureCommand } from \"../../base/commands/command-registration\";\nimport { UpdateModelCommand } from \"./update-model\";\n\nconst updateModule = new ContainerModule((bind, _unbind, isBound) => {\n    configureCommand({ bind, isBound }, UpdateModelCommand);\n});\n\nexport default updateModule;\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"../../base/types\";\nimport { CenterCommand, CenterKeyboardListener, FitToScreenCommand } from \"./center-fit\";\nimport { SetViewportCommand, GetViewportCommand } from \"./viewport\";\nimport { ScrollMouseListener } from \"./scroll\";\nimport { ZoomMouseListener } from \"./zoom\";\nimport { configureCommand } from \"../../base/commands/command-registration\";\n\nconst viewportModule = new ContainerModule((bind , _unbind, isBound) => {\n    configureCommand({ bind, isBound }, CenterCommand);\n    configureCommand({ bind, isBound }, FitToScreenCommand);\n    configureCommand({ bind, isBound }, SetViewportCommand);\n    configureCommand({ bind, isBound }, GetViewportCommand);\n    bind(CenterKeyboardListener).toSelf().inSingletonScope();\n    bind(TYPES.KeyListener).toService(CenterKeyboardListener);\n    bind(ScrollMouseListener).toSelf().inSingletonScope();\n    bind(ZoomMouseListener).toSelf().inSingletonScope();\n    bind(TYPES.MouseListener).toService(ScrollMouseListener);\n    bind(TYPES.MouseListener).toService(ZoomMouseListener);\n});\n\nexport default viewportModule;\n", "/********************************************************************************\n * Copyright (c) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { configureCommand } from \"../../base/commands/command-registration\";\nimport { BringToFrontCommand } from './zorder';\n\nconst zorderModule = new ContainerModule((bind, _unbind, isBound) => {\n    configureCommand({ bind, isBound }, BringToFrontCommand);\n});\n\nexport default zorderModule;\n", "/********************************************************************************\n * Copyright (c) 2017-2022 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/** @jsx svg */\nimport { inject, injectable } from 'inversify';\nimport { VNode } from \"snabbdom\";\nimport { Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { getSubType } from 'sprotty-protocol/lib/utils/model-utils';\nimport { IView, IViewArgs, RenderingContext } from \"../base/views/view\";\nimport { setAttr } from '../base/views/vnode-utils';\nimport { ShapeView } from '../features/bounds/views';\nimport {\n    BY_DESCENDING_X_THEN_DESCENDING_Y,\n    BY_DESCENDING_X_THEN_Y,\n    BY_X_THEN_DESCENDING_Y,\n    BY_X_THEN_Y,\n    IntersectingRoutedPoint,\n    Intersection,\n    isIntersectingRoutedPoint\n} from '../features/edge-intersection/intersection-finder';\nimport { isEdgeLayoutable } from '../features/edge-layout/model';\nimport { SRoutableElement, SRoutingHandle } from '../features/routing/model';\nimport { EdgeRouterRegistry, RoutedPoint } from '../features/routing/routing';\nimport { RoutableView } from '../features/routing/views';\nimport { svg } from '../lib/jsx';\nimport { PointToPointLine } from '../utils/geometry';\nimport { SCompartment, SEdge, SGraph, SLabel } from \"./sgraph\";\n\n/**\n * IView component that turns an SGraph element and its children into a tree of virtual DOM elements.\n */\n@injectable()\nexport class SGraphView implements IView {\n\n    @inject(EdgeRouterRegistry) edgeRouterRegistry: EdgeRouterRegistry;\n\n    render(model: Readonly<SGraph>, context: RenderingContext): VNode {\n        const edgeRouting = this.edgeRouterRegistry.routeAllChildren(model);\n        const transform = `scale(${model.zoom}) translate(${-model.scroll.x},${-model.scroll.y})`;\n        return <svg class-sprotty-graph={true}>\n            <g transform={transform}>\n                {context.renderChildren(model, { edgeRouting })}\n            </g>\n        </svg>;\n    }\n\n}\n\n@injectable()\nexport class PolylineEdgeView extends RoutableView {\n\n    @inject(EdgeRouterRegistry) edgeRouterRegistry: EdgeRouterRegistry;\n\n    render(edge: Readonly<SEdge>, context: RenderingContext, args?: IViewArgs): VNode | undefined {\n        const route = this.edgeRouterRegistry.route(edge, args);\n        if (route.length === 0) {\n            return this.renderDanglingEdge(\"Cannot compute route\", edge, context);\n        }\n        if (!this.isVisible(edge, route, context)) {\n            if (edge.children.length === 0) {\n                return undefined;\n            }\n            // The children of an edge are not necessarily inside the bounding box of the route,\n            // so we need to render a group to ensure the children have a chance to be rendered.\n            return <g>{context.renderChildren(edge, { route })}</g>;\n        }\n\n        return <g class-sprotty-edge={true} class-mouseover={edge.hoverFeedback}>\n            {this.renderLine(edge, route, context, args)}\n            {this.renderAdditionals(edge, route, context)}\n            {context.renderChildren(edge, { route })}\n        </g>;\n    }\n\n    protected renderLine(edge: SEdge, segments: Point[], context: RenderingContext, args?: IViewArgs): VNode {\n        const firstPoint = segments[0];\n        let path = `M ${firstPoint.x},${firstPoint.y}`;\n        for (let i = 1; i < segments.length; i++) {\n            const p = segments[i];\n            path += ` L ${p.x},${p.y}`;\n        }\n        return <path d={path} />;\n    }\n\n    protected renderAdditionals(edge: SEdge, segments: Point[], context: RenderingContext): VNode[] {\n        // here we need to render the control points?\n        return [];\n    }\n\n    protected renderDanglingEdge(message: string, edge: SEdge, context: RenderingContext): VNode {\n        return <text class-sprotty-edge-dangling={true} title={message}>?</text>;\n    }\n}\n\n/**\n * A `PolylineEdgeView` that renders jumps over intersections.\n *\n * In order to find intersections, `IntersectionFinder` needs to be configured as a `TYPES.IEdgeRoutePostprocessor`\n * so that that intersections are declared as `IntersectingRoutedPoint` in the computed routes.\n *\n * This view only draws correct line jumps for intersections among straight line segments and doesn't work with bezier curves.\n *\n * @see IntersectionFinder\n * @see IntersectingRoutedPoint\n * @see EdgeRouterRegistry\n */\n@injectable()\nexport class JumpingPolylineEdgeView extends PolylineEdgeView {\n\n    protected jumpOffsetBefore = 5;\n    protected jumpOffsetAfter = 5;\n    protected skipOffsetBefore = 3;\n    protected skipOffsetAfter = 2;\n\n    protected override renderLine(edge: SEdge, segments: Point[], context: RenderingContext, args?: IViewArgs): VNode {\n        let path = '';\n        for (let i = 0; i < segments.length; i++) {\n            const p = segments[i];\n            if (i === 0) {\n                path = `M ${p.x},${p.y}`;\n            }\n            if (isIntersectingRoutedPoint(p)) {\n                path += this.intersectionPath(edge, segments, p, args);\n            }\n            if (i !== 0) {\n                path += ` L ${p.x},${p.y}`;\n            }\n        }\n        return <path d={path} />;\n    }\n\n    /**\n     * Returns a path that takes the intersections into account by drawing a line jump or a gap for intersections on that path.\n     */\n    protected intersectionPath(edge: SEdge, segments: Point[], intersectingPoint: IntersectingRoutedPoint, args?: IViewArgs): string {\n        if (intersectingPoint.intersections.length < 1) {\n            return '';\n        }\n\n        const segment = this.getLineSegment(edge, intersectingPoint.intersections[0], args, segments);\n        const intersections = this.getIntersectionsSortedBySegmentDirection(segment, intersectingPoint);\n\n        let path = '';\n        for (const intersection of intersections) {\n            const otherLineSegment = this.getOtherLineSegment(edge, intersection, args);\n            if (otherLineSegment === undefined) {\n                continue;\n            }\n            const currentLineSegment = this.getLineSegment(edge, intersection, args, segments);\n            const intersectionPoint = intersection.intersectionPoint;\n            if (this.shouldDrawLineJumpOnIntersection(currentLineSegment, otherLineSegment)) {\n                path += this.createJumpPath(intersectionPoint, currentLineSegment);\n            } else if (this.shouldDrawLineGapOnIntersection(currentLineSegment, otherLineSegment)) {\n                path += this.createGapPath(intersectionPoint, currentLineSegment);\n            }\n        }\n\n        return path;\n    }\n\n    /**\n     * Returns the intersections sorted by the direction of the `lineSegment`.\n     *\n     * The coordinate system goes from left to right and top to bottom.\n     * Thus, x increases to the right and y increases downwards.\n     *\n     * We need to draw the intersections in the order of the direction of the line segment.\n     * To draw a line pointing north, we need to order intersections by Y in a descending order.\n     * To draw a line pointing south, we need to order intersections by Y in an ascending order.\n     */\n    protected getIntersectionsSortedBySegmentDirection(lineSegment: PointToPointLine, intersectingPoint: IntersectingRoutedPoint) {\n        switch (lineSegment.direction) {\n            case 'north':\n            case 'north-east':\n                return intersectingPoint.intersections.sort(BY_X_THEN_DESCENDING_Y);\n\n            case 'south':\n            case 'south-east':\n            case 'east':\n                return intersectingPoint.intersections.sort(BY_X_THEN_Y);\n\n            case 'south-west':\n            case 'west':\n                return intersectingPoint.intersections.sort(BY_DESCENDING_X_THEN_Y);\n\n            case 'north-west':\n                return intersectingPoint.intersections.sort(BY_DESCENDING_X_THEN_DESCENDING_Y);\n        }\n    }\n\n    /**\n     * Whether or not to draw a line jump on an intersection for the `currentLineSegment`.\n     * This should usually be inverse of `shouldDrawLineGapOnIntersection()`.\n     */\n    protected shouldDrawLineJumpOnIntersection(currentLineSegment: PointToPointLine, otherLineSegment: PointToPointLine) {\n        return Math.abs(currentLineSegment.slopeOrMax) < Math.abs(otherLineSegment.slopeOrMax);\n    }\n\n    /**\n     * Whether or not to draw a line gap on an intersection for the `currentLineSegment`.\n     * This should usually be inverse of `shouldDrawLineJumpOnIntersection()`.\n     */\n    protected shouldDrawLineGapOnIntersection(currentLineSegment: PointToPointLine, otherLineSegment: PointToPointLine) {\n        return !this.shouldDrawLineJumpOnIntersection(currentLineSegment, otherLineSegment);\n    }\n\n    protected getLineSegment(edge: SRoutableElement, intersection: Intersection, args?: IViewArgs, segments?: Point[]): PointToPointLine {\n        const route = segments ? segments : this.edgeRouterRegistry.route(edge, args);\n        const index = intersection.routable1 === edge.id ? intersection.segmentIndex1 : intersection.segmentIndex2;\n        return new PointToPointLine(route[index], route[index + 1]);\n    }\n\n    protected getOtherLineSegment(currentEdge: SEdge, intersection: Intersection, args?: IViewArgs): PointToPointLine | undefined {\n        const otherEdgeId = intersection.routable1 === currentEdge.id ? intersection.routable2 : intersection.routable1;\n        const otherEdge = currentEdge.index.getById(otherEdgeId);\n        if (!(otherEdge instanceof SRoutableElement)) {\n            return undefined;\n        }\n        return this.getLineSegment(otherEdge, intersection, args);\n    }\n\n    protected createJumpPath(intersectionPoint: Point, lineSegment: PointToPointLine): string {\n        const anchorBefore = Point.shiftTowards(intersectionPoint, lineSegment.p1, this.jumpOffsetBefore);\n        const anchorAfter = Point.shiftTowards(intersectionPoint, lineSegment.p2, this.jumpOffsetAfter);\n        const rotation = lineSegment.p1.x < lineSegment.p2.x ? 1 : 0;\n        return ` L ${anchorBefore.x},${anchorBefore.y} A 1,1 0,0 ${rotation} ${anchorAfter.x},${anchorAfter.y}`;\n    }\n\n    protected createGapPath(intersectionPoint: Point, lineSegment: PointToPointLine): string {\n        let offsetBefore;\n        let offsetAfter;\n        if (intersectionPoint.y < lineSegment.p1.y) {\n            offsetBefore = -this.skipOffsetBefore;\n            offsetAfter = this.jumpOffsetAfter + this.skipOffsetAfter;\n        } else {\n            offsetBefore = this.jumpOffsetBefore + this.skipOffsetAfter;\n            offsetAfter = -this.skipOffsetBefore;\n        }\n        const anchorBefore = Point.shiftTowards(intersectionPoint, lineSegment.p1, offsetBefore);\n        const anchorAfter = Point.shiftTowards(intersectionPoint, lineSegment.p2, offsetAfter);\n        return ` L ${anchorBefore.x},${anchorBefore.y} M ${anchorAfter.x},${anchorAfter.y}`;\n    }\n\n}\n\n/**\n * A `PolylineEdgeView` that renders gaps on intersections.\n *\n * In order to find intersections, `IntersectionFinder` needs to be configured as a `TYPES.IEdgeRoutePostprocessor`\n * so that that intersections are declared as `IntersectingRoutedPoint` in the computed routes.\n *\n * This view only draws correct gaps for intersections among straight line segments and doesn't work with bezier curves.\n *\n * @see IntersectionFinder\n * @see IntersectingRoutedPoint\n * @see EdgeRouterRegistry\n */\n@injectable()\nexport class PolylineEdgeViewWithGapsOnIntersections extends JumpingPolylineEdgeView {\n\n    protected override skipOffsetBefore = 3;\n    protected override skipOffsetAfter = 3;\n\n    protected override shouldDrawLineJumpOnIntersection(currentLineSegment: PointToPointLine, otherLineSegment: PointToPointLine) {\n        return false;\n    }\n\n    protected override shouldDrawLineGapOnIntersection(currentLineSegment: PointToPointLine, otherLineSegment: PointToPointLine) {\n        return Math.abs(currentLineSegment.slopeOrMax) >= Math.abs(otherLineSegment.slopeOrMax);\n    }\n\n    protected override createGapPath(intersectionPoint: Point, lineSegment: PointToPointLine): string {\n        const anchorBefore = Point.shiftTowards(intersectionPoint, lineSegment.p1, this.skipOffsetBefore);\n        const anchorAfter = Point.shiftTowards(intersectionPoint, lineSegment.p2, this.skipOffsetAfter);\n        return ` L ${anchorBefore.x},${anchorBefore.y} M ${anchorAfter.x},${anchorAfter.y}`;\n    }\n\n}\n\n@injectable()\nexport class BezierCurveEdgeView extends RoutableView {\n\n    @inject(EdgeRouterRegistry) edgeRouterRegistry: EdgeRouterRegistry;\n\n    render(edge: Readonly<SEdge>, context: RenderingContext, args?: IViewArgs): VNode | undefined {\n        const route = this.edgeRouterRegistry.route(edge, args);\n        if (route.length === 0) {\n            return this.renderDanglingEdge(\"Cannot compute route\", edge, context);\n        }\n        if (!this.isVisible(edge, route, context)) {\n            if (edge.children.length === 0) {\n                return undefined;\n            }\n            // The children of an edge are not necessarily inside the bounding box of the route,\n            // so we need to render a group to ensure the children have a chance to be rendered.\n            return <g>{context.renderChildren(edge, { route })}</g>;\n        }\n\n        return <g class-sprotty-edge={true} class-mouseover={edge.hoverFeedback}>\n            {this.renderLine(edge, route, context, args)}\n            {this.renderAdditionals(edge, route, context)}\n            {context.renderChildren(edge, { route })}\n        </g>;\n    }\n\n    protected renderLine(edge: SEdge, segments: Point[], context: RenderingContext, args?: IViewArgs): VNode {\n        /**\n         * Example for two splines:\n         * SVG:\n         * <path d=\"M0,300 C0,150 300,150 300,300 S600,450 600,300\" />\n         *\n         * Segments input layout:\n         * routingPoints[0] = source;\n         * routingPoints[1] = controlForSource;\n         * routingPoints[2] = controlForSegment1;\n         * routingPoints[3] = segment;\n         * routingPoints[4] = controlForSegment2;\n         * routingPoints[5] = controlForTarget;\n         * routingPoints[6] = target;\n         */\n        let path = '';\n        if (segments.length >= 4) {\n            path += this.buildMainSegment(segments);\n            const pointsLeft = segments.length - 4;\n            if (pointsLeft > 0 && pointsLeft % 3 === 0) {\n                for (let i = 4; i < segments.length; i += 3) {\n                    path += this.addSpline(segments, i);\n                }\n            }\n        }\n        return <path d={path} />;\n    }\n\n    private buildMainSegment(segments: Point[]) {\n        const s = segments[0];\n        const h1 = segments[1];\n        const h2 = segments[2];\n        const t = segments[3];\n        return `M${s.x},${s.y} C${h1.x},${h1.y} ${h2.x},${h2.y} ${t.x},${t.y}`;\n    }\n\n    private addSpline(segments: Point[], index: number) {\n        // We have two controls for each junction, but SVG does not therefore index is jumped over\n        const c = segments[index + 1];\n        const p = segments[index + 2];\n        return ` S${c.x},${c.y} ${p.x},${p.y}`;\n    }\n\n    protected renderAdditionals(edge: SEdge, segments: Point[], context: RenderingContext): VNode[] {\n        return [];\n    }\n\n    protected renderDanglingEdge(message: string, edge: SEdge, context: RenderingContext): VNode {\n        return <text class-sprotty-edge-dangling={true} title={message}>?</text>;\n    }\n}\n\n@injectable()\nexport class SRoutingHandleView implements IView {\n\n    @inject(EdgeRouterRegistry) edgeRouterRegistry: EdgeRouterRegistry;\n\n    minimalPointDistance: number = 10;\n\n    render(handle: Readonly<SRoutingHandle>, context: RenderingContext, args?: { route?: RoutedPoint[] }): VNode {\n        if (args && args.route) {\n            if (handle.parent instanceof SRoutableElement) {\n                const router = this.edgeRouterRegistry.get(handle.parent.routerKind);\n                const theRoute = args.route === undefined ? this.edgeRouterRegistry.route(handle.parent, args) : args.route;\n                const position = router.getHandlePosition(handle.parent, theRoute, handle);\n                if (position !== undefined) {\n                    const node = <circle class-sprotty-routing-handle={true}\n                        class-selected={handle.selected} class-mouseover={handle.hoverFeedback}\n                        cx={position.x} cy={position.y} r={this.getRadius()} />;\n                    setAttr(node, 'data-kind', handle.kind);\n                    return node;\n                }\n            }\n        }\n        // Fallback: Create an empty group\n        return <g />;\n    }\n\n    getRadius(): number {\n        return 7;\n    }\n}\n\n@injectable()\nexport class SLabelView extends ShapeView {\n    render(label: Readonly<SLabel>, context: RenderingContext): VNode | undefined {\n        if (!isEdgeLayoutable(label) && !this.isVisible(label, context)) {\n            return undefined;\n        }\n        const vnode = <text class-sprotty-label={true}>{label.text}</text>;\n        const subType = getSubType(label);\n        if (subType) {\n            setAttr(vnode, 'class', subType);\n        }\n        return vnode;\n    }\n}\n\n@injectable()\nexport class SCompartmentView implements IView {\n    render(compartment: Readonly<SCompartment>, context: RenderingContext, args?: IViewArgs): VNode | undefined {\n        const translate = `translate(${compartment.bounds.x}, ${compartment.bounds.y})`;\n        const vnode = <g transform={translate} class-sprotty-comp=\"{true}\">\n            {context.renderChildren(compartment)}\n        </g>;\n        const subType = getSubType(compartment);\n        if (subType)\n            setAttr(vnode, 'class', subType);\n        return vnode;\n    }\n}\n\n@injectable()\nexport class SBezierCreateHandleView extends SRoutingHandleView {\n\n    override render(handle: Readonly<SRoutingHandle>, context: RenderingContext, args?: { route?: RoutedPoint[] }): VNode {\n        if (args) {\n            const theRoute = args.route;\n            if (theRoute && handle.parent instanceof SRoutableElement) {\n                const router = this.edgeRouterRegistry.get(handle.parent.routerKind);\n                const position = router.getHandlePosition(handle.parent, theRoute, handle);\n                if (position !== undefined) {\n\n                    const translation = \"translate(\" + position.x + \", \" + position.y + \")\";\n                    const textOffsetX = -5.5;\n                    const textOffsetY = 5.5;\n                    const text = (handle.kind === \"bezier-add\") ? \"+\" : \"-\";\n                    const node =\n                        <g transform={translation} class-sprotty-routing-handle={true}\n                            class-selected={handle.selected} class-mouseover={handle.hoverFeedback}>\n                            <circle r={this.getRadius()} />\n                            <text x={textOffsetX} y={textOffsetY} attrs-text-align=\"middle\"\n                                style-font-family=\"monospace\" style-pointer-events=\"none\" style-fill=\"white\">{text}</text>\n                        </g>;\n                    setAttr(node, 'data-kind', handle.kind);\n                    return node;\n                }\n            }\n        }\n        // Fallback: Create an empty group\n        return <g />;\n    }\n}\n\n@injectable()\nexport class SBezierControlHandleView extends SRoutingHandleView {\n\n    override render(handle: Readonly<SRoutingHandle>, context: RenderingContext, args?: { route?: RoutedPoint[] }): VNode {\n        if (args) {\n            const theRoute = args.route;\n            if (theRoute && handle.parent instanceof SRoutableElement) {\n                const router = this.edgeRouterRegistry.get(handle.parent.routerKind);\n                const position = router.getHandlePosition(handle.parent, theRoute, handle) as any;\n                if (position !== undefined) {\n\n                    let pathEndPos: Point | undefined;\n                    for (let i = 0; i < theRoute.length; i++) {\n                        const elem = theRoute[i];\n                        if (elem.kind === position.kind && elem.pointIndex === position.pointIndex) {\n                            if (handle.kind === 'bezier-control-before') {\n                                pathEndPos = theRoute[i + 1];\n                            } else {\n                                pathEndPos = theRoute[i - 1];\n                            }\n                            break;\n                        }\n                    }\n\n                    let node;\n                    if (pathEndPos) {\n                        const coords = `M ${position.x}, ${position.y} L ${pathEndPos.x}, ${pathEndPos.y}`;\n                        node =\n                            <g class-sprotty-routing-handle={true} class-selected={handle.selected} class-mouseover={handle.hoverFeedback}>\n                                <path d={coords} stroke=\"grey\" style-stroke-width=\"2px\"></path>\n                                <circle cx={position.x} cy={position.y} r={this.getRadius()} />\n                            </g>;\n                    } else {\n                        node = <circle class-sprotty-routing-handle={true} class-selected={handle.selected} class-mouseover={handle.hoverFeedback}\n                            cx={position.x} cy={position.y} r={this.getRadius()} />;\n                    }\n\n                    setAttr(node, 'data-kind', handle.kind);\n                    return node;\n                }\n            }\n        }\n        // Fallback: Create an empty group\n        return <g />;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { configureCommand } from \"../base/commands/command-registration\";\nimport { TYPES } from \"../base/types\";\nimport { CommitModelCommand } from \"./commit-model\";\nimport { ComputedBoundsApplicator, ModelSource } from \"./model-source\";\n\n/**\n * This container module does NOT provide any binding for TYPES.ModelSource because that needs to be\n * done according to the needs of the application. You can choose between a local (LocalModelSource)\n * and a remote (e.g. WebSocketDiagramServer) implementation.\n */\nconst modelSourceModule = new ContainerModule((bind, _unbind, isBound) => {\n    bind(TYPES.ModelSourceProvider).toProvider<ModelSource>((context) => {\n        return () => {\n            return new Promise<ModelSource>((resolve) => {\n                resolve(context.container.get<ModelSource>(TYPES.ModelSource));\n            });\n        };\n    });\n    configureCommand({bind, isBound}, CommitModelCommand);\n    bind(TYPES.IActionHandlerInitializer).toService(TYPES.ModelSource);\n    bind(ComputedBoundsApplicator).toSelf().inSingletonScope();\n});\n\nexport default modelSourceModule;\n", "/********************************************************************************\n * Copyright (c) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Container, ContainerModule } from 'inversify';\nimport defaultModule from '../base/di.config';\nimport modelSourceModule from '../model-source/di.config';\nimport boundsModule from '../features/bounds/di.config';\nimport buttonModule from '../features/button/di.config';\nimport commandPaletteModule from '../features/command-palette/di.config';\nimport contextMenuModule from '../features/context-menu/di.config';\nimport decorationModule from '../features/decoration/di.config';\nimport edgeLayoutModule from '../features/edge-layout/di.config';\nimport { edgeEditModule, labelEditModule, labelEditUiModule } from '../features/edit/di.config';\nimport expandModule from '../features/expand/di.config';\nimport exportModule from '../features/export/di.config';\nimport fadeModule from '../features/fade/di.config';\nimport hoverModule from '../features/hover/di.config';\nimport moveModule from '../features/move/di.config';\nimport openModule from '../features/open/di.config';\nimport routingModule from '../features/routing/di.config';\nimport selectModule from '../features/select/di.config';\nimport undoRedoModule from '../features/undo-redo/di.config';\nimport updateModule from '../features/update/di.config';\nimport viewportModule from '../features/viewport/di.config';\nimport zorderModule from '../features/zorder/di.config';\n\nexport interface LoadModuleOptions {\n    exclude?: ContainerModule[]\n}\n\n/**\n * Load the default set of container modules provided by Sprotty.\n */\nexport function loadDefaultModules(container: Container, options?: LoadModuleOptions) {\n    const modules = [\n        defaultModule, modelSourceModule, boundsModule, buttonModule,\n        commandPaletteModule, contextMenuModule, decorationModule, edgeEditModule,\n        edgeLayoutModule, expandModule, exportModule, fadeModule,\n        hoverModule, labelEditModule, labelEditUiModule, moveModule,\n        openModule, routingModule, selectModule, undoRedoModule,\n        updateModule, viewportModule, zorderModule\n    ];\n    if (options && options.exclude) {\n        for (const mod of options.exclude) {\n            const index = modules.indexOf(mod);\n            if (index >= 0)\n                modules.splice(index, 1);\n        }\n    }\n    container.load(...modules);\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { h, vnode, VNode, VNodeData } from 'snabbdom';\n\nfunction buildVNodeData(attrs: { [key: string]: string }) {\n    const data: VNodeData = {};\n    const addData = (memo: Record<string, string> | null, name: string) => {\n        if (name !== 'style' && name !== 'class') {\n            const val = unescapeEntities(attrs[name]);\n            memo ? memo[name] = val : memo = { [name]: val };\n        }\n        return memo;\n    };\n    const _attrs = Object.keys(attrs).reduce(addData, null);\n\n    if (_attrs) {\n        data.attrs = _attrs;\n    }\n\n    const style = parseStyle(attrs);\n    if (style) {\n        data.style = style;\n    }\n\n    const classes = parseClass(attrs);\n    if (classes) {\n        data.class = classes;\n    }\n    return data;\n}\n\nfunction parseStyle(attrs: { [key: string]: string }) {\n    const addStyle = (memo: Record<string, string> | null, styleProp: string) => {\n        const res = styleProp.split(':');\n        const name = transformName(res[0].trim());\n        if (name) {\n            const val = res[1].replace('!important', '').trim();\n            memo ? memo[name] = val : memo = { [name]: val };\n        }\n        return memo;\n    };\n    try {\n        return attrs.style.split(';').reduce(addStyle, null);\n    } catch (e) {\n        return null;\n    }\n}\n\nfunction parseClass(attrs: { [key: string]: string }) {\n    const addClass = (memo: Record<string, boolean> | null, className: string) => {\n        className = className.trim();\n        if (className) {\n            memo ? memo[className] = true : memo = { [className]: true };\n        }\n        return memo;\n    };\n    try {\n        return attrs.class.split(' ').reduce(addClass, null);\n    } catch (e) {\n        return null;\n    }\n}\n\nfunction transformName(name: string) {\n    // Replace -a with A to help camel case style property names.\n    name = name.replace(/-(\\w)/g, function _replace($1, $2) {\n        return $2.toUpperCase();\n    });\n    // Handle properties that start with a -.\n    const firstChar = name.charAt(0).toLowerCase();\n    return `${firstChar}${name.substring(1)}`;\n}\n\n// Regex for matching HTML entities.\nconst entityRegex = new RegExp('&[a-z0-9#]+;', 'gi');\n// Element for setting innerHTML for transforming entities.\nlet el: HTMLDivElement | null = null;\n\nfunction unescapeEntities(text: string) {\n    // Create the element using the context if it doesn't exist.\n    if (!el) {\n        el = document.createElement('div');\n    }\n    return text.replace(entityRegex, (entity) => {\n        if (el === null) return '';\n        el.innerHTML = entity;\n        return el.textContent === null ? '' : el.textContent;\n    });\n}\n\nfunction recurse(doc: Node, func: (node: Node, parent: Node | null) => void) {\n    let node: Node | null = doc;\n    let parent: Node | null = null;\n    const stack: Node[] = [];\n\n    const setChild = (n: Node) => {\n        const child = n.firstChild;\n        if (child !== null) {\n            parent = n;\n        }\n        node = child;\n    };\n    func(node, parent);\n    setChild(node);\n\n    while (true) {\n        while (node) {\n            stack.push(node);\n            func(node, parent);\n            setChild(node);\n        }\n        const _node = stack.pop();\n        node = _node ? _node : null;\n        if (!stack.length) break;\n        parent = stack[stack.length - 1];\n        if (node) {\n            const sibling = node.nextSibling;\n            if (sibling == null) {\n                parent = stack[stack.length - 1];\n            }\n            node = sibling;\n        }\n    }\n}\n\nlet vdom: VNode | null = null;\nconst vnodeMap = new Map<Node, VNode>();\nlet delimited = false;\n\nfunction toVNode(node: Node, parent: Node | null) {\n\n    let current: VNode | undefined;\n    if (parent !== null) {\n        current = vnodeMap.get(parent);\n    }\n\n    switch (node?.nodeType) {\n        // element\n        case 1: {\n            if (current === undefined) return;\n            current.children = current.children ? current.children : [];\n            const children = current.children;\n            const attributes = (node as Element).attributes;\n            const attrs: { [key: string]: string } = {};\n            for (let i = 0; i < attributes.length; i++) {\n                const attr = attributes.item(i);\n                if (attr) {\n                    attrs[attr.name] = attr.value;\n                }\n            }\n            const vn = h(node.nodeName, buildVNodeData(attrs));\n            children.push(vn);\n            vnodeMap.set(node, vn);\n            break;\n        }\n        // text\n        case 3: {\n            const text = node.textContent;\n            if (text !== null && current !== undefined) {\n                current.children = current.children ? current.children : [];\n                const children = current.children;\n                const lastData = children.length > 0 ? children[children.length - 1] : null;\n                if (!delimited && typeof lastData !== 'string' && lastData !== null && lastData.sel === undefined) {\n                    lastData.text = lastData.text + text;\n                } else {\n                    children.push(vnode(undefined, undefined, undefined, text, undefined));\n                }\n                delimited = false;\n            }\n            break;\n        }\n        case 8: {\n            delimited = true;\n            break;\n        }\n        // document\n        case 9: {\n            vdom = vnode(undefined, undefined, [], undefined, undefined);\n            vnodeMap.set(node, vdom);\n            break;\n        }\n        default:\n            break;\n    }\n}\n\nfunction stripVNode(vnodes: VNode | null) {\n    const children = vnodes?.children;\n    if (typeof children === 'undefined') return null;\n    if (children.length === 1 && typeof children[0] !== 'string') return children[0];\n    return null;\n}\n\nexport default function virtualizeString(html?: string) {\n\n    const parser = new window.DOMParser();\n    if (parser === undefined || html === undefined || html === '') return null;\n\n    const doc = parser.parseFromString(html, \"application/xml\");\n\n    if (doc?.firstChild?.nodeName === 'parsererror') {\n        const error = `${doc?.firstChild?.textContent}`;\n        return h('parsererror', [error]);\n    }\n\n    delimited = false;\n    vdom = null;\n    recurse(doc, toVNode);\n\n    if (vdom === null) return null;\n    return stripVNode(vdom);\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SModelElement as SModelElementSchema, SModelRoot as SModelRootSchema } from 'sprotty-protocol/lib/model';\nimport { Bounds, Dimension, Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { SModelRoot, SChildElement } from \"../base/model/smodel\";\nimport { BoundsAware, boundsFeature, Alignable, alignFeature, isBoundsAware } from \"../features/bounds/model\";\nimport { Locateable, moveFeature } from \"../features/move/model\";\nimport { Selectable, selectFeature } from \"../features/select/model\";\nimport { SNode, SPort } from '../graph/sgraph';\nimport { RECTANGULAR_ANCHOR_KIND, DIAMOND_ANCHOR_KIND, ELLIPTIC_ANCHOR_KIND } from \"../features/routing/anchor\";\n\n/**\n * A node that is represented by a circle.\n */\nexport class CircularNode extends SNode {\n    override get anchorKind() {\n        return ELLIPTIC_ANCHOR_KIND;\n    }\n}\n\n/**\n * A node that is represented by a rectangle.\n */\nexport class RectangularNode extends SNode {\n    override get anchorKind() {\n        return RECTANGULAR_ANCHOR_KIND;\n    }\n}\n\n/**\n * A node that is represented by a diamond.\n */\nexport class DiamondNode extends SNode {\n    override get anchorKind() {\n        return DIAMOND_ANCHOR_KIND;\n    }\n}\n\n/**\n * A port that is represented by a circle.\n */\nexport class CircularPort extends SPort {\n    override get anchorKind() {\n        return ELLIPTIC_ANCHOR_KIND;\n    }\n}\n\n/**\n * A port that is represented by a rectangle.\n */\nexport class RectangularPort extends SPort {\n    override get anchorKind() {\n        return RECTANGULAR_ANCHOR_KIND;\n    }\n}\n\n/**\n * Serializable schema for HtmlRoot.\n *\n * @deprecated Use `HtmlRoot` from `sprotty-protocol` instead.\n */\nexport interface HtmlRootSchema extends SModelRootSchema {\n    classes?: string[]\n}\n\n/**\n * Root model element class for HTML content. Usually this is rendered with a `div` DOM element.\n */\nexport class HtmlRoot extends SModelRoot {\n    classes: string[] = [];\n}\n\n/**\n * Serializable schema for PreRenderedElement.\n *\n * @deprecated Use `PreRenderedElement` from `sprotty-protocol` instead.\n */\nexport interface PreRenderedElementSchema extends SModelElementSchema {\n    code: string\n}\n\n/**\n * Pre-rendered elements contain HTML or SVG code to be transferred to the DOM. This can be useful to\n * render complex figures or to compute the view on the server instead of the client code.\n */\nexport class PreRenderedElement extends SChildElement {\n    code: string;\n}\n\n/**\n * Serializable schema for ShapedPreRenderedElement.\n *\n * @deprecated Use `ShapedPreRenderedElement` from `sprotty-protocol` instead.\n */\nexport interface ShapedPreRenderedElementSchema extends PreRenderedElementSchema {\n    position?: Point\n    size?: Dimension\n}\n\n/**\n * Same as PreRenderedElement, but with a position and a size.\n */\nexport class ShapedPreRenderedElement extends PreRenderedElement implements BoundsAware, Locateable, Selectable, Alignable {\n    static readonly DEFAULT_FEATURES = [moveFeature, boundsFeature, selectFeature, alignFeature];\n\n    position: Point = Point.ORIGIN;\n    size: Dimension = Dimension.EMPTY;\n    selected: boolean = false;\n    alignment: Point = Point.ORIGIN;\n\n    get bounds(): Bounds {\n        return {\n            x: this.position.x,\n            y: this.position.y,\n            width: this.size.width,\n            height: this.size.height\n        };\n    }\n\n    set bounds(newBounds: Bounds) {\n        this.position = {\n            x: newBounds.x,\n            y: newBounds.y\n        };\n        this.size = {\n            width: newBounds.width,\n            height: newBounds.height\n        };\n    }\n\n}\n\n/**\n * A `foreignObject` element to be transferred to the DOM within the SVG.\n *\n * This can be useful to to benefit from e.g. HTML rendering features, such as line wrapping, inside of\n * the SVG diagram.  Note that `foreignObject` is not supported by all browsers and SVG viewers may not\n * support rendering the `foreignObject` content.\n *\n * If no dimensions are specified in the schema element, this element will obtain the dimension of\n * its parent to fill the entire available room. Thus, this element requires specified bounds itself\n * or bounds to be available for its parent.\n */\nexport class ForeignObjectElement extends ShapedPreRenderedElement {\n    namespace: string;\n    override get bounds(): Bounds {\n        if (Dimension.isValid(this.size)) {\n            return {\n                x: this.position.x,\n                y: this.position.y,\n                width: this.size.width,\n                height: this.size.height\n            };\n        } else if (isBoundsAware(this.parent)) {\n            return {\n                x: this.position.x,\n                y: this.position.y,\n                width: this.parent.bounds.width,\n                height: this.parent.bounds.height\n            };\n        }\n        return Bounds.EMPTY;\n    }\n}\n\n/**\n * Serializable schema for ForeignObjectElement.\n *\n * @deprecated Use `ForeignObjectElement` from `sprotty-protocol` instead.\n */\nexport interface ForeignObjectElementSchema extends ShapedPreRenderedElementSchema {\n    /** The namespace to be assigned to the elements inside of the `foreignObject`. */\n    namespace: string\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/** @jsx svg */\nimport { svg }\u00A0from './jsx';\nimport { injectable } from \"inversify\";\nimport virtualize from \"./virtualize\";\nimport { VNode } from \"snabbdom\";\nimport { IView, RenderingContext } from \"../base/views/view\";\nimport { setNamespace, setAttr } from \"../base/views/vnode-utils\";\nimport { ShapeView } from \"../features/bounds/views\";\nimport { ForeignObjectElement, PreRenderedElement, ShapedPreRenderedElement } from \"./model\";\n\n@injectable()\nexport class PreRenderedView extends ShapeView {\n    render(model: Readonly<PreRenderedElement>, context: RenderingContext): VNode | undefined {\n        if (model instanceof ShapedPreRenderedElement && !this.isVisible(model, context)) {\n            return undefined;\n        }\n        const node = virtualize(model.code);\n        if (node === null) return undefined;\n        this.correctNamespace(node);\n        return node;\n    }\n\n    protected correctNamespace(node: VNode) {\n        if (node.sel === 'svg' || node.sel === 'g')\n            setNamespace(node, 'http://www.w3.org/2000/svg');\n    }\n}\n\n/**\n * An SVG `foreignObject` view with a namespace specified by the provided `ForeignObjectElement`.\n * Note that `foreignObject` may not be supported by all browsers or SVG viewers.\n */\n@injectable()\nexport class ForeignObjectView implements IView {\n    render(model: ForeignObjectElement, context: RenderingContext): VNode | undefined{\n        const foreignObjectContents = virtualize(model.code);\n        if (foreignObjectContents === null) return undefined;\n        const node = <g>\n            <foreignObject requiredFeatures='http://www.w3.org/TR/SVG11/feature#Extensibility'\n                height={model.bounds.height} width={model.bounds.width} x={0} y={0}>\n                {foreignObjectContents}\n            </foreignObject>\n            {context.renderChildren(model)}\n        </g>;\n        setAttr(node, 'class', model.type);\n        setNamespace(foreignObjectContents, model.namespace);\n        return node;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n /** @jsx html */\nimport { html }\u00A0from './jsx';\n\nimport { injectable } from 'inversify';\nimport { VNode } from 'snabbdom';\nimport { IView, RenderingContext } from '../base/views/view';\nimport { setClass } from '../base/views/vnode-utils';\nimport { HtmlRoot } from './model';\n\n/**\n * View for `HtmlRoot` elements. Typically this is used in hover popup boxes.\n */\n@injectable()\nexport class HtmlRootView implements IView {\n    render(model: HtmlRoot, context: RenderingContext): VNode {\n        const root = <div>\n            { context.renderChildren(model) }\n        </div>;\n        for (const c of model.classes) {\n            setClass(root, c, true);\n        }\n        return root;\n    }\n}\n", "/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { saveAs } from 'file-saver';\nimport { inject, injectable } from \"inversify\";\nimport { OpenAction } from 'sprotty-protocol';\nimport {\n    Action, CollapseExpandAction, CollapseExpandAllAction, ComputedBoundsAction, RequestModelAction,\n    RequestPopupModelAction, SetModelAction, UpdateModelAction\n} from 'sprotty-protocol/lib/actions';\nimport { SModelRoot as SModelRootSchema } from 'sprotty-protocol/lib/model';\nimport { hasOwnProperty } from 'sprotty-protocol/lib/utils/object';\nimport { ActionHandlerRegistry } from \"../base/actions/action-handler\";\nimport { ICommand } from \"../base/commands/command\";\nimport { SetModelCommand } from \"../base/features/set-model\";\nimport { TYPES } from \"../base/types\";\nimport { RequestBoundsCommand } from '../features/bounds/bounds-manipulation';\nimport { ExportSvgAction } from '../features/export/svg-exporter';\nimport { UpdateModelCommand } from \"../features/update/update-model\";\nimport { ILogger } from \"../utils/logging\";\nimport { ComputedBoundsApplicator, ModelSource } from \"./model-source\";\n\n/**\n * Wrapper for actions when transferring them between client and server via a DiagramServer.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface ActionMessage {\n    clientId: string\n    action: Action\n}\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport function isActionMessage(object: unknown): object is ActionMessage {\n    return hasOwnProperty(object, 'action');\n}\n\n/**\n * Sent by the external server when to signal a state change.\n */\nexport class ServerStatusAction {\n    static KIND = 'serverStatus';\n    kind = ServerStatusAction.KIND;\n    severity: string;\n    message: string;\n}\n\nconst receivedFromServerProperty = '__receivedFromServer';\n\n/**\n * A ModelSource that communicates with an external model provider, e.g.\n * a model editor.\n *\n * This class defines which actions are sent to and received from the\n * external model source.\n */\n@injectable()\nexport abstract class DiagramServerProxy extends ModelSource {\n\n    @inject(TYPES.ILogger) protected logger: ILogger;\n    @inject(ComputedBoundsApplicator) protected readonly computedBoundsApplicator: ComputedBoundsApplicator;\n\n    clientId: string;\n\n    protected currentRoot: SModelRootSchema = {\n        type: 'NONE',\n        id: 'ROOT'\n    };\n\n    protected lastSubmittedModelType: string;\n\n    override initialize(registry: ActionHandlerRegistry): void {\n        super.initialize(registry);\n\n        // Register this model source\n        registry.register(ComputedBoundsAction.KIND, this);\n        registry.register(RequestBoundsCommand.KIND, this);\n        registry.register(RequestPopupModelAction.KIND, this);\n        registry.register(CollapseExpandAction.KIND, this);\n        registry.register(CollapseExpandAllAction.KIND, this);\n        registry.register(OpenAction.KIND, this);\n        registry.register(ServerStatusAction.KIND, this);\n\n        if (!this.clientId)\n            this.clientId = this.viewerOptions.baseDiv;\n    }\n\n    handle(action: Action): void | ICommand | Action {\n        const forwardToServer = this.handleLocally(action);\n        if (forwardToServer)\n            this.forwardToServer(action);\n    }\n\n    protected forwardToServer(action: Action): void {\n        const message: ActionMessage = {\n            clientId: this.clientId,\n            action: action\n        };\n        this.logger.log(this, 'sending', message);\n        this.sendMessage(message);\n    }\n\n    protected abstract sendMessage(message: ActionMessage): void;\n\n    protected messageReceived(data: any): void {\n        const object = typeof(data) === 'string' ? JSON.parse(data) : data;\n        if (isActionMessage(object) && object.action) {\n            if (!object.clientId || object.clientId === this.clientId) {\n                (object.action as any)[receivedFromServerProperty] = true;\n                this.logger.log(this, 'receiving', object);\n                this.actionDispatcher.dispatch(object.action).then(() => {\n                    this.storeNewModel(object.action);\n                });\n            }\n        } else {\n            this.logger.error(this, 'received data is not an action message', object);\n        }\n    }\n\n    /**\n     * Check whether the given action should be handled locally. Returns true if the action should\n     * still be sent to the server, and false if it's only handled locally.\n     */\n    protected handleLocally(action: Action): boolean {\n        this.storeNewModel(action);\n        switch (action.kind) {\n            case ComputedBoundsAction.KIND:\n                return this.handleComputedBounds(action as ComputedBoundsAction);\n            case RequestModelAction.KIND:\n                return this.handleRequestModel(action as RequestModelAction);\n            case RequestBoundsCommand.KIND:\n                return false;\n            case ExportSvgAction.KIND:\n                return this.handleExportSvgAction(action as ExportSvgAction);\n            case ServerStatusAction.KIND:\n                return this.handleServerStateAction(action as ServerStatusAction);\n        }\n        return !(action as any)[receivedFromServerProperty];\n    }\n\n    /**\n     * Put the new model contained in the given action into the model storage, if there is any.\n     */\n    protected storeNewModel(action: Action): void {\n        if (action.kind === SetModelCommand.KIND\n            || action.kind === UpdateModelCommand.KIND\n            || action.kind === RequestBoundsCommand.KIND) {\n            const newRoot = (action as any).newRoot;\n            if (newRoot) {\n                this.currentRoot = newRoot as SModelRootSchema;\n                if (action.kind === SetModelCommand.KIND || action.kind === UpdateModelCommand.KIND) {\n                    this.lastSubmittedModelType = newRoot.type;\n                }\n            }\n        }\n    }\n\n    protected handleRequestModel(action: RequestModelAction): boolean {\n        const newOptions = {\n            needsClientLayout: this.viewerOptions.needsClientLayout,\n            needsServerLayout: this.viewerOptions.needsServerLayout,\n            ...action.options\n        };\n        const newAction = {\n            ...action,\n            options: newOptions\n        };\n        this.forwardToServer(newAction);\n        return false;\n    }\n\n    /**\n     * If the server requires to compute a layout, the computed bounds are forwarded. Otherwise they\n     * are applied to the current model locally and a model update is triggered.\n     */\n    protected handleComputedBounds(action: ComputedBoundsAction): boolean {\n        if (this.viewerOptions.needsServerLayout) {\n            return true;\n        } else {\n            const root = this.currentRoot;\n            this.computedBoundsApplicator.apply(root, action);\n            if (root.type === this.lastSubmittedModelType) {\n                this.actionDispatcher.dispatch(UpdateModelAction.create(root));\n            } else {\n                this.actionDispatcher.dispatch(SetModelAction.create(root));\n            }\n            this.lastSubmittedModelType = root.type;\n            return false;\n        }\n    }\n\n    protected handleExportSvgAction(action: ExportSvgAction): boolean {\n        const blob = new Blob([action.svg], {type: \"text/plain;charset=utf-8\"});\n        saveAs(blob, \"diagram.svg\");\n        return false;\n    }\n\n    protected handleServerStateAction(action: ServerStatusAction): boolean {\n        return false;\n    }\n\n    commitModel(newRoot: SModelRootSchema): Promise<SModelRootSchema> | SModelRootSchema {\n        const previousRoot = this.currentRoot;\n        this.currentRoot = newRoot;\n        return previousRoot;\n    }\n}\n\n/**\n * @deprecated Use `DiagramServerProxy` instead.\n */\nexport const DiagramServer = DiagramServerProxy;\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { saveAs } from 'file-saver';\nimport { inject, injectable, optional } from \"inversify\";\nimport {\n    Action, ComputedBoundsAction, RequestBoundsAction, RequestModelAction, RequestPopupModelAction,\n    SetModelAction, SetPopupModelAction, UpdateModelAction\n} from 'sprotty-protocol/lib/actions';\nimport { SModelElement as SModelElementSchema, SModelRoot as SModelRootSchema, Viewport } from 'sprotty-protocol/lib/model';\nimport { Bounds } from 'sprotty-protocol/lib/utils/geometry';\nimport { SModelIndex, findElement } from 'sprotty-protocol/lib/utils/model-utils';\nimport { ILogger } from \"../utils/logging\";\nimport { FluentIterable } from '../utils/iterable';\nimport { TYPES } from \"../base/types\";\nimport { ActionHandlerRegistry } from \"../base/actions/action-handler\";\nimport { EMPTY_ROOT } from '../base/model/smodel-factory';\nimport { GetViewportAction, ViewportResult } from '../features/viewport/viewport';\nimport { ExportSvgAction } from '../features/export/svg-exporter';\nimport { applyMatches, Match } from \"../features/update/model-matching\";\nimport { GetSelectionAction, SelectionResult } from '../features/select/select';\nimport { ModelSource, ComputedBoundsApplicator } from \"./model-source\";\n\n/**\n * A model source that allows to set and modify the model through function calls.\n * This class can be used as a facade over the action-based API of sprotty. It handles\n * actions for bounds calculation and model updates.\n */\n@injectable()\nexport class LocalModelSource extends ModelSource {\n\n    @inject(TYPES.ILogger) protected readonly logger: ILogger;\n    @inject(ComputedBoundsApplicator) protected readonly computedBoundsApplicator: ComputedBoundsApplicator;\n    @inject(TYPES.IPopupModelProvider)@optional() protected popupModelProvider?: IPopupModelProvider;\n    @inject(TYPES.IModelLayoutEngine)@optional() protected layoutEngine?: IModelLayoutEngine;\n\n    protected currentRoot: SModelRootSchema = EMPTY_ROOT;\n\n    /**\n     * The `type` property of the model root is used to determine whether a model update\n     * is a change of the previous model or a totally new one.\n     */\n    protected lastSubmittedModelType: string;\n\n    get model(): SModelRootSchema {\n        return this.currentRoot;\n    }\n\n    set model(root: SModelRootSchema) {\n        this.setModel(root);\n    }\n\n    override initialize(registry: ActionHandlerRegistry): void {\n        super.initialize(registry);\n\n        // Register this model source\n        registry.register(ComputedBoundsAction.KIND, this);\n        registry.register(RequestPopupModelAction.KIND, this);\n    }\n\n    /**\n     * Set the model without incremental update.\n     */\n    setModel(newRoot: SModelRootSchema): Promise<void> {\n        this.currentRoot = newRoot;\n        return this.submitModel(newRoot, false);\n    }\n\n    commitModel(newRoot: SModelRootSchema): Promise<SModelRootSchema> | SModelRootSchema {\n        const previousRoot = this.currentRoot;\n        this.currentRoot = newRoot;\n        return previousRoot;\n    }\n\n    /**\n     * Apply an incremental update to the model with an animation showing the transition to\n     * the new state. If `newRoot` is undefined, the current root is submitted; in that case\n     * it is assumed that it has been modified before.\n     */\n    updateModel(newRoot?: SModelRootSchema): Promise<void> {\n        if (newRoot === undefined) {\n            return this.submitModel(this.currentRoot, true);\n        } else {\n            this.currentRoot = newRoot;\n            return this.submitModel(newRoot, true);\n        }\n    }\n\n    /**\n     * Get the current selection from the model.\n     */\n    async getSelection(): Promise<FluentIterable<SModelElementSchema>> {\n        const res = await this.actionDispatcher.request<SelectionResult>(GetSelectionAction.create());\n        const result: SModelElementSchema[] = [];\n        this.gatherSelectedElements(this.currentRoot, new Set(res.selectedElementsIDs), result);\n        return result;\n    }\n\n    private gatherSelectedElements(element: SModelElementSchema, selected: Set<string>, result: SModelElementSchema[]): void {\n        if (selected.has(element.id)) {\n            result.push(element);\n        }\n        if (element.children) {\n            for (const child of element.children) {\n                this.gatherSelectedElements(child, selected, result);\n            }\n        }\n    }\n\n    /**\n     * Get the current viewport from the model.\n     */\n    async getViewport(): Promise<Viewport & { canvasBounds: Bounds }> {\n        const res = await this.actionDispatcher.request<ViewportResult>(GetViewportAction.create());\n        return {\n            scroll: res.viewport.scroll,\n            zoom: res.viewport.zoom,\n            canvasBounds: res.canvasBounds\n        };\n    }\n\n    /**\n     * If client layout is active, run a `RequestBoundsAction` and wait for the resulting\n     * `ComputedBoundsAction`, otherwise call `doSubmitModel(\u2026)` directly.\n     */\n    protected async submitModel(newRoot: SModelRootSchema, update: boolean | Match[], cause?: Action): Promise<void> {\n        if (this.viewerOptions.needsClientLayout) {\n            const computedBounds = await this.actionDispatcher.request<ComputedBoundsAction>(RequestBoundsAction.create(newRoot));\n            const index = this.computedBoundsApplicator.apply(this.currentRoot, computedBounds);\n            await this.doSubmitModel(newRoot, true, cause, index);\n        } else {\n            await this.doSubmitModel(newRoot, update, cause);\n        }\n    }\n\n    /**\n     * Submit the given model with an `UpdateModelAction` or a `SetModelAction` depending on the\n     * `update` argument. If available, the model layout engine is invoked first.\n     */\n    protected async doSubmitModel(newRoot: SModelRootSchema, update: boolean | Match[],\n            cause?: Action, index?: SModelIndex): Promise<void> {\n        if (this.layoutEngine !== undefined) {\n            try {\n                const layoutResult = this.layoutEngine.layout(newRoot, index);\n                if (layoutResult instanceof Promise)\n                    newRoot = await layoutResult;\n                else if (layoutResult !== undefined)\n                    newRoot = layoutResult;\n            } catch (error) {\n                this.logger.error(this, error.toString(), error.stack);\n            }\n        }\n\n        const lastSubmittedModelType = this.lastSubmittedModelType;\n        this.lastSubmittedModelType = newRoot.type;\n        if (cause && cause.kind === RequestModelAction.KIND && (cause as RequestModelAction).requestId) {\n            const request = cause as RequestModelAction;\n            await this.actionDispatcher.dispatch(SetModelAction.create(newRoot, request.requestId));\n        } else if (update && newRoot.type === lastSubmittedModelType) {\n            const input = Array.isArray(update) ? update : newRoot;\n            await this.actionDispatcher.dispatch(UpdateModelAction.create(input, { animate: true, cause }));\n        } else {\n            await this.actionDispatcher.dispatch(SetModelAction.create(newRoot));\n        }\n    }\n\n    /**\n     * Modify the current model with an array of matches.\n     */\n    applyMatches(matches: Match[]): Promise<void> {\n        const root = this.currentRoot;\n        applyMatches(root, matches);\n        return this.submitModel(root, matches);\n    }\n\n    /**\n     * Modify the current model by adding new elements.\n     */\n    addElements(elements: (SModelElementSchema | { element: SModelElementSchema, parentId: string })[]): Promise<void> {\n        const matches: Match[] = [];\n        for (const e of elements) {\n            const anye: any = e;\n            if (anye.element !== undefined && anye.parentId !== undefined) {\n                matches.push({\n                    right: anye.element,\n                    rightParentId: anye.parentId\n                });\n            } else if (anye.id !== undefined) {\n                matches.push({\n                    right: anye,\n                    rightParentId: this.currentRoot.id\n                });\n            }\n        }\n        return this.applyMatches(matches);\n    }\n\n    /**\n     * Modify the current model by removing elements.\n     */\n    removeElements(elements: (string | { elementId: string, parentId: string })[]): Promise<void> {\n        const matches: Match[] = [];\n        const index = new SModelIndex();\n        index.add(this.currentRoot);\n        for (const e of elements) {\n            const anye: any = e;\n            if (anye.elementId !== undefined && anye.parentId !== undefined) {\n                const element = index.getById(anye.elementId);\n                if (element !== undefined) {\n                    matches.push({\n                        left: element,\n                        leftParentId: anye.parentId\n                    });\n                }\n            } else {\n                const element = index.getById(anye);\n                if (element !== undefined) {\n                    matches.push({\n                        left: element,\n                        leftParentId: this.currentRoot.id\n                    });\n                }\n            }\n        }\n        return this.applyMatches(matches);\n    }\n\n\n    // ----- Methods for handling incoming actions ----------------------------\n\n    handle(action: Action): void {\n        switch (action.kind) {\n            case RequestModelAction.KIND:\n                this.handleRequestModel(action as RequestModelAction);\n                break;\n            case ComputedBoundsAction.KIND:\n                this.computedBoundsApplicator.apply(this.currentRoot, action as ComputedBoundsAction);\n                break;\n            case RequestPopupModelAction.KIND:\n                this.handleRequestPopupModel(action as RequestPopupModelAction);\n                break;\n            case ExportSvgAction.KIND:\n                this.handleExportSvgAction(action as ExportSvgAction);\n                break;\n        }\n    }\n\n    protected handleRequestModel(action: RequestModelAction): void {\n        this.submitModel(this.currentRoot, false, action);\n    }\n\n    protected handleRequestPopupModel(action: RequestPopupModelAction): void {\n        if (this.popupModelProvider !== undefined) {\n            const element = findElement(this.currentRoot, action.elementId);\n            const popupRoot = this.popupModelProvider.getPopupModel(action, element);\n            if (popupRoot !== undefined) {\n                popupRoot.canvasBounds = action.bounds;\n                this.actionDispatcher.dispatch(SetPopupModelAction.create(popupRoot, action.requestId));\n            }\n        }\n    }\n\n    protected handleExportSvgAction(action: ExportSvgAction): void {\n        const blob = new Blob([action.svg], {type: \"text/plain;charset=utf-8\"});\n        saveAs(blob, \"diagram.svg\");\n    }\n}\n\n/**\n * @deprecated Use IPopupModelProvider instead.\n */\nexport type PopupModelFactory = (request: RequestPopupModelAction, element?: SModelElementSchema)\n    => SModelRootSchema | undefined;\n\nexport interface IPopupModelProvider {\n    getPopupModel(request: RequestPopupModelAction, element?: SModelElementSchema): SModelRootSchema | undefined;\n}\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface IModelLayoutEngine {\n    layout(model: SModelRootSchema, index?: SModelIndex): SModelRootSchema | Promise<SModelRootSchema>;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { Action } from 'sprotty-protocol/lib/actions';\nimport { ILogger, LogLevel } from '../utils/logging';\nimport { TYPES } from '../base/types';\nimport { ModelSource } from './model-source';\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface LoggingAction extends Action {\n    kind: typeof LoggingAction.KIND;\n    severity: string\n    time: string\n    caller: string\n    message: string\n    params: string[]\n}\nexport namespace LoggingAction {\n    export const KIND = 'logging';\n\n    export function create(options: { severity: string, time: string, caller: string, message: string, params: string[] }): LoggingAction {\n        return {\n            kind: KIND,\n            ...options\n        };\n    }\n}\n\n/**\n * A logger that forwards messages of type 'error', 'warn', and 'info' to the model source.\n */\n@injectable()\nexport class ForwardingLogger implements ILogger {\n\n    @inject(TYPES.ModelSourceProvider) protected modelSourceProvider: () => Promise<ModelSource>;\n    @inject(TYPES.LogLevel) public logLevel: LogLevel;\n\n    error(thisArg: any, message: string, ...params: any[]): void {\n        if (this.logLevel >= LogLevel.error)\n            this.forward(thisArg, message, LogLevel.error, params);\n    }\n\n    warn(thisArg: any, message: string, ...params: any[]): void {\n        if (this.logLevel >= LogLevel.warn)\n            this.forward(thisArg, message, LogLevel.warn, params);\n    }\n\n    info(thisArg: any, message: string, ...params: any[]): void {\n        if (this.logLevel >= LogLevel.info)\n            this.forward(thisArg, message, LogLevel.info, params);\n    }\n\n    log(thisArg: any, message: string, ...params: any[]): void {\n        if (this.logLevel >= LogLevel.log) {\n            // We cannot forward 'log' level messages since that would lead to endless loops\n            try {\n                const caller = typeof thisArg === 'object' ? thisArg.constructor.name : String(thisArg);\n                console.log.apply(thisArg, [caller + ': ' + message, ...params]);\n            } catch (error) {}\n        }\n    }\n\n    protected forward(thisArg: any, message: string, logLevel: LogLevel, params: any[]) {\n        const date = new Date();\n        const action = LoggingAction.create({\n            message,\n            severity: LogLevel[logLevel],\n            time: date.toLocaleTimeString(),\n            caller: typeof thisArg === 'object' ? thisArg.constructor.name : String(thisArg),\n            params: params.map(p => JSON.stringify(p))\n        });\n        this.modelSourceProvider().then(modelSource => {\n            try {\n                modelSource.handle(action);\n            } catch (error) {\n                try {\n                    console.log.apply(thisArg, [message, action, error]);\n                } catch (e) {}\n            }\n        });\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from \"inversify\";\nimport { ActionMessage } from \"sprotty-protocol/lib/actions\";\nimport { DiagramServerProxy } from \"./diagram-server\";\n\n/**\n * An external ModelSource that connects to the model provider using a websocket.\n */\n@injectable()\nexport class WebSocketDiagramServerProxy extends DiagramServerProxy {\n\n    protected webSocket?: WebSocket;\n\n    listen(webSocket: WebSocket): void {\n        webSocket.addEventListener('message', event => {\n            this.messageReceived(event.data);\n        });\n        webSocket.addEventListener('error', event => {\n            this.logger.error(this, 'error event received', event);\n        });\n        this.webSocket = webSocket;\n    }\n\n    disconnect() {\n        if (this.webSocket) {\n            this.webSocket.close();\n            this.webSocket = undefined;\n        }\n    }\n\n    protected sendMessage(message: ActionMessage): void {\n        if (this.webSocket) {\n            this.webSocket.send(JSON.stringify(message));\n        } else {\n            throw new Error('WebSocket is not connected');\n        }\n    }\n}\n\n/**\n * @deprecated Use `WebSocketDiagramServerProxy` instead;\n */\nexport const WebSocketDiagramServer = WebSocketDiagramServerProxy;\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport interface RGBColor {\n    red: number\n    green: number\n    blue: number\n}\n\nexport function rgb(red: number, green: number, blue: number): RGBColor {\n    return {\n        red: red,\n        green: green,\n        blue: blue\n    };\n}\n\nexport function toSVG(c: RGBColor): string {\n    return 'rgb(' + c.red + ',' + c.green + ',' + c.blue + ')';\n}\n\nexport class ColorMap {\n\n    constructor(protected stops: RGBColor[]) {\n    }\n\n    getColor(t: number): RGBColor {\n        t = Math.max(0, Math.min(0.99999999, t));\n        const i = Math.floor(t * this.stops.length);\n        return this.stops[i];\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n// ------------------ Base ------------------\n\nexport * from './base/actions/action';\nexport * from './base/actions/action-dispatcher';\nexport * from './base/actions/action-handler';\nexport * from './base/actions/diagram-locker';\n\nexport * from './base/animations/animation-frame-syncer';\nexport * from './base/animations/animation';\nexport * from './base/animations/easing';\n\nexport * from './base/commands/command';\nexport * from './base/commands/command-registration';\nexport * from './base/commands/command-stack-options';\nexport * from './base/commands/command-stack';\n\nexport * from './base/features/initialize-canvas';\nexport * from './base/features/set-model';\n\nexport * from './base/model/smodel-extension';\nexport * from './base/model/smodel-factory';\nexport * from './base/model/smodel-utils';\nexport * from './base/model/smodel';\n\nexport * from './base/tool-manager/tool-manager';\nexport * from './base/tool-manager/tool';\n\nexport * from './base/ui-extensions/ui-extension-registry';\nexport * from './base/ui-extensions/ui-extension';\n\nexport * from './base/views/key-tool';\nexport * from './base/views/mouse-tool';\nexport * from './base/views/thunk-view';\nexport * from './base/views/view';\nexport * from './base/views/viewer-cache';\nexport * from './base/views/viewer-options';\nexport * from './base/views/viewer';\nexport * from './base/views/vnode-postprocessor';\nexport * from './base/views/vnode-utils';\n\nexport * from './base/types';\n\nimport defaultModule from './base/di.config';\nexport { defaultModule };\n\n\n// ------------------ Features ------------------\n\nexport * from \"./features/bounds/bounds-manipulation\";\nexport * from \"./features/bounds/hidden-bounds-updater\";\nexport * from \"./features/bounds/layout\";\nexport * from \"./features/bounds/model\";\nexport * from \"./features/bounds/vbox-layout\";\nexport * from \"./features/bounds/hbox-layout\";\nexport * from \"./features/bounds/stack-layout\";\nexport * from \"./features/bounds/views\";\n\nexport * from \"./features/button/button-handler\";\nexport * from \"./features/button/model\";\n\nexport * from \"./features/command-palette/action-providers\";\nexport * from \"./features/command-palette/command-palette\";\n\nexport * from \"./features/context-menu/context-menu-service\";\nexport * from \"./features/context-menu/menu-providers\";\nexport * from \"./features/context-menu/mouse-listener\";\n\nexport * from \"./features/edge-layout/di.config\";\nexport * from \"./features/edge-layout/edge-layout\";\nexport * from \"./features/edge-layout/model\";\n\nexport * from \"./features/edit/create\";\nexport * from \"./features/edit/create-on-drag\";\nexport * from \"./features/edit/di.config\";\nexport * from \"./features/edit/delete\";\nexport * from \"./features/edit/edit-label\";\nexport * from \"./features/edit/edit-label-ui\";\nexport * from \"./features/edit/edit-routing\";\nexport * from \"./features/edit/model\";\nexport * from \"./features/edit/reconnect\";\n\nexport * from \"./features/expand/expand\";\nexport * from \"./features/expand/model\";\nexport * from \"./features/expand/views\";\n\nexport * from \"./features/export/export\";\nexport * from \"./features/export/model\";\nexport * from \"./features/export/svg-exporter\";\n\nexport * from \"./features/fade/fade\";\nexport * from \"./features/fade/model\";\n\nexport * from \"./features/hover/hover\";\nexport * from \"./features/hover/model\";\n\nexport * from \"./features/decoration/model\";\nexport * from \"./features/decoration/views\";\nexport * from \"./features/decoration/decoration-placer\";\n\nexport * from \"./features/edge-intersection/intersection-finder\";\nexport * from \"./features/edge-intersection/sweepline\";\n\nexport * from \"./features/move/model\";\nexport * from \"./features/move/move\";\nexport * from \"./features/move/snap\";\n\nexport * from \"./features/nameable/model\";\n\nexport * from \"./features/open/open\";\nexport * from \"./features/open/model\";\n\nexport * from \"./features/projection/model\";\nexport * from \"./features/projection/views\";\n\nexport * from \"./features/routing/anchor\";\nexport * from \"./features/routing/abstract-edge-router\";\nexport * from \"./features/routing/bezier-anchors\";\nexport * from \"./features/routing/bezier-edge-router\";\nexport * from \"./features/routing/manhattan-anchors\";\nexport * from \"./features/routing/manhattan-edge-router\";\nexport * from \"./features/routing/model\";\nexport * from \"./features/routing/polyline-anchors\";\nexport * from \"./features/routing/polyline-edge-router\";\nexport * from \"./features/routing/routing\";\nexport * from \"./features/routing/views\";\n\nexport * from \"./features/select/model\";\nexport * from \"./features/select/select\";\n\nexport * from \"./features/undo-redo/undo-redo\";\n\nexport * from \"./features/update/model-matching\";\nexport * from \"./features/update/update-model\";\n\nexport * from \"./features/viewport/center-fit\";\nexport * from \"./features/viewport/model\";\nexport * from \"./features/viewport/scroll\";\nexport * from \"./features/viewport/viewport-root\";\nexport * from \"./features/viewport/viewport\";\nexport * from \"./features/viewport/zoom\";\n\nexport * from \"./features/zorder/zorder\";\n\nimport graphModule from \"./graph/di.config\";\n\nimport boundsModule from \"./features/bounds/di.config\";\nimport buttonModule from \"./features/button/di.config\";\nimport commandPaletteModule from \"./features/command-palette/di.config\";\nimport contextMenuModule from \"./features/context-menu/di.config\";\nimport decorationModule from \"./features/decoration/di.config\";\nimport edgeIntersectionModule from \"./features/edge-intersection/di.config\";\nimport edgeLayoutModule from \"./features/edge-layout/di.config\";\nimport expandModule from \"./features/expand/di.config\";\nimport exportModule from \"./features/export/di.config\";\nimport fadeModule from \"./features/fade/di.config\";\nimport hoverModule from \"./features/hover/di.config\";\nimport moveModule from \"./features/move/di.config\";\nimport openModule from \"./features/open/di.config\";\nimport routingModule from \"./features/routing/di.config\";\nimport selectModule from \"./features/select/di.config\";\nimport undoRedoModule from \"./features/undo-redo/di.config\";\nimport updateModule from \"./features/update/di.config\";\nimport viewportModule from \"./features/viewport/di.config\";\nimport zorderModule from './features/zorder/di.config';\n\nexport {\n    graphModule, boundsModule, buttonModule, commandPaletteModule, contextMenuModule, decorationModule,\n    edgeIntersectionModule, edgeLayoutModule, expandModule, exportModule, fadeModule, hoverModule, moveModule,\n    openModule, routingModule, selectModule, undoRedoModule, updateModule, viewportModule, zorderModule\n};\n\n// ------------------ Graph ------------------\n\nexport * from \"./graph/sgraph-factory\";\nexport * from \"./graph/sgraph\";\nexport * from \"./graph/views\";\n\n\n// ------------------ Library ------------------\n\nexport * from \"./lib/modules\";\nexport * from \"./lib/generic-views\";\nexport * from \"./lib/html-views\";\nexport * from \"./lib/jsx\";\nexport * from \"./lib/model\";\nexport * from \"./lib/svg-views\";\n\n\n// ------------------ Model Source ------------------\n\nexport * from \"./model-source/commit-model\";\nexport * from \"./model-source/diagram-server\";\nexport * from \"./model-source/local-model-source\";\nexport * from \"./model-source/logging\";\nexport * from \"./model-source/model-source\";\nexport * from \"./model-source/websocket\";\n\nimport modelSourceModule from \"./model-source/di.config\";\nexport { modelSourceModule };\n\n\n// ------------------ Utilities ------------------\n\nexport * from \"./utils/browser\";\nexport * from \"./utils/codicon\";\nexport * from \"./utils/color\";\nexport * from \"./utils/geometry\";\nexport * from \"./utils/inversify\";\nexport * from \"./utils/json\";\nexport * from \"./utils/logging\";\nexport * from \"./utils/registry\";\n", "/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof global === \"object\" ? global :\n            typeof self === \"object\" ? self :\n                typeof this === \"object\" ? this :\n                    Function(\"return this;\")();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        else {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter);\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                if (typeof target[key] !== \"function\") {\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                }\n                if (previous)\n                    previous(key, value);\n            };\n        }\n    })(function (exporter) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        // [[Metadata]] internal slot\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n        var Metadata = new _WeakMap();\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            if (!metadataMap.delete(metadataKey))\n                return false;\n            if (metadataMap.size > 0)\n                return true;\n            var targetMetadata = Metadata.get(target);\n            targetMetadata.delete(propertyKey);\n            if (targetMetadata.size > 0)\n                return true;\n            Metadata.delete(target);\n            return true;\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        function GetOrCreateMetadataMap(O, P, Create) {\n            var targetMetadata = Metadata.get(O);\n            if (IsUndefined(targetMetadata)) {\n                if (!Create)\n                    return undefined;\n                targetMetadata = new _Map();\n                Metadata.set(O, targetMetadata);\n            }\n            var metadataMap = targetMetadata.get(P);\n            if (IsUndefined(metadataMap)) {\n                if (!Create)\n                    return undefined;\n                metadataMap = new _Map();\n                targetMetadata.set(P, metadataMap);\n            }\n            return metadataMap;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            return ToBoolean(metadataMap.has(MetadataKey));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return undefined;\n            return metadataMap.get(MetadataKey);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n            metadataMap.set(MetadataKey, MetadataValue);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var keys = [];\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return keys;\n            var keysObj = metadataMap.keys();\n            var iterator = GetIterator(keysObj);\n            var k = 0;\n            while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                    keys.length = k;\n                    return keys;\n                }\n                var nextValue = IteratorValue(next);\n                try {\n                    keys[k] = nextValue;\n                }\n                catch (e) {\n                    try {\n                        IteratorClose(iterator);\n                    }\n                    finally {\n                        throw e;\n                    }\n                }\n                k++;\n            }\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            return /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (key === this._cacheKey) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (this._cacheKey !== key) {\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            return /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.values(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 \u00A7 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n", "import \"reflect-metadata\";\r\nimport { LocalModelSource, RectangularNode, SCompartment, TYPES } from \"sprotty\";\r\nimport { SNode, SEdge, SLabel } from \"sprotty-protocol\";\r\nimport createContainer from \"./sprotty-ASCET-example/di.config\";\r\nimport { model } from \"./sprotty-ASCET-example/model-source\";\r\nimport { ArrowType, InputNode, LabelNode, OperandNode, OperandType } from \"./sprotty-ASCET-example/models\";\r\n\r\nexport default function runExample() {\r\n    const container = createContainer('sprotty-showcase');\r\n    const modelSource = container.get<LocalModelSource>(TYPES.ModelSource);\r\n    modelSource.setModel(model);\r\n//     modelSource.setModel({\r\n//         type: 'graph',\r\n//         id: 'graph',\r\n//         children: [\r\n//             // edges\r\n//             <SEdge> {\r\n//                 id: 'targetPosEdge',\r\n//                 type: 'edge:straight',\r\n//                 sourceId: 'target_pos',\r\n//                 targetId: 'AddOperand',\r\n//                 routerKind: 'manhattan',\r\n//                 children: [generateArrow()]\r\n//             },\r\n//             <SEdge> {\r\n//                 id: 'MaxPosEdge',\r\n//                 type: 'edge:straight',\r\n//                 sourceId: 'MaxPosition',\r\n//                 targetId: 'limiter',\r\n//                 routerKind: 'manhattan',\r\n//                 routingPoints: [{x: 252, y: 207}],\r\n//                 children: [generateArrow()]\r\n//             },\r\n//             <SEdge> {\r\n//                 id: 'zero_inputEdge',\r\n//                 type: 'edge:straight',\r\n//                 sourceId: 'zero_input',\r\n//                 targetId: 'limiter',\r\n//                 routerKind: 'manhattan',\r\n//                 routingPoints: [{x: 215, y: 257}],\r\n//                 children: [generateArrow()]\r\n//             },\r\n//             <SEdge> {\r\n//                 id: 'AddLimiterEdge',\r\n//                 type: 'edge:straight',\r\n//                 sourceId: 'AddOperand',\r\n//                 targetId: 'limiter',\r\n//                 routerKind: 'manhattan',\r\n//                 children: [generateArrow()]\r\n//             },\r\n//             <SEdge> {\r\n//                 id: 'OffsetPosEdge',\r\n//                 type: 'edge:straight',\r\n//                 sourceId: 'offset_pos',\r\n//                 targetId: 'AddOperand',\r\n//                 routerKind: 'manhattan',\r\n//                 routingPoints: [{x: 145, y: 367}],\r\n//                 children: [generateArrow()]\r\n//             },\r\n//             <SEdge> {\r\n//                 id: 'limiterEdge',\r\n//                 type: 'edge:straight',\r\n//                 sourceId: 'limiter',\r\n//                 targetId: 'SubOperand',\r\n//                 routerKind: 'manhattan',\r\n//                 children: [generateArrow()]\r\n//             },\r\n//             <SEdge> {\r\n//                 id: 'actualPosEdge',\r\n//                 type: 'edge:straight',\r\n//                 sourceId: 'actual_pos',\r\n//                 targetId: 'SubOperand',\r\n//                 routerKind: 'manhattan',\r\n//                 routingPoints: [{x: 335, y: 407}],\r\n//                 children: [generateArrow()]\r\n\r\n//             },\r\n//             <SEdge> {\r\n//                 id: 'SubToDivEdge',\r\n//                 type: 'edge:straight',\r\n//                 sourceId: 'SubOperand',\r\n//                 targetId: 'DivOperand',\r\n//                 routerKind: 'manhattan',\r\n//                 children: [generateArrow()]\r\n//             },\r\n//             <SEdge> {\r\n//                 id: 'DivToPIDTEdge',\r\n//                 type: 'edge:straight',\r\n//                 sourceId: 'DivOperand',\r\n//                 targetId: 'pidt',\r\n//                 routerKind: 'manhattan',\r\n//                 children: [\r\n//                     generateArrow(),\r\n//                     <SLabel> {\r\n//                         id: 'inLabel',\r\n//                         type: 'label:text',\r\n//                         text: 'in',\r\n//                         edgePlacement:  {\r\n//                             position: 0.8,\r\n//                             side: 'top',\r\n//                             rotate: false\r\n//                         }\r\n//                     }\r\n//                 ]\r\n//             },\r\n//             <SEdge> {\r\n//                 id: 'outputEdge',\r\n//                 type: 'edge:straight',\r\n//                 sourceId: 'pidt',\r\n//                 targetId: 'new_pos',\r\n//                 routerKind: 'manhattan',\r\n//                 children: [\r\n//                     generateArrow(),\r\n//                     <SLabel> {\r\n//                         id: 'outLabel',\r\n//                         type: 'label:text',\r\n//                         text: 'out',\r\n//                         edgePlacement:  {\r\n//                             position: 0,\r\n//                             side: 'left',\r\n//                             rotate: false\r\n//                         }\r\n//                     }\r\n//                 ]\r\n//             },\r\n//             <SEdge> {\r\n//                 id: 'T_lEdge',\r\n//                 type: 'edge:straight',\r\n//                 sourceId: 'T_l',\r\n//                 targetId: 'pidt',\r\n//                 routerKind: 'manhattan',\r\n//                 routingPoints: [{x: 660, y: 37}],\r\n//                 children: [\r\n//                     generateArrow(),\r\n//                     <SLabel> {\r\n//                         id: 'TvLabel',\r\n//                         type: 'label:text',\r\n//                         text: 'Tv',\r\n//                         edgePlacement:  {\r\n//                             position: 1,\r\n//                             side: 'bottom',\r\n//                             rotate: false\r\n//                         }\r\n//                     }\r\n//                 ]\r\n//             },\r\n//             <SEdge> {\r\n//                 id: 'T_dEdge',\r\n//                 type: 'edge:straight',\r\n//                 sourceId: 'T_d',\r\n//                 targetId: 'pidt',\r\n//                 routerKind: 'manhattan',\r\n//                 routingPoints: [{x: 630, y: 77}],\r\n//                 children: [\r\n//                     generateArrow(),\r\n//                     <SLabel> {\r\n//                         id: 'TdLabel',\r\n//                         type: 'label:text',\r\n//                         text: 'Td',\r\n//                         edgePlacement:  {\r\n//                             position: 1,\r\n//                             side: 'bottom',\r\n//                             rotate: false\r\n//                         }\r\n//                     }\r\n//                 ]\r\n//             },\r\n//             <SEdge> {\r\n//                 id: 'T_iEdge',\r\n//                 type: 'edge:straight',\r\n//                 sourceId: 'T_i',\r\n//                 targetId: 'pidt',\r\n//                 routerKind: 'manhattan',\r\n//                 routingPoints: [{x: 590, y: 117}],\r\n//                 children: [\r\n//                     generateArrow(),\r\n//                     <SLabel> {\r\n//                         id: 'TiLabel',\r\n//                         type: 'label:text',\r\n//                         text: 'Ti',\r\n//                         edgePlacement:  {\r\n//                             position: 1,\r\n//                             side: 'bottom',\r\n//                             rotate: false\r\n//                         }\r\n//                     }\r\n//                 ]\r\n//             },\r\n//             <SEdge> {\r\n//                 id: 'P_GainEdge',\r\n//                 type: 'edge:straight',\r\n//                 sourceId: 'P_Gain',\r\n//                 targetId: 'MNOperand',\r\n//                 routerKind: 'manhattan',\r\n//                 children: [generateArrow()]\r\n//             },\r\n//             <SEdge> {\r\n//                 id: 'P_MaxEdge',\r\n//                 type: 'edge:straight',\r\n//                 sourceId: 'P_max',\r\n//                 targetId: 'MNOperand',\r\n//                 routerKind: 'manhattan',\r\n//                 children: [generateArrow()]\r\n//             },\r\n//             <SEdge> {\r\n//                 id: 'MNOperandEdge',\r\n//                 type: 'edge:straight',\r\n//                 sourceId: 'MNOperand',\r\n//                 targetId: 'pidt',\r\n//                 routerKind: 'manhattan',\r\n//                 routingPoints: [{x: 560, y: 190}],\r\n//                 children: [\r\n//                     generateArrow(),\r\n//                     <SLabel> {\r\n//                         id: 'KLabel',\r\n//                         type: 'label:text',\r\n//                         text: 'K',\r\n//                         edgePlacement:  {\r\n//                             position: 1,\r\n//                             side: 'bottom',\r\n//                             rotate: false\r\n//                         },\r\n//                     },\r\n//                     <SLabel> {\r\n//                         id: 'computeNormalLabel',\r\n//                         type: 'label:text',\r\n//                         text: 'compute\\n________\\n/1/normal',\r\n//                         edgePlacement:  {\r\n//                             position: 0.15,\r\n//                             side: 'bottom',\r\n//                             rotate: false\r\n//                         }\r\n//                     }]\r\n//             },\r\n//             <SEdge> {\r\n//                 id: 'cf_Degree2RadEdge',\r\n//                 type: 'edge:straight',\r\n//                 sourceId: 'cf_Degree2Rad',\r\n//                 targetId: 'DivOperand',\r\n//                 routerKind: 'manhattan',\r\n//                 routingPoints: [{x: 475, y: 357}],\r\n//                 children: [generateArrow()]\r\n//             },\r\n//             // controller\r\n//             <SNode & LabelNode>{\r\n//                 id: 'limiter',\r\n//                 text: 'limiter',\r\n//                 type: 'node:controller',\r\n//                 position: {x: 200, y: 292.5},\r\n//                 size: {width: 65, height: 45},\r\n//             },\r\n//             <SNode & LabelNode>{\r\n//                 id: 'pidt',\r\n//                 text: 'pidt1',\r\n//                 type: 'node:controller',\r\n//                 position: {x: 555, y: 275},\r\n//                 size: {width: 120, height: 80},\r\n//             },\r\n//             // in/outputs\r\n//             <SNode & InputNode>{\r\n//                 id: 'MaxPosition',\r\n//                 type: 'node:input',\r\n//                 text: 'MaxPosition',\r\n//                 arrow: ArrowType.STROKE,\r\n//                 position: {x: 100, y: 200},\r\n//                 size: {width: 40, height: 15},\r\n//                 children: [\r\n//                     {\r\n//                         id: \"MaxPositionIcon\",\r\n//                         type: \"label:icon3\"\r\n//                     }\r\n//                 ]\r\n//             },\r\n//             <SNode>{\r\n//                 id: 'zero_input',\r\n//                 type: 'node:rect',\r\n//                 text: '0.0',\r\n//                 arrow: ArrowType.STROKE,\r\n//                 position: {x: 100, y: 250},\r\n//                 size: {width: 40, height: 15},\r\n//                 children: [\r\n//                     <SLabel>{\r\n//                         id: '0.0Label',\r\n//                         type: 'label:text',\r\n//                         text: '0.0',\r\n//                         position: {x: 10, y: 12}\r\n//                     }\r\n//                 ]\r\n//             },\r\n//             <SNode & InputNode>{\r\n//                 id: 'target_pos',\r\n//                 type: 'node:input',\r\n//                 text: 'target_pos',\r\n//                 arrow: ArrowType.FULL,\r\n//                 position: {x: 0, y: 307.5},\r\n//                 size: {width: 40, height: 15},\r\n//                 children: [\r\n//                     {\r\n//                         id: \"target_posIcon\",\r\n//                         type: \"label:icon2\"\r\n//                     }\r\n//                 ]\r\n//             },\r\n//             <SNode & InputNode>{\r\n//                 id: 'offset_pos',\r\n//                 type: 'node:input',\r\n//                 text: 'offset_pos',\r\n//                 arrow: ArrowType.NONE,\r\n//                 position: {x: 50, y: 360},\r\n//                 size: {width: 40, height: 15},\r\n//                 children: [\r\n//                     {\r\n//                         id: \"offset_posIcon\",\r\n//                         type: \"label:icon1\"\r\n//                     }\r\n//                 ]\r\n//             },\r\n//             <SNode & InputNode>{\r\n//                 id: 'actual_pos',\r\n//                 type: 'node:input',\r\n//                 text: 'actual_position',\r\n//                 arrow: ArrowType.FULL,\r\n//                 position: {x: 0, y: 400},\r\n//                 size: {width: 40, height: 15},\r\n//                 children: [\r\n//                     {\r\n//                         id: \"actual_posIcon\",\r\n//                         type: \"label:icon2\"\r\n//                     }\r\n//                 ]\r\n//             },\r\n//             <SNode & InputNode>{\r\n//                 id: 'new_pos',\r\n//                 type: 'node:input',\r\n//                 text: 'new_position',\r\n//                 arrow: ArrowType.FULL,\r\n//                 position: {x: 700, y: 307.5},\r\n//                 size: {width: 40, height: 15},\r\n//                 children: [\r\n//                     {\r\n//                         id: \"new_posIcon\",\r\n//                         type: \"label:icon2\"\r\n//                     }\r\n//                 ]\r\n//             },\r\n//             <SNode & InputNode>{\r\n//                 id: 'T_l',\r\n//                 type: 'node:input',\r\n//                 text: 'T_l',\r\n//                 arrow: ArrowType.NONE,\r\n//                 position: {x: 350, y: 30},\r\n//                 size: {width: 40, height: 15},\r\n//                 children: [\r\n//                     {\r\n//                         id: \"T_lIcon\",\r\n//                         type: \"label:icon1\"\r\n//                     }\r\n//                 ]\r\n//             },\r\n//             <SNode & InputNode>{\r\n//                 id: 'T_d',\r\n//                 type: 'node:input',\r\n//                 text: 'T_d',\r\n//                 arrow: ArrowType.NONE,\r\n//                 position: {x: 350, y: 70},\r\n//                 size: {width: 40, height: 15},\r\n//                 children: [\r\n//                     {\r\n//                         id: \"T_dIcon\",\r\n//                         type: \"label:icon1\"\r\n//                     }\r\n//                 ]\r\n//             },\r\n//             <SNode & InputNode>{\r\n//                 id: 'T_i',\r\n//                 type: 'node:input',\r\n//                 text: 'T_i',\r\n//                 arrow: ArrowType.NONE,\r\n//                 position: {x: 350, y: 110},\r\n//                 size: {width: 40, height: 15},\r\n//                 children: [\r\n//                     {\r\n//                         id: \"T_iIcon\",\r\n//                         type: \"label:icon1\"\r\n//                     }\r\n//                 ]\r\n//             },\r\n//             <SNode & InputNode>{\r\n//                 id: 'P_Gain',\r\n//                 type: 'node:input',\r\n//                 text: 'P_Gain',\r\n//                 arrow: ArrowType.NONE,\r\n//                 position: {x: 350, y: 150},\r\n//                 size: {width: 40, height: 15},\r\n//                 children: [\r\n//                     {\r\n//                         id: \"P_GainsIcon\",\r\n//                         type: \"label:icon1\"\r\n//                     }\r\n//                 ]\r\n//             },\r\n//             <SNode & InputNode>{\r\n//                 id: 'P_max',\r\n//                 type: 'node:input',\r\n//                 text: 'P_max',\r\n//                 arrow: ArrowType.STROKE,\r\n//                 position: {x: 350, y: 190},\r\n//                 size: {width: 40, height: 15},\r\n//                 children: [\r\n//                     {\r\n//                         id: \"P_maxIcon\",\r\n//                         type: \"label:icon3\"\r\n//                     }\r\n//                 ]\r\n//             },\r\n//             <SNode & InputNode>{\r\n//                 id: 'cf_Degree2Rad',\r\n//                 type: 'node:input',\r\n//                 text: 'cf_Degree2Rad',\r\n//                 arrow: ArrowType.STROKE,\r\n//                 position: {x: 380, y: 350},\r\n//                 size: {width: 40, height: 15},\r\n//                 children: [\r\n//                     {\r\n//                         id: \"cf_Degree2RadIcon\",\r\n//                         type: \"label:icon4\"\r\n//                     }\r\n//                 ]\r\n//             },\r\n//             // operands\r\n//             <SNode & OperandNode>{\r\n//                 id: 'AddOperand',\r\n//                 type: 'node:operand',\r\n//                 operand: OperandType.ADD,\r\n//                 position: {x: 130, y: 300},\r\n//                 size: {width: 30, height: 30}\r\n//             },\r\n//             <SNode & OperandNode>{\r\n//                 id: 'SubOperand',\r\n//                 type: 'node:operand',\r\n//                 operand: OperandType.SUBSTRACT,\r\n//                 position: {x: 320, y: 300},\r\n//                 size: {width: 30, height: 30}\r\n//             },\r\n//             <SNode & OperandNode>{\r\n//                 id: 'DivOperand',\r\n//                 type: 'node:operand',\r\n//                 operand: OperandType.DIVIDE,\r\n//                 position: {x: 460, y: 300},\r\n//                 size: {width: 30, height: 30}\r\n//             },\r\n//             <SNode & OperandNode>{\r\n//                 id: 'MNOperand',\r\n//                 type: 'node:operand',\r\n//                 operand: OperandType.MN,\r\n//                 position: {x: 440, y: 160},\r\n//                 size: {width: 40, height: 50}\r\n//             },\r\n//         ]\r\n//     })\r\n// }\r\n\r\n// let arrowIdCounter = 0;\r\n// function generateArrow(): SLabel {\r\n//     return <SLabel> {\r\n//             id: 'arrow' + arrowIdCounter++,\r\n//             type: 'label:arrow',\r\n//             text: '',\r\n//             edgePlacement:  {\r\n//                 position: 1,\r\n//                 side: 'on',\r\n//                 rotate: true\r\n//             }\r\n//         }\r\n} \r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => runExample());", "import { Container, ContainerModule } from \"inversify\";\r\nimport { configureModelElement, configureViewerOptions, ConsoleLogger, loadDefaultModules, LocalModelSource, LogLevel, PolylineEdgeView, RectangularNode, RectangularNodeView, SChildElement, SEdge, SGraph, SGraphView, SLabel, SLabelView, SModelElement, SRoutingHandle, SRoutingHandleView, SShapeElement, TYPES } from \"sprotty\";\r\nimport { ComponentView, EdgeArrow, Icon1, Icon2, Icon3, Icon4, InputView, OperandView } from \"./views\";\r\n\r\n\r\nexport default (containerId: string) => {\r\n\r\n    const ASCETExamleModule = new ContainerModule((bind, unbind, isBound, rebind) => { \r\n        bind(TYPES.ModelSource).to(LocalModelSource).inSingletonScope();\r\n        rebind(TYPES.ILogger).to(ConsoleLogger).inSingletonScope();\r\n        rebind(TYPES.LogLevel).toConstantValue(LogLevel.log);\r\n        const context = { bind, unbind, isBound, rebind };\r\n        configureModelElement(context, 'graph', SGraph, SGraphView);\r\n        configureModelElement(context, 'node:input', RectangularNode, InputView);\r\n        configureModelElement(context, 'node:component', RectangularNode, ComponentView);\r\n        configureModelElement(context, 'node:operand', RectangularNode, OperandView);\r\n        configureModelElement(context, 'node:rect', RectangularNode, RectangularNodeView);\r\n        configureModelElement(context, 'edge:straight', SEdge, PolylineEdgeView);\r\n        configureModelElement(context, 'label:arrow', SLabel, EdgeArrow);\r\n        configureModelElement(context, 'label:text', SLabel, SLabelView)\r\n        configureModelElement(context, 'routing-point', SRoutingHandle, SRoutingHandleView)\r\n        configureModelElement(context, 'volatile-routing-point', SRoutingHandle, SRoutingHandleView);\r\n        // icons\r\n        configureModelElement(context, 'label:icon1', SChildElement, Icon1);\r\n        configureModelElement(context, 'label:icon2', SChildElement, Icon2);\r\n        configureModelElement(context, 'label:icon3', SChildElement, Icon3);\r\n        configureModelElement(context, 'label:icon4', SChildElement, Icon4);\r\n\r\n\r\n        configureViewerOptions(context, {\r\n            needsClientLayout: false,\r\n            baseDiv: containerId\r\n        });\r\n\r\n    });\r\n\r\n    const container = new Container();\r\n    loadDefaultModules(container);\r\n    container.load(ASCETExamleModule);\r\n    return container;\r\n\r\n}", "/** @jsx svg */\r\nimport { svg } from 'sprotty/lib/lib/jsx';\r\n\r\nimport { injectable } from 'inversify';\r\nimport { VNode } from \"snabbdom\";\r\nimport { IViewArgs, RectangularNodeView, RenderingContext, SEdge, ShapeView, SLabel, SNode } from \"sprotty\";\r\nimport { ArrowType, ComponentNode, InputNode, LabelNode, OperandNode, OperandType } from './models';\r\n\r\n\r\n@injectable()\r\nexport class EdgeArrow extends ShapeView {\r\n    override render(node: Readonly<SLabel>, context: RenderingContext, args?: IViewArgs): VNode {\r\n        return <polygon points={`-6,-4 0,0 -6,4`} style={{fill: \"black\"}}></polygon>\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class InputView extends RectangularNodeView {\r\n    override render(node: Readonly<SNode & InputNode>, context: RenderingContext, args?: IViewArgs): VNode {\r\n        return <g>\r\n            <rect class-sprotty-node={true}\r\n                class-mouseover={node.hoverFeedback} class-selected={node.selected}\r\n                width={node.size.width - (node.arrow !== ArrowType.NONE ? 10 : 0)} height={node.size.height}>\r\n            </rect>\r\n            <rect class-input-back={true} width=\"10\" height={node.size.height}></rect>\r\n            {node.arrow !== ArrowType.NONE && <polygon class-input-arrow-full={node.arrow === ArrowType.FULL} class-input-arrow-stroke={node.arrow === ArrowType.STROKE}\r\n                points={`${node.size.width - 10},0 ${node.size.width},${node.size.height / 2} ${node.size.width - 10},${node.size.height}`}/> }\r\n            <g transform={`translate(${node.size.width / 2 + (node.arrow !== ArrowType.NONE ? 0 : 5)},${node.size.height / 2})`} >{context.renderChildren(node, args)}</g>\r\n            <text x={node.size.width / 2} y={node.size.height + 15} class-sprotty-text={true}>{node.text}</text>\r\n        </g>\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class ComponentView extends RectangularNodeView {\r\n    override render(node: Readonly<SNode & ComponentNode>, context: RenderingContext, args?: IViewArgs): VNode {\r\n        return <g>\r\n            <rect class-sprotty-node={true}\r\n                class-mouseover={node.hoverFeedback} class-selected={node.selected}\r\n                width={Math.max(node.size.width, 0)} height={Math.max(node.size.height, 0)}>\r\n            </rect>\r\n            <image href={`images/${node.image}`} width={node.size.width - 10} height={node.size.height - 10} x=\"5\" y=\"5\"></image >\r\n            <rect width=\"10\" height={node.size.height} x=\"0\" y=\"0\" class-input-back={true}></rect>\r\n            <rect class-component-marker={true} width=\"10\" height=\"10\" x={node.size.width / 2 - 5} y=\"-5\"></rect>\r\n            <text x={node.size.width / 2} y={node.size.height + 20} class-sprotty-text={true}>{node.text}</text>\r\n            </g>\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class OperandView extends RectangularNodeView {\r\n    override render(node: Readonly<SNode & OperandNode>, context: RenderingContext, args?: IViewArgs): VNode {\r\n        return <g>\r\n            <rect class-sprotty-node={true}\r\n                class-mouseover={node.hoverFeedback} class-selected={node.selected}\r\n                width={node.size.width} height={node.size.height}>\r\n            </rect>\r\n            {\r\n                node.operand === OperandType.ADD && <text x={2} y={node.size.height + 1} w class-operand-symbol={true} style={{fontSize: \"45\"}}>{node.operand}</text>\r\n            }\r\n            {\r\n                node.operand === OperandType.DIVIDE && <text x={3} y={node.size.height} w class-operand-symbol={true} style={{fontSize: \"45\"}}>{node.operand}</text>\r\n            }\r\n            {\r\n                node.operand === OperandType.SUBSTRACT && <text x={5} y={30} w class-operand-symbol={true} style={{fontSize: \"54\"}}>{node.operand}</text>\r\n            }\r\n            {\r\n                node.operand === OperandType.MULTIPLY && <text x={4} y={node.size.height - 5} w class-operand-symbol={true} style={{fontSize: \"40\"}}>{node.operand}</text>\r\n            }\r\n            </g>\r\n    }\r\n}\r\n\r\n// input icons\r\n\r\n@injectable()\r\nexport class Icon1 extends ShapeView {\r\n    override render(node: Readonly<SNode>, context: RenderingContext, args?: IViewArgs): VNode {\r\n        const parentSize = (node.parent as SNode).size\r\n        return <polygon points=\"0,4 4,0 0,-4 -4,0\" style={{stroke: \"lightgrey\", fill: \"lightblue\"}}/>\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class Icon2 extends ShapeView {\r\n    override render(node: Readonly<SNode>, context: RenderingContext, args?: IViewArgs): VNode {\r\n        const parentSize = (node.parent as SNode).size\r\n        return <g>\r\n            <polygon points=\"-4,-4 4,-4 4,4\" style={{stroke: \"lightgrey\", fill: \"none\"}}/>\r\n            <polygon points=\"-4,-4 -4,4 4,4\" style={{stroke: \"lightgrey\", fill: \"orange\"}}/>\r\n        </g>\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class Icon3 extends ShapeView {\r\n    override render(node: Readonly<SNode>, context: RenderingContext, args?: IViewArgs): VNode {\r\n        const parentSize = (node.parent as SNode).size\r\n        return <g>\r\n            <polygon points=\"0,4 4,0 0,-4 -4,0\" style={{stroke: \"lightgrey\", fill: \"lightblue\"}}/>\r\n            <text transform=\"translate(-2.8, 3.2)\" style={{fontSize: \"10\", fontWeight: \"bold\"}}>=</text>\r\n        </g>\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class Icon4 extends ShapeView {\r\n    override render(node: Readonly<SNode>, context: RenderingContext, args?: IViewArgs): VNode {\r\n        const parentSize = (node.parent as SNode).size\r\n        return <g>\r\n            <polygon points=\"0,4 4,0 0,-4 -4,0\" style={{stroke: \"lightgrey\", fill: \"lightblue\"}}/>\r\n            <text transform=\"translate(-2.8, 3.2)\" style={{fontSize: \"10\", fontWeight: \"bold\"}}>+</text>\r\n        </g>\r\n    }\r\n}", "import { SNode, SEdge, SLabel } from \"sprotty-protocol\";\r\nimport { ArrowType, ComponentNode, InputNode, LabelNode, OperandNode, OperandType } from \"./models\";\r\n\r\nconst inputSize = {width: 40, height: 15};\r\nconst operandSize = {width: 30, height: 30};\r\n\r\nconst edgeBasics = {\r\n    type: \"edge:straight\",\r\n    routerKind: 'manhattan',\r\n    children: [generateArrow()]\r\n}\r\n\r\nlet arrowIdCounter = 0;\r\nfunction generateArrow(): SLabel {\r\n    return <SLabel> {\r\n            id: 'arrow' + arrowIdCounter++,\r\n            type: 'label:arrow',\r\n            text: '',\r\n            edgePlacement:  {\r\n                position: 1,\r\n                side: 'on',\r\n                rotate: true\r\n            }\r\n        }\r\n} \r\n\r\nexport const model = {\r\n    type: 'graph',\r\n    id: 'graph',\r\n    children: [\r\n        // inputs\r\n        <SNode & InputNode>{\r\n            id: 'Epm_rpmEngSpd',\r\n            type: 'node:input',\r\n            text: 'Epm_rpmEngSpd',\r\n            arrow: ArrowType.FULL,\r\n            position: {x: 40, y: 150},\r\n            size: inputSize,\r\n            children: [\r\n                {\r\n                    id: \"tEpm_rpmEngSpdIcon\",\r\n                    type: \"label:icon2\"\r\n                }\r\n            ]\r\n        },\r\n        <SNode & InputNode>{\r\n            id: 'Egc_fac_Egas',\r\n            type: 'node:input',\r\n            text: 'Egc_fac_Egas',\r\n            arrow: ArrowType.FULL,\r\n            position: {x: 40, y: 200},\r\n            size: inputSize,\r\n            children: [\r\n                {\r\n                    id: \"Egc_fac_EgasIcon\",\r\n                    type: \"label:icon2\"\r\n                }\r\n            ]\r\n        },\r\n        <SNode & InputNode>{\r\n            id: 'Amf_facRelAir',\r\n            type: 'node:input',\r\n            text: 'Amf_facRelAir',\r\n            arrow: ArrowType.FULL,\r\n            position: {x: 40, y: 400},\r\n            size: inputSize,\r\n            children: [\r\n                {\r\n                    id: \"Amf_facRelAirIcon\",\r\n                    type: \"label:icon2\"\r\n                }\r\n            ]\r\n        },\r\n        <SNode & InputNode>{\r\n            id: 'Ctc_atCool',\r\n            type: 'node:input',\r\n            text: 'Ctc_atCool',\r\n            arrow: ArrowType.FULL,\r\n            position: {x: 40, y: 500},\r\n            size: inputSize,\r\n            children: [\r\n                {\r\n                    id: \"Ctc_atCoolIcon\",\r\n                    type: \"label:icon2\"\r\n                }\r\n            ]\r\n        },\r\n        <SNode & InputNode>{\r\n            id: 'Isc_fac_IdleSpdStab',\r\n            type: 'node:input',\r\n            text: 'Isc_fac_IdleSpdStab',\r\n            arrow: ArrowType.FULL,\r\n            position: {x: 40, y: 620},\r\n            size: inputSize,\r\n            children: [\r\n                {\r\n                    id: \"Isc_fac_IdleSpdStabIcon\",\r\n                    type: \"label:icon2\"\r\n                }\r\n            ]\r\n        },\r\n        <SNode & InputNode>{\r\n            id: 'Tqs_facEgasFilt',\r\n            type: 'node:input',\r\n            text: 'Tqs_facEgasFilt',\r\n            arrow: ArrowType.STROKE,\r\n            position: {x: 530, y: 200},\r\n            size: inputSize,\r\n            children: [\r\n                {\r\n                    id: \"Tqs_facEgasFiltIcon\",\r\n                    type: \"label:icon2\"\r\n                }\r\n            ]\r\n        },\r\n        <SNode & InputNode>{\r\n            id: 'Tqs_tqMax',\r\n            type: 'node:input',\r\n            text: 'Tqs_tqMax',\r\n            arrow: ArrowType.STROKE,\r\n            position: {x: 530, y: 300},\r\n            size: inputSize,\r\n            children: [\r\n                {\r\n                    id: \"Tqs_tqMaxIcon\",\r\n                    type: \"label:icon2\"\r\n                }\r\n            ]\r\n        },\r\n        <SNode & InputNode>{\r\n            id: 'Tqs_tqDrag',\r\n            type: 'node:input',\r\n            text: 'Tqs_tqDrag',\r\n            arrow: ArrowType.STROKE,\r\n            position: {x: 530, y: 400},\r\n            size: inputSize,\r\n            children: [\r\n                {\r\n                    id: \"Tqs_tqDragIcon\",\r\n                    type: \"label:icon2\"\r\n                }\r\n            ]\r\n        },\r\n        <SNode & InputNode>{\r\n            id: 'Tqs_tqMin',\r\n            type: 'node:input',\r\n            text: 'Tqs_tqMin',\r\n            arrow: ArrowType.FULL,\r\n            position: {x: 900, y: 400},\r\n            size: inputSize,\r\n            children: [\r\n                {\r\n                    id: \"Tqs_tqMinIcon\",\r\n                    type: \"label:icon2\"\r\n                }\r\n            ]\r\n        },\r\n        <SNode & InputNode>{\r\n            id: 'Tqs_flgTorqueRegOverride',\r\n            type: 'node:input',\r\n            text: 'Tqs_flgTorqueRegOverride',\r\n            arrow: ArrowType.NONE,\r\n            position: {x: 950, y: 20},\r\n            size: inputSize,\r\n            children: [\r\n                {\r\n                    id: \"Tqs_flgTorqueRegOverrideIcon\",\r\n                    type: \"label:icon1\"\r\n                }\r\n            ]\r\n        },\r\n        <SNode & InputNode>{\r\n            id: 'Tqs_tqReqCalc',\r\n            type: 'node:input',\r\n            text: 'Tqs_tqReqCalc',\r\n            arrow: ArrowType.STROKE,\r\n            position: {x: 950, y: 100},\r\n            size: inputSize,\r\n            children: [\r\n                {\r\n                    id: \"Tqs_tqReqCalcIcon\",\r\n                    type: \"label:icon2\"\r\n                }\r\n            ]\r\n        },\r\n        <SNode & InputNode>{\r\n            id: 'Tqs_tqReqMan',\r\n            type: 'node:input',\r\n            text: 'Tqs_tqReqMan',\r\n            arrow: ArrowType.NONE,\r\n            position: {x: 950, y: 180},\r\n            size: inputSize,\r\n            children: [\r\n                {\r\n                    id: \"Tqs_tqReqManIcon\",\r\n                    type: \"label:icon1\"\r\n                }\r\n            ]\r\n        },\r\n        <SNode & InputNode>{\r\n            id: 'Tqs_tqReq',\r\n            type: 'node:input',\r\n            text: 'Tqs_tqReq',\r\n            arrow: ArrowType.FULL,\r\n            position: {x: 1250, y: 125},\r\n            size: inputSize,\r\n            children: [\r\n                {\r\n                    id: \"Tqs_tqReqIcon\",\r\n                    type: \"label:icon2\"\r\n                }\r\n            ]\r\n        },\r\n        // Operands\r\n        <SNode & OperandNode>{\r\n            id: 'AddOpDrag',\r\n            type: 'node:operand',\r\n            operand: OperandType.ADD,\r\n            position: {x: 450, y: 400},\r\n            size: operandSize\r\n        },\r\n        <SNode & OperandNode>{\r\n            id: 'MultOpDrag',\r\n            type: 'node:operand',\r\n            operand: OperandType.MULTIPLY,\r\n            position: {x: 620, y: 400},\r\n            size: operandSize\r\n        },\r\n        <SNode & OperandNode>{\r\n            id: 'SubOp',\r\n            type: 'node:operand',\r\n            operand: OperandType.SUBSTRACT,\r\n            position: {x: 670, y: 300},\r\n            size: operandSize\r\n        },\r\n        <SNode & OperandNode>{\r\n            id: 'MultOpEgas',\r\n            type: 'node:operand',\r\n            operand: OperandType.MULTIPLY,\r\n            position: {x: 720, y: 200},\r\n            size: operandSize\r\n        },\r\n        <SNode & OperandNode>{\r\n            id: 'AddOpEgas',\r\n            type: 'node:operand',\r\n            operand: OperandType.ADD,\r\n            position: {x: 800, y: 200},\r\n            size: operandSize\r\n        },\r\n        <SNode & OperandNode>{\r\n            id: 'AddOpCalcReq',\r\n            type: 'node:operand',\r\n            operand: OperandType.ADD,\r\n            position: {x: 850, y: 100},\r\n            size: operandSize\r\n        },\r\n        // components\r\n        <SNode & ComponentNode>{\r\n            id: 'Tqs_rpmEngSpdfacEgas2facEgasFilt_MAP',\r\n            type: 'node:component',\r\n            text: 'Tqs_rpmEngSpdfacEgas2facEgasFilt_MAP',\r\n            image: 'MAP_Icon.png',\r\n            position: {x: 300, y: 170},\r\n            size: {width: 60, height: 65}\r\n        },\r\n        <SNode & ComponentNode>{\r\n            id: 'Tqs_rpmEngSpd2tqMax_CUR',\r\n            type: 'node:component',\r\n            text: 'Tqs_rpmEngSpd2tqMax_CUR',\r\n            image: 'CUR_Icon.png',\r\n            position: {x: 300, y: 270},\r\n            size: {width: 60, height: 65}\r\n        },\r\n        <SNode & ComponentNode>{\r\n            id: 'Tqs_rpmEngSpdfacRelAir2tqDrag_MAP',\r\n            type: 'node:component',\r\n            text: 'Tqs_rpmEngSpdfacRelAir2tqDrag_MAP',\r\n            image: 'MAP_Icon.png',\r\n            position: {x: 300, y: 370},\r\n            size: {width: 60, height: 65}\r\n        },\r\n        <SNode & ComponentNode>{\r\n            id: 'Tqs_atCool2tqDrag_CUR',\r\n            type: 'node:component',\r\n            text: 'Tqs_atCool2tqDrag_CUR',\r\n            image: 'CUR_Icon.png',\r\n            position: {x: 300, y: 470},\r\n            size: {width: 60, height: 65}\r\n        },\r\n        // Other nodes\r\n        <SNode & ComponentNode>{\r\n            id: 'bigController',\r\n            type: 'node:rect',\r\n            size: {width: 180, height: 120},\r\n            position: {x: 250, y: 20}\r\n        },\r\n        \r\n        \r\n        \r\n        // Edges\r\n        <SEdge> {\r\n            id: 'P_MaxEdge',\r\n            type: 'edge:straight',\r\n            sourceId: 'Amf_facRelAir',\r\n            targetId: 'Tqs_rpmEngSpdfacRelAir2tqDrag_MAP',\r\n            routerKind: 'manhattan',\r\n            children: [generateArrow()]\r\n        },\r\n    ]\r\n\r\n}\r\n\r\n"],
  "mappings": "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",
  "names": ["isObject", "data", "exports", "hasOwnProperty", "arg", "key", "type", "k", "safeAssign", "target", "partial", "object_1", "isActionMessage", "object", "exports", "isAction", "isRequestAction", "nextRequestId", "generateRequestId", "isResponseAction", "RejectAction", "create", "options", "RequestModelAction", "SetModelAction", "newRoot", "requestId", "UpdateModelAction", "input", "RequestPopupModelAction", "SetPopupModelAction", "SetBoundsAction", "bounds", "RequestBoundsAction", "ComputedBoundsAction", "_a", "LoggingAction", "SelectAction", "_b", "SelectAllAction", "CollapseExpandAction", "CollapseExpandAllAction", "OpenAction", "elementId", "LayoutAction", "CenterAction", "elementIds", "FitToScreenAction", "SetViewportAction", "newViewport", "BringToFrontAction", "elementIDs", "UndoAction", "RedoAction", "MoveAction", "moves", "HoverFeedbackAction", "CreateElementAction", "elementSchema", "DeleteElementAction", "ApplyLabelEditAction", "labelId", "text", "ReconnectAction", "actions_1", "object_1", "isAction", "object", "exports", "isRequestAction", "isResponseAction", "RejectAction", "message", "responseId", "detail", "LabeledAction", "label", "actions", "icon", "isLabeledAction", "element", "exports", "getNonCustomTagKeys", "BindingScopeEnum", "exports", "BindingTypeEnum", "TargetTypeEnum", "idCounter", "id", "exports", "literal_types_1", "id_1", "Binding", "serviceIdentifier", "scope", "request", "clone", "exports", "exports", "UNDEFINED_INJECT_ANNOTATION", "name", "ARGUMENTS_LENGTH_MISMATCH", "values", "_i", "POST_CONSTRUCT_ERROR", "CIRCULAR_DEPENDENCY_IN_FACTORY", "METADATA_KEY", "MetadataReader", "constructorFunc", "compilerGeneratedMetadata", "userGeneratedMetadata", "exports", "BindingCount", "exports", "ERROR_MSGS", "isStackOverflowExeption", "error", "exports", "ERROR_MSGS", "getServiceIdentifierAsString", "serviceIdentifier", "_serviceIdentifier", "exports", "listRegisteredBindingsForServiceIdentifier", "container", "getBindings", "registeredBindingsList", "registeredBindings", "binding", "name", "getFunctionName", "alreadyDependencyChain", "request", "dependencyChainToString", "_createStringArr", "req", "result", "stringArr", "circularDependencyToException", "childRequest", "services", "listMetadataForTarget", "serviceIdentifierString", "target", "m_1", "namedTag", "otherTags", "tag", "v", "name_1", "match", "id_1", "Context", "container", "plan", "currentRequest", "exports", "METADATA_KEY", "Metadata", "key", "value", "exports", "Plan", "parentContext", "rootRequest", "exports", "ERROR_MSGS", "METADATA_KEY", "tagParameter", "annotationTarget", "propertyName", "parameterIndex", "metadata", "metadataKey", "_tagParameterOrProperty", "exports", "tagProperty", "paramsOrPropertiesMetadata", "isParameterDecorator", "key", "paramOrPropertyMetadata", "_i", "paramOrPropertyMetadata_1", "m", "_decorate", "decorators", "target", "_param", "paramIndex", "decorator", "decorate", "error_msgs_1", "METADATA_KEY", "metadata_1", "decorator_utils_1", "LazyServiceIdentifer", "cb", "exports", "inject", "serviceIdentifier", "target", "targetKey", "index", "metadata", "QueryableString", "str", "searchString", "reverseString", "reverseSearchString", "compareString", "exports", "METADATA_KEY", "id_1", "metadata_1", "queryable_string_1", "Target", "type", "name", "serviceIdentifier", "namedOrTagged", "metadataItem", "key", "_i", "_a", "m", "metadata", "_this", "value", "exports", "inject_1", "ERROR_MSGS", "literal_types_1", "METADATA_KEY", "serialization_1", "exports", "target_1", "getDependencies", "metadataReader", "func", "constructorName", "targets", "getTargets", "isBaseClass", "metadata", "serviceIdentifiers", "msg", "constructorArgsMetadata", "keys", "hasUserDeclaredUnknownInjections", "hasOptionalParameters", "iterations", "constructorTargets", "getConstructorArgsAsTargets", "propertyTargets", "getClassPropsAsTargets", "__spreadArray", "getConstructorArgsAsTarget", "index", "targetMetadata", "formatTargetMetadata", "isManaged", "serviceIdentifier", "injectIdentifier", "isObject", "isFunction", "isUndefined", "isUnknownType", "target", "i", "constructorFunc", "classPropsMetadata", "_i", "keys_1", "key", "targetName", "baseConstructor", "baseTargets", "getBaseClassDependencyCount", "baseConstructorName", "t", "m", "unmanagedCount", "dependencyCount", "targetMetadataMap", "id_1", "Request", "serviceIdentifier", "parentContext", "parentRequest", "bindings", "target", "child", "exports", "binding_count_1", "ERROR_MSGS", "literal_types_1", "METADATA_KEY", "exceptions_1", "serialization_1", "context_1", "metadata_1", "plan_1", "reflection_utils_1", "request_1", "target_1", "getBindingDictionary", "cntnr", "exports", "_createTarget", "isMultiInject", "targetType", "serviceIdentifier", "name", "key", "value", "metadataKey", "injectMetadata", "target", "tagMetadata", "_getActiveBindings", "metadataReader", "avoidConstraints", "context", "parentRequest", "bindings", "getBindings", "activeBindings", "binding", "request", "_validateActiveBindingCount", "container", "serviceIdentifierString", "msg", "_createSubRequests", "childRequest", "thePlan", "subChildRequest", "dependencies", "baseClassDependencyCount", "error", "dependency", "bindingDictionary", "plan", "createMockRequest", "error_msgs_1", "literal_types_1", "METADATA_KEY", "_injectProperties", "instance", "childRequests", "resolveRequest", "propertyInjectionsRequests", "childRequest", "propertyInjections", "r", "index", "propertyName", "injection", "_createInstance", "Func", "injections", "__spreadArray", "_postConstruct", "constr", "result", "data", "e", "resolveInstance", "constructorInjectionsRequests", "constructorInjections", "exports", "ERROR_MSGS", "literal_types_1", "exceptions_1", "serialization_1", "instantiation_1", "invokeFactory", "factoryType", "serviceIdentifier", "fn", "error", "_resolveRequest", "requestScope", "request", "bindings", "childRequests", "targetIsAnArray", "targetParentIsNotAnArray", "childRequest", "_f", "result", "binding_1", "isSingleton", "isRequestSingleton", "resolve", "context", "exports", "METADATA_KEY", "metadata_1", "traverseAncerstors", "request", "constraint", "parent", "exports", "taggedConstraint", "key", "value", "namedConstraint", "typeConstraint", "type", "binding", "serviceIdentifier", "constructor", "binding_on_syntax_1", "constraint_helpers_1", "BindingWhenSyntax", "binding", "constraint", "name", "request", "targetIsDefault", "tag", "value", "parent", "ancestor", "exports", "binding_when_syntax_1", "BindingOnSyntax", "binding", "handler", "exports", "binding_on_syntax_1", "binding_when_syntax_1", "BindingWhenOnSyntax", "binding", "constraint", "name", "tag", "value", "parent", "ancestor", "handler", "exports", "literal_types_1", "binding_when_on_syntax_1", "BindingInSyntax", "binding", "exports", "binding_in_syntax_1", "binding_on_syntax_1", "binding_when_syntax_1", "BindingInWhenOnSyntax", "binding", "constraint", "name", "tag", "value", "parent", "ancestor", "handler", "exports", "ERROR_MSGS", "literal_types_1", "binding_in_when_on_syntax_1", "binding_when_on_syntax_1", "BindingToSyntax", "binding", "constructor", "self", "value", "func", "factory", "bindingWhenOnSyntax", "serviceIdentifier", "context", "autofactory", "provider", "service", "exports", "ContainerSnapshot", "bindings", "middleware", "snapshot", "exports", "ERROR_MSGS", "Lookup", "serviceIdentifier", "value", "entry", "condition", "_this", "entries", "key", "updatedEntries", "copy", "b", "func", "exports", "binding_1", "ERROR_MSGS", "literal_types_1", "METADATA_KEY", "metadata_reader_1", "planner_1", "resolver_1", "binding_to_syntax_1", "id_1", "serialization_1", "container_snapshot_1", "lookup_1", "Container", "containerOptions", "options", "container1", "container2", "container3", "_i", "container", "targetContainers", "__spreadArray", "targetContainer", "bindingDictionary", "copyDictionary", "origin", "destination", "key", "value", "binding", "targetBindingDictionary", "modules", "getHelpers", "_a", "modules_1", "currentModule", "containerModuleHelpers", "modules_2", "_b", "_this", "conditionFactory", "expected", "item", "module", "condition", "serviceIdentifier", "scope", "bound", "named", "bindings", "request_1", "b", "snapshot", "child", "middlewares", "initial", "prev", "curr", "metadataReader", "constructorFunction", "tempContainer", "m", "setModuleId", "bindingToSyntax", "moduleId", "getBindFunction", "_bind", "getUnbindFunction", "_unbind", "getIsboundFunction", "_isBound", "getRebindFunction", "_rebind", "mId", "avoidConstraints", "isMultiInject", "targetType", "result", "defaultArgs", "context", "args", "exports", "id_1", "ContainerModule", "registry", "exports", "AsyncContainerModule", "ERRORS_MSGS", "METADATA_KEY", "injectable", "target", "types", "exports", "metadata_1", "decorator_utils_1", "tagged", "metadataKey", "metadataValue", "target", "targetKey", "index", "metadata", "exports", "METADATA_KEY", "metadata_1", "decorator_utils_1", "named", "name", "target", "targetKey", "index", "metadata", "exports", "METADATA_KEY", "metadata_1", "decorator_utils_1", "optional", "target", "targetKey", "index", "metadata", "exports", "METADATA_KEY", "metadata_1", "decorator_utils_1", "unmanaged", "target", "targetKey", "index", "metadata", "exports", "METADATA_KEY", "metadata_1", "decorator_utils_1", "multiInject", "serviceIdentifier", "target", "targetKey", "index", "metadata", "exports", "METADATA_KEY", "metadata_1", "decorator_utils_1", "targetName", "name", "target", "targetKey", "index", "metadata", "exports", "ERRORS_MSGS", "METADATA_KEY", "metadata_1", "postConstruct", "target", "propertyKey", "descriptor", "metadata", "exports", "multiBindToService", "container", "service", "types", "_i", "t", "exports", "keys", "exports", "container_1", "literal_types_1", "container_module_1", "injectable_1", "tagged_1", "named_1", "inject_1", "optional_1", "unmanaged_1", "multi_inject_1", "target_name_1", "post_construct_1", "metadata_reader_1", "id_1", "decorator_utils_1", "constraint_helpers_1", "serialization_1", "binding_utils_1", "Deferred", "resolve", "reject", "exports", "exports", "inversify_1", "ProviderRegistry", "key", "cstr", "arg", "existingCstr", "__decorate", "exports", "FactoryRegistry", "factory", "existingFactory", "InstanceRegistry", "instance", "existingInstance", "MultiInstanceRegistry", "instances", "existingInstances", "object_1", "Point", "add", "p1", "p2", "subtract", "equals", "point1", "point2", "shiftTowards", "point", "refPoint", "distance", "diff", "normalized", "normalize", "shift", "mag", "magnitude", "linear", "p0", "lambda", "euclideanDistance", "a", "b", "dx", "dy", "manhattanDistance", "maxDistance", "exports", "angleOfPoint", "p", "angleBetweenPoints", "lengthProduct", "dotProduct", "centerOfLine", "s", "Bounds", "Dimension", "isValid", "d", "isBounds", "element", "combine", "b0", "b1", "minX", "minY", "maxX", "maxY", "translate", "center", "includes", "toDegrees", "toRadians", "almostEquals", "FluentIterableImpl", "startFn", "nextFn", "iterator", "callback", "filterIterable", "mapIterable", "index", "result", "element", "exports", "toArray", "input", "createIterator", "done", "value", "collection", "method", "length", "ArrayIterator", "array", "geometry_1", "iterable_1", "SModelElement", "current", "SModelRoot", "SChildElement", "feature", "exports", "isParent", "element", "children", "SParentElement", "child", "index", "i", "filter", "newIndex", "point", "ModelIndexImpl", "ID_CHARS", "createRandomId", "length", "id", "key", "value", "inversify_1", "types_1", "registry_1", "smodel_1", "SModelRegistry", "registrations", "registration", "defaultFeatures", "featureSet", "createFeatureSet", "element", "constr", "obj", "__decorate", "__param", "exports", "SModelFactory", "schema", "parent", "child", "regElement", "root", "key", "value", "propertyName", "descriptor", "childSchema", "defaults", "custom", "f", "inversify_1", "AnimationFrameSyncer", "task", "time", "tasks", "endTasks", "__decorate", "exports", "inversify_1", "actions_1", "async_1", "types_1", "smodel_factory_1", "animation_frame_syncer_1", "ActionDispatcher", "registry", "action", "actions", "deferred", "rejectAction", "handlers", "error", "promises", "handler", "result", "predicate", "a", "resolve", "reject", "__decorate", "exports", "isInjectable", "constr", "exports", "inversify_1", "types_1", "registry_1", "inversify_2", "ActionHandlerRegistry", "registrations", "initializers", "registration", "initializer", "__decorate", "__param", "exports", "configureActionHandler", "context", "kind", "constr", "ctx", "onAction", "handle", "inversify_1", "DefaultDiagramLocker", "action", "__decorate", "exports", "easeInOut", "x", "exports", "easing_1", "Animation", "context", "ease", "resolve", "reject", "start", "frames", "lambda", "time", "dtime", "t", "current", "finalModel", "exports", "CompoundAnimation", "model", "components", "animation", "a", "inversify_1", "Command", "__decorate", "exports", "MergeableCommand", "command", "context", "HiddenCommand", "PopupCommand", "SystemCommand", "ResetCommand", "inversify_1", "inversify_2", "types_1", "CommandActionHandler", "commandRegistration", "action", "exports", "CommandActionHandlerInitializer", "registrations", "registry", "registration", "__decorate", "__param", "configureCommand", "context", "constr", "ctx", "childContainer", "object_1", "types_1", "overrideCommandStackOptions", "container", "options", "defaultOptions", "exports", "inversify_1", "types_1", "smodel_factory_1", "smodel_1", "animation_frame_syncer_1", "command_1", "CommandStack", "state", "commands", "command", "c", "context", "operation", "beforeResolve", "resolve", "target", "commandResult", "error", "newState", "copyState", "newModel", "model", "cause", "lastCommand", "currentModel", "__decorate", "exports", "ServerActionHandlerRegistry", "kind", "handler", "list", "index", "exports", "cloneModel", "model", "exports", "applyBounds", "root", "action", "index", "SModelIndex", "b", "element", "bae", "a", "alignable", "getBasicType", "colonIndex", "getSubType", "schema", "findElement", "parent", "elementId", "child", "result", "id", "current", "action_handler_1", "actions_1", "async_1", "model_utils_1", "DiagramServer", "dispatch", "services", "kind", "handler", "newRoot", "action", "id", "future", "rejectAction", "err", "error", "handlers", "_a", "h", "update", "cause", "request", "response", "currentRoot", "modelType", "requestId", "exports", "object_1", "isScrollable", "element", "exports", "isZoomable", "__exportStar", "exports", "sprotty_protocol_1", "isCtrlOrCmd", "event", "isMac", "exports", "isCrossSite", "url", "baseURL", "getWindowScroll", "hitsMouseEvent", "child", "clientRect", "inversify_1", "geometry_1", "types_1", "smodel_1", "command_1", "browser_1", "CanvasBoundsInitializer", "vnode", "element", "domElement", "oldBounds", "newBounds", "InitializeCanvasBoundsAction", "bounds", "scroll", "__decorate", "exports", "create", "newCanvasBounds", "InitializeCanvasBoundsCommand", "action", "context", "__param", "inversify_1", "actions_1", "command_1", "types_1", "initialize_canvas_1", "RequestModelAction", "options", "requestId", "exports", "SetModelAction", "newRoot", "responseId", "SetModelCommand", "action", "context", "__decorate", "__param", "types_1", "smodel_1", "registerModelElement", "context", "type", "constr", "features", "exports", "getBasicType", "schema", "colonIndex", "getSubType", "findElement", "parent", "elementId", "child", "result", "findParent", "element", "predicate", "current", "findParentByFeature", "translatePoint", "point", "source", "target", "targetTrace", "i", "translateBounds", "bounds", "upperLeft", "lowerRight", "containsSome", "root", "test", "el", "find", "elements", "transformToRootBounds", "EnableToolsAction", "create", "toolIds", "exports", "EnableDefaultToolsAction", "setAttr", "vnode", "name", "value", "getAttrs", "exports", "setClass", "getClass", "setNamespace", "node", "ns", "children", "i", "child", "copyClassesFromVNode", "source", "target", "classList", "c", "copyClassesFromElement", "element", "item", "mergeStyle", "style", "getData", "on", "event", "listener", "val", "getOn", "data", "inversify_1", "types_1", "smodel_1", "vnode_utils_1", "KeyTool", "keyListeners", "keyListener", "index", "methodName", "model", "event", "actions", "listener", "a", "b", "element", "vnode", "__decorate", "__param", "exports", "KeyListener", "browser_1", "matchesKeystroke", "event", "code", "modifiers", "getActualCode", "m", "exports", "result", "STRING_CODE", "addKeyCode", "stringCode", "numericCode", "inversify_1", "types_1", "tool_1", "key_tool_1", "keyboard_1", "ToolManager", "tool", "toolIds", "id", "toolId", "tools", "__decorate", "exports", "ToolManagerActionHandler", "action", "DefaultToolsEnablingKeyListener", "element", "event", "inversify_1", "registry_1", "command_1", "types_1", "UIExtensionRegistry", "extensions", "extension", "__decorate", "__param", "exports", "SetUIExtensionVisibilityAction", "create", "options", "_a", "SetUIExtensionVisibilityCommand", "action", "context", "inversify_1", "types_1", "AbstractUIExtension", "root", "contextElementIds", "focusedElement", "baseDiv", "baseDivId", "container", "visible", "containerElement", "__decorate", "exports", "inversify_1", "types_1", "DOMHelper", "element", "__decorate", "exports", "inversify_1", "actions_1", "smodel_1", "types_1", "dom_helper_1", "vnode_utils_1", "MouseTool", "mouseListeners", "mouseListener", "index", "model", "event", "target", "element", "methodName", "actions", "listener", "a", "b", "actionOrPromise", "action", "domElement", "vnode", "__decorate", "__param", "exports", "PopupMouseTool", "MouseListener", "MousePositionTracker", "require_snabbdom_cjs", "__commonJSMin", "exports", "createElement", "tagName", "options", "createElementNS", "namespaceURI", "qualifiedName", "createDocumentFragment", "parseFragment", "createTextNode", "text", "createComment", "insertBefore", "parentNode", "newNode", "referenceNode", "isDocumentFragment$1", "node", "removeChild", "child", "appendChild", "nextSibling", "_a", "fragment", "parent", "children", "index", "elm", "setTextContent", "getTextContent", "isElement$1", "isText", "isComment", "fragmentNode", "_b", "_c", "htmlDomApi", "vnode", "sel", "data", "key", "array", "primitive", "s", "isUndef", "isDef", "emptyNode", "sameVnode", "vnode1", "vnode2", "isSameKey", "isSameIs", "isSameSel", "isSameTextOrFragment", "documentFragmentIsNotSupported", "isElement", "api", "isDocumentFragment", "createKeyToOldIdx", "beginIdx", "endIdx", "map", "i", "hooks", "init$1", "modules", "domApi", "cbs", "hook", "module", "currentHook", "emptyNodeAt", "id", "classes", "c", "emptyDocumentFragmentAt", "frag", "createRmCb", "childElm", "listeners", "createElm", "insertedVnodeQueue", "_d", "init", "hashIdx", "dotIdx", "hash", "dot", "tag", "ch", "addVnodes", "parentElm", "before", "vnodes", "startIdx", "invokeDestroyHook", "j", "removeVnodes", "rm", "removeHook", "updateChildren", "oldCh", "newCh", "oldStartIdx", "newStartIdx", "oldEndIdx", "oldStartVnode", "oldEndVnode", "newEndIdx", "newStartVnode", "newEndVnode", "oldKeyToIdx", "idxInOld", "elmToMove", "patchVnode", "oldVnode", "_e", "_f", "_g", "_h", "addNS", "childData", "h", "b", "copyToThunk", "thunk", "ns", "cur", "prepatch", "old", "oldArgs", "args", "fn", "pre", "newVnode", "attachData", "post", "_", "destroy", "create", "real", "placeholder", "attachTo", "target", "toVNode", "cn", "attrs", "dataset", "name", "n", "elmAttrs", "elmChildren", "xlinkNS", "xmlNS", "colonChar", "xChar", "updateAttrs", "oldAttrs", "attributesModule", "updateClass", "oldClass", "klass", "classModule", "CAPS_REGEX", "updateDataset", "oldDataset", "d", "datasetModule", "invokeHandler", "handler", "event", "handleEvent", "on", "createListener", "updateEventListeners", "oldOn", "oldListener", "oldElm", "listener", "eventListenersModule", "updateProps", "oldProps", "props", "propsModule", "raf", "nextFrame", "reflowForced", "setNextFrame", "obj", "prop", "val", "updateStyle", "oldStyle", "style", "oldHasDel", "name2", "applyDestroyStyle", "applyRemoveStyle", "amount", "applied", "ev", "forceReflow", "styleModule", "Fragment", "flatChildren", "flattenAndFilter", "flattened", "jsx", "snabbdom_1", "inversify_1", "ThunkView", "model", "context", "vnode", "thunk", "cur", "oldVnode", "old", "oldArg", "newArg", "i", "key", "__decorate", "exports", "isThunk", "snabbdom_1", "modulesNS", "SVGNS", "normalizeAttrs", "source", "defNS", "namespace", "data", "mod", "key", "idx", "addAttr", "modname", "val", "JSX", "tag", "attrs", "children", "exports", "html", "svg", "jsx_1", "inversify_1", "types_1", "registry_1", "inversify_2", "smodel_factory_1", "smodel_utils_1", "sprotty_protocol_1", "findArgValue", "arg", "key", "exports", "ViewRegistry", "registrations", "registration", "EmptyView", "MissingView", "__decorate", "__param", "configureModelElement", "context", "type", "modelConstr", "viewConstr", "features", "configureView", "constr", "ctx", "model", "position", "inversify_1", "types_1", "animation_frame_syncer_1", "ViewerCache", "model", "cause", "isCacheEmpty", "__decorate", "exports", "object_1", "types_1", "defaultViewerOptions", "exports", "configureViewerOptions", "context", "options", "opt", "overrideViewerOptions", "container", "inversify_1", "snabbdom_1", "jsx_1", "browser_1", "initialize_canvas_1", "smodel_factory_1", "types_1", "thunk_view_1", "vnode_utils_1", "ModelRenderer", "viewRegistry", "targetKind", "postprocessors", "args", "vnode", "element", "processor", "context", "child", "cause", "exports", "PatcherProvider", "__decorate", "ModelViewer", "modelRendererFactory", "patcherProvider", "model", "newVDOM", "hadFocus", "placeholder", "lastRootVNode", "lastElement", "focus", "vdom", "baseDiv", "newBounds", "bounds", "scroll", "__param", "HiddenModelViewer", "hiddenPostprocessors", "hiddenModel", "hiddenVNode", "PopupModelViewer", "popupPostprocessors", "popupClosed", "position", "inlineStyle", "inversify_1", "vnode_utils_1", "FocusFixPostprocessor", "vnode", "element", "__decorate", "exports", "inversify_1", "types_1", "LogLevel", "exports", "NullLogger", "thisArg", "message", "params", "__decorate", "ConsoleLogger", "caller", "inversify_1", "types_1", "dom_helper_1", "vnode_utils_1", "IdPostprocessor", "vnode", "element", "attrs", "__decorate", "exports", "model_utils_1", "vnode_utils_1", "inversify_1", "CssClassPostprocessor", "vnode", "element", "cssClass", "subType", "__decorate", "exports", "inversify_1", "types_1", "initialize_canvas_1", "logging_1", "action_dispatcher_1", "action_handler_1", "command_stack_1", "smodel_factory_1", "animation_frame_syncer_1", "viewer_1", "viewer_options_1", "mouse_tool_1", "key_tool_1", "vnode_postprocessor_1", "view_1", "viewer_cache_1", "dom_helper_1", "id_postprocessor_1", "command_registration_1", "css_class_postprocessor_1", "tool_manager_1", "tool_1", "set_model_1", "ui_extension_registry_1", "diagram_locker_1", "defaultContainerModule", "bind", "_unbind", "isBound", "ctx", "resolve", "container", "targetKind", "processors", "args", "viewRegistry", "context", "exports", "geometry_1", "smodel_1", "smodel_utils_1", "browser_1", "exports", "isBoundsAware", "element", "isLayoutContainer", "isLayoutableChild", "isSizeable", "isAlignable", "getAbsoluteBounds", "boundsAware", "bounds", "current", "parent", "canvasBounds", "getAbsoluteClientBounds", "domHelper", "viewerOptions", "x", "y", "width", "height", "svgElementId", "svgElement", "rect", "scroll", "container", "findChildrenAtPosition", "point", "matches", "doFindChildrenAtPosition", "child", "newPoint", "SShapeElement", "newBounds", "result", "inversify_1", "actions_1", "protocol", "__importStar", "command_1", "types_1", "model_1", "SetBoundsAction", "bounds", "exports", "RequestBoundsAction", "newRoot", "requestId", "ComputedBoundsAction", "revision", "alignments", "responseId", "LayoutAction", "SetBoundsCommand", "action", "context", "b", "element", "__decorate", "__param", "RequestBoundsCommand", "inversify_1", "geometry_1", "types_1", "registry_1", "model_1", "inversify_2", "LayoutRegistry", "layouts", "layout", "__decorate", "__param", "exports", "Layouter", "element2boundsData", "StatefulLayouter", "layoutRegistry", "log", "data", "element", "boundsData", "bounds", "index", "configureLayout", "context", "kind", "constr", "ctx", "inversify_1", "actions_1", "geometry_1", "smodel_1", "types_1", "layout_1", "model_1", "BoundsData", "exports", "HiddenBoundsUpdater", "vnode", "element", "cause", "request", "resizes", "alignments", "boundsData", "resize", "revision", "boundingBox", "newBounds", "elm", "bounds", "__decorate", "geometry_1", "smodel_1", "model_1", "inversify_1", "AbstractLayout", "container", "layouter", "boundsData", "options", "childrenSize", "maxWidth", "maxHeight", "offset", "lastOffset", "layoutOptions", "currentContainer", "bounds", "containerOptions", "currentOffset", "child", "childOptions", "hAlign", "vAlign", "element", "current", "allOptions", "a", "b", "__decorate", "exports", "inversify_1", "geometry_1", "abstract_layout_1", "model_1", "VBoxLayouter", "container", "containerOptions", "layouter", "maxWidth", "maxHeight", "isFirst", "child", "bounds", "boundsData", "childOptions", "currentOffset", "dx", "a", "b", "__decorate", "exports", "inversify_1", "geometry_1", "abstract_layout_1", "model_1", "HBoxLayouter", "container", "containerOptions", "layouter", "maxWidth", "maxHeight", "isFirst", "child", "bounds", "boundsData", "childOptions", "currentOffset", "dy", "a", "b", "__decorate", "exports", "inversify_1", "geometry_1", "abstract_layout_1", "model_1", "StackLayouter", "container", "options", "layouter", "maxWidth", "maxHeight", "child", "bounds", "boundsData", "childOptions", "containerOptions", "currentOffset", "dx", "dy", "a", "b", "__decorate", "exports", "inversify_1", "geometry_1", "model_1", "ShapeView", "model", "context", "ab", "canvasBounds", "__decorate", "exports", "inversify_1", "registry_1", "types_1", "inversify_2", "ButtonHandlerRegistry", "buttonHandlerRegistrations", "buttonHandlerFactories", "factory", "__decorate", "__param", "exports", "configureButtonHandler", "context", "type", "constr", "ctx", "exports", "isFadeable", "element", "model_1", "model_2", "SButton", "exports", "exports", "isNameable", "element", "name", "inversify_1", "actions_1", "action_1", "types_1", "iterable_1", "model_1", "CommandPaletteActionProviderRegistry", "actionProviders", "root", "text", "lastMousePosition", "index", "actionLists", "provider", "p", "acc", "promise", "__decorate", "__param", "exports", "RevealNamedElementActionProvider", "logger", "modelRoot", "element", "nameable", "exports", "codiconCSSString", "codiconId", "actionItem", "animationSpin", "additionalCSS", "codiconCSSClasses", "cssClassArray", "exports", "isSelectable", "element", "isSelected", "autocomplete", "settings", "doc", "container", "uid", "containerStyle", "debounceWaitMs", "preventSubmit", "disableAutoSelect", "items", "inputValue", "minLen", "showOnFocus", "selected", "keypressCounter", "debounceTimer", "input", "detach", "parent", "clearDebounceTimer", "attach", "containerDisplayed", "clear", "updatePosition", "maxHeight", "inputRect", "calc", "docEl", "clientTop", "clientLeft", "scrollTop", "scrollLeft", "top", "left", "update", "render", "item", "_", "__", "itemElement", "renderGroup", "groupName", "groupDiv", "fragment", "prevGroup", "index", "div", "ev", "empty", "updateScroll", "updateIfDisplayed", "resizeEventHandler", "scrollEventHandler", "e", "keyupEventHandler", "keyCode", "ignore", "_i", "ignore_1", "key", "startFetch", "elements", "element", "previous", "selectBottom", "containerBottom", "selectPrev", "i", "selectNext", "keydownEventHandler", "containerIsDisplayed", "focusEventHandler", "trigger", "savedKeypressCounter", "inputText", "cursorPos", "blurEventHandler", "evt", "destroy", "inversify_1", "actions_1", "action_1", "types_1", "ui_extension_1", "ui_extension_registry_1", "dom_helper_1", "key_tool_1", "codicon_1", "iterable_1", "keyboard_1", "model_1", "model_2", "action_providers_1", "mouse_tool_1", "autocompleter_1", "__importDefault", "CommandPalette", "CommandPalette_1", "root", "contextElementIds", "containerElement", "event", "selectedElementIds", "x", "y", "selectedElements", "e", "bounds", "text", "update", "item", "currentValue", "input", "inputRect", "container", "maxHeight", "actions", "reason", "success", "value", "itemElement", "wordMatcher", "espaceForRegExp", "regex", "match", "iconId", "filterText", "action", "label", "word", "actionDispatcher", "toActionArray", "__decorate", "exports", "CommandPaletteKeyListener", "element", "toAnchor", "anchor", "exports", "inversify_1", "command_1", "smodel_1", "types_1", "exports", "isDeletable", "element", "DeleteElementAction", "create", "elementIds", "ResolvedDelete", "DeleteElementCommand", "action", "context", "index", "id", "resolvedDelete", "__decorate", "__param", "inversify_1", "types_1", "delete_1", "model_1", "sprotty_protocol_1", "ContextMenuProviderRegistry", "menuProviders", "root", "lastMousePosition", "menues", "provider", "p", "menuItems", "acc", "promise", "menuItemsWithParentId", "menuItem", "fragments", "matchingParent", "nextParents", "fragment", "item", "__decorate", "__param", "exports", "DeleteContextMenuItemProvider", "selectedElements", "e", "inversify_1", "actions_1", "menu_providers_1", "mouse_tool_1", "types_1", "model_1", "smodel_utils_1", "ContextMenuMouseListener", "contextMenuService", "menuProvider", "target", "event", "menuService", "mousePosition", "root", "id", "isTargetSelected", "selectableTarget", "restoreSelection", "menuItems", "options", "val", "items", "__decorate", "__param", "exports", "exports", "isHoverable", "element", "hasPopupFeature", "exports", "isLocateable", "element", "isMoveable", "geometry_1", "smodel_1", "model_1", "delete_1", "model_2", "model_3", "model_4", "SRoutableElement", "bounds", "routingPoint", "exports", "isConnectable", "element", "getAbsoluteRouteBounds", "model", "route", "getRouteBounds", "current", "parent", "point", "SConnectableElement", "e", "routable", "role", "SRoutingHandle", "feature", "SDanglingAnchor", "smodel_1", "model_1", "model_2", "exports", "isEdgeLayoutable", "element", "checkEdgeLayoutable", "EdgePlacement", "model_1", "exports", "canEditRouting", "element", "isEditableLabel", "isWithEditableLabel", "smodel_1", "exports", "isViewport", "element", "exports", "isExportable", "element", "geometry_1", "smodel_1", "model_1", "model_2", "ViewportRootElement", "index", "newBounds", "point", "result", "exports", "geometry_1", "smodel_1", "model_1", "model_2", "delete_1", "model_3", "model_4", "model_5", "model_6", "model_7", "model_8", "viewport_root_1", "iterable_1", "SGraph", "index", "SGraphIndex", "exports", "SNode", "routable", "role", "c", "SPort", "e", "SEdge", "SLabel", "SCompartment", "element", "sourceArr", "targetArr", "state", "edge", "inversify_1", "types_1", "registry_1", "exports", "AnchorComputerRegistry", "anchors", "anchor", "routerKind", "anchorKind", "__decorate", "__param", "inversify_1", "geometry_1", "smodel_utils_1", "model_1", "anchor_1", "model_2", "Side", "exports", "DefaultAnchors", "element", "edgeParent", "kind", "bounds", "side", "point", "leftDistance", "rightDistance", "topDistance", "bottomDistance", "currentNearestSide", "currentMinDist", "AbstractEdgeRouter", "edge", "segments", "segmentStart", "segmentEnd", "lambda", "routedPoints", "segmentLengths", "totalLength", "i", "currentLenght", "tAsLenght", "newLength", "type", "routingPointIndex", "handle", "route", "position", "handleIndex", "getIndex", "rp", "start", "end", "connectable", "refPoint", "refContainer", "anchorCorrection", "translatedRefPoint", "anchorComputer", "strokeCorrection", "anchor", "moves", "remainingMoves", "move", "routingPoints", "updateHandles", "addRoutingPoints", "sourceAnchors", "targetAnchors", "options", "corners", "maxPointIndex", "child", "newSourceId", "newTargetId", "hasChanged", "newSource", "newTarget", "snapshot", "selfEdgeIndex", "standardDist", "delta", "otherEdge", "newRoutingPoints", "__decorate", "inversify_1", "geometry_1", "model_1", "anchor_1", "abstract_edge_router_1", "PolylineEdgeRouter", "PolylineEdgeRouter_1", "edge", "source", "target", "sourceAnchor", "targetAnchor", "options", "routingPoints", "rpCount", "startRef", "endRef", "p0", "pn", "result", "i", "p", "route", "curr", "handle", "child", "prev", "next", "prevDiff", "nextDiff", "angle", "start", "end", "moves", "move", "points", "index", "__decorate", "exports", "inversify_1", "smodel_1", "types_1", "view_1", "registry_1", "model_1", "polyline_edge_router_1", "isMultipleEdgesRouter", "router", "EdgeRouterRegistry", "edgeRouters", "kind", "parent", "routing", "postProcessor", "EdgeRouting", "routersEdges", "elementsToProcess", "element", "child", "routerKind", "edges", "childRouter", "edge", "args", "edgeRouting", "route", "__decorate", "__param", "exports", "routableId", "otherRoutes", "inversify_1", "geometry_1", "smodel_1", "vnode_utils_1", "sgraph_1", "model_1", "model_2", "routing_1", "EdgeLayoutPostprocessor", "vnode", "element", "placement", "edge", "position", "router", "pointOnEdge", "derivativeOnEdge", "transform", "angle", "flippedAngle", "alignment", "flip", "x", "y", "bounds", "current", "allPlacements", "a", "b", "label", "quadrant", "midLeft", "topLeft", "topRight", "midRight", "bottomRight", "bottomLeft", "p0", "p1", "p2", "p3", "__decorate", "exports", "inversify_1", "types_1", "edge_layout_1", "edgeLayoutModule", "bind", "exports", "inversify_1", "command_1", "smodel_1", "types_1", "CreateElementAction", "create", "elementSchema", "options", "exports", "CreateElementCommand", "action", "context", "container", "__decorate", "__param", "exports", "isCreatingOnDrag", "element", "exports", "add", "p1", "p2", "subtract", "pointEquals", "point1", "point2", "isValidDimension", "d", "isBounds", "element", "combine", "b0", "b1", "minX", "minY", "maxX", "maxY", "translate", "b", "p", "center", "centerOfLine", "s", "includes", "Direction", "euclideanDistance", "a", "dx", "dy", "manhattanDistance", "maxDistance", "angleOfPoint", "angleBetweenPoints", "lengthProduct", "dotProduct", "shiftTowards", "point", "refPoint", "distance", "diff", "normalized", "normalize", "shift", "mag", "magnitude", "toDegrees", "toRadians", "almostEquals", "linear", "p0", "lambda", "Diamond", "bounds", "PointToPointLine", "c", "hDegrees", "degrees", "otherLine", "x1", "y1", "x2", "y2", "x3", "y3", "x4", "y4", "denominator", "numeratorA", "numeratorB", "determinantA", "determinantB", "x", "y", "intersection", "l1", "l2", "jsx_1", "sgraph_1", "views_1", "geometry_1", "inversify_1", "SvgViewportView", "model", "context", "args", "transform", "__decorate", "exports", "CircularNodeView", "node", "radius", "d", "RectangularNodeView", "DiamondNodeView", "diamond", "points", "svgStr", "point", "EmptyGroupView", "inversify_1", "actions_1", "command_1", "types_1", "mouse_tool_1", "key_tool_1", "keyboard_1", "model_1", "iterable_1", "model_2", "EditLabelAction", "create", "labelId", "exports", "isEditLabelAction", "element", "ApplyLabelEditAction", "text", "isApplyLabelEditAction", "ResolvedLabelEdit", "ApplyLabelEditCommand", "action", "context", "label", "__decorate", "__param", "EditLabelMouseListener", "target", "event", "editableLabel", "getEditableLabel", "EditLabelKeyListener", "editableLabels", "e", "inversify_1", "geometry_1", "model_1", "action_dispatcher_1", "types_1", "ExportSvgAction", "create", "svg", "requestId", "exports", "SvgExporter", "root", "request", "div", "svgElement", "svgElementOrig", "serializer", "svgCopy", "iframe", "docCopy", "svgElementNew", "bounds", "svgCode", "source", "target", "skipedProperties", "sourceStyle", "targetStyle", "diffStyle", "i", "key", "value", "sourceChild", "targetChild", "allBounds", "element", "one", "two", "__decorate", "inversify_1", "actions_1", "model_utils_1", "types_1", "svg_exporter_1", "ModelSource", "registry", "__decorate", "exports", "ComputedBoundsApplicator", "root", "action", "index", "b", "element", "a", "newAlignment", "e", "newPosition", "newSize", "inversify_1", "command_1", "types_1", "model_source_1", "CommitModelAction", "create", "exports", "CommitModelCommand", "action", "context", "model", "result", "doSetOriginal", "commitResult", "originalModel", "__decorate", "__param", "actions_1", "browser_1", "mouse_tool_1", "smodel_utils_1", "model_1", "isZoomable", "element", "exports", "getZoom", "label", "zoom", "viewport", "ZoomMouseListener", "target", "event", "newZoom", "viewportOffset", "offsetFactor", "newViewport", "root", "canvasBounds", "windowScroll", "inversify_1", "actions_1", "types_1", "ui_extension_1", "ui_extension_registry_1", "dom_helper_1", "commit_model_1", "keyboard_1", "model_1", "zoom_1", "edit_label_1", "model_2", "EditLabelActionHandler", "action", "EditLabelUI", "__decorate", "exports", "EditLabelUI_1", "containerElement", "element", "event", "code", "modifiers", "value", "_a", "actionDispatcher", "reason", "result", "root", "contextElementIds", "hasEditableLabel", "getEditableLabels", "x", "y", "width", "height", "zoom", "bounds", "style", "scaledFont", "id", "font", "match", "inversify_1", "command_1", "smodel_1", "types_1", "model_1", "routing_1", "model_2", "SwitchEditModeAction", "create", "options", "_a", "_b", "exports", "SwitchEditModeCommand", "action", "context", "index", "id", "element", "parent", "entry", "child", "handle", "rp", "__decorate", "__param", "inversify_1", "command_1", "types_1", "model_1", "routing_1", "ReconnectAction", "create", "options", "exports", "ReconnectCommand", "action", "context", "edge", "router", "before", "after", "__decorate", "__param", "inversify_1", "types_1", "command_registration_1", "action_handler_1", "view_1", "model_1", "svg_views_1", "delete_1", "edit_label_1", "edit_label_ui_1", "edit_routing_1", "reconnect_1", "exports", "bind", "_unbind", "isBound", "context", "exports", "isExpandable", "element", "inversify_1", "actions_1", "smodel_utils_1", "model_1", "CollapseExpandAction", "expandIds", "collapseIds", "exports", "CollapseExpandAllAction", "expand", "ExpandButtonHandler", "button", "expandable", "__decorate", "jsx_1", "model_1", "smodel_utils_1", "inversify_1", "ExpandButtonView", "button", "context", "expandable", "path", "__decorate", "exports", "inversify_1", "actions_1", "command_1", "model_1", "smodel_1", "key_tool_1", "keyboard_1", "model_2", "svg_exporter_1", "model_3", "model_4", "types_1", "ExportSvgKeyListener", "element", "event", "RequestExportSvgAction", "__decorate", "exports", "create", "ExportSvgCommand", "action", "context", "root", "__param", "ExportSvgPostprocessor", "vnode", "cause", "inversify_1", "animation_1", "smodel_1", "vnode_utils_1", "model_1", "FadeAnimation", "model", "elementFades", "context", "removeAfterFadeOut", "t", "elementFade", "element", "exports", "ElementFader", "vnode", "__decorate", "inversify_1", "actions_1", "geometry_1", "keyboard_1", "types_1", "smodel_1", "mouse_tool_1", "command_1", "smodel_factory_1", "key_tool_1", "smodel_utils_1", "model_1", "model_2", "HoverFeedbackAction", "create", "options", "exports", "HoverFeedbackCommand", "action", "context", "modelElement", "__decorate", "__param", "RequestPopupModelAction", "elementId", "bounds", "requestId", "SetPopupModelAction", "newRoot", "responseId", "SetPopupModelCommand", "AbstractHoverMouseListener", "target", "event", "resolve", "HoverMouseListener", "mousePosition", "offset", "targetBounds", "canvasBounds", "boundsInWindow", "distRight", "distBottom", "leftPopupPosition", "canvasRightBorderPosition", "topPopupPosition", "canvasBottomBorderPosition", "side", "distance", "popupBounds", "result", "popupTarget", "hoverTarget", "elementUnderMouse", "element", "PopupHoverMouseListener", "HoverKeyListener", "ClosePopupActionHandler", "model_1", "model_2", "exports", "isDecoration", "e", "SDecoration", "SIssueMarker", "SIssue", "jsx_1", "vnode_utils_1", "inversify_1", "IssueMarkerView", "marker", "context", "scale", "trafo", "maxSeverity", "group", "currentSeverity", "severity", "s", "__decorate", "exports", "inversify_1", "smodel_1", "model_1", "vnode_utils_1", "model_2", "model_3", "routing_1", "sprotty_protocol_1", "DecorationPlacer", "vnode", "element", "position", "translate", "route", "index", "offset", "__decorate", "exports", "require_tinyqueue", "__commonJSMin", "exports", "module", "global", "factory", "TinyQueue", "data", "compare", "defaultCompare", "i", "item", "top", "bottom", "pos", "ref", "parent", "current", "halfLength", "left", "best", "right", "a", "b", "tinyqueue_1", "__importDefault", "geometry_1", "addRoute", "routeId", "route", "queue", "currentPoint", "nextPoint", "i", "e1", "SweepEvent", "e2", "checkWhichEventIsLeft", "exports", "edgeId", "point", "segmentIndex", "Segment", "event", "runSweep", "eventQueue", "intersectionPoints", "outQueue", "checkWhichSegmentHasRightEndpointFirst", "segment", "otherSegment", "intersection", "intersectionOfSegments", "getSegmentIndex", "seg1", "seg2", "seg1Line", "seg2Line", "inversify_1", "tinyqueue_1", "__importDefault", "sweepline_1", "isIntersectingRoutedPoint", "routedPoint", "exports", "BY_X_THEN_Y", "a", "b", "BY_DESCENDING_X_THEN_Y", "BY_X_THEN_DESCENDING_Y", "BY_DESCENDING_X_THEN_DESCENDING_Y", "IntersectionFinder", "routing", "intersections", "eventQueue", "route", "routeId", "point", "intersection", "routable1", "routable2", "segmentIndex", "segment", "intersectingRoutedPoint", "__decorate", "inversify_1", "geometry_1", "actions_1", "animation_1", "command_1", "smodel_1", "smodel_utils_1", "types_1", "mouse_tool_1", "vnode_utils_1", "sgraph_1", "commit_model_1", "model_1", "create_on_drag_1", "edit_routing_1", "reconnect_1", "model_2", "routing_1", "model_3", "model_4", "model_5", "model_6", "MoveAction", "create", "moves", "options", "_a", "_b", "exports", "MoveCommand", "MoveCommand_1", "action", "context", "index", "edge2handleMoves", "attachedEdgeShifts", "move", "element", "edge", "resolvedMove", "movesByEdge", "existingDelta", "newDelta", "delta", "MoveAnimation", "MorphEdgesAnimation", "handle", "fromPosition", "router", "edge2move", "res", "before", "after", "rp", "updateHandles", "memento", "other", "otherMove", "otherElementId", "existingMove", "otherMemento", "existingMemento", "edgeMemento", "__decorate", "__param", "model", "elementMoves", "reverse", "t", "elementMove", "originalMementi", "start", "end", "startRoute", "endRoute", "maxRoutingPoints", "source", "target", "morph", "e", "newRoutingPoints", "i", "closestSnapshot", "newSnapshot", "route", "targetSize", "diff", "result", "deltaDiff", "deltaSmaller", "nextInsertion", "pos", "insertions", "j", "p", "MoveMouseListener", "event", "moveable", "isRoutingHandle", "moveAction", "root", "selectedElements", "position", "isFinished", "viewport", "zoom", "startPosition", "elementId", "toPosition", "point", "isSnap", "parent", "a", "edgeInProgress", "handlePos", "handlePosAbs", "newEnd", "deleteIds", "c", "vnode", "LocationPostprocessor", "translate", "ali", "inversify_1", "model_1", "CenterGridSnapper", "position", "element", "__decorate", "exports", "exports", "isOpenable", "element", "actions_1", "mouse_tool_1", "smodel_utils_1", "model_1", "OpenMouseListener", "target", "event", "openableTarget", "exports", "geometry_1", "object_1", "smodel_utils_1", "model_1", "isProjectable", "arg", "exports", "getProjections", "parent", "result", "child", "projectedBounds", "getProjectedBounds", "projection", "childProj", "model", "bounds", "MAX_COORD", "getModelBounds", "minX", "minY", "maxX", "maxY", "element", "b", "jsx_1", "inversify_1", "snabbdom_1", "vnode_utils_1", "model_1", "ProjectedViewportView", "model", "context", "args", "rootNode", "transform", "ns", "modelBounds", "projections", "_a", "orientation", "params", "p", "canvasSize", "viewportPos", "viewportSize", "style", "projection", "projPos", "projSize", "result", "cl", "__decorate", "exports", "anchor_1", "geometry_1", "inversify_1", "polyline_edge_router_1", "geometry_2", "EllipseAnchor", "connectable", "refPoint", "offset", "bounds", "c", "dx", "dy", "distance", "normX", "normY", "__decorate", "exports", "RectangleAnchor", "finder", "NearestPointFinder", "xTop", "xBottom", "yLeft", "yRight", "yIntersection", "centerPoint", "point", "t", "xIntersection", "x", "y", "dist", "DiamondAnchor", "referenceLine", "closestDiamondSide", "anchorPoint", "inversify_1", "geometry_1", "model_1", "routing_1", "abstract_edge_router_1", "mouse_tool_1", "command_1", "types_1", "BezierEdgeRouter", "BezierEdgeRouter_1", "edge", "rpCount", "source", "target", "result", "h1", "h2", "i", "p", "p0", "pn", "sourceAnchor", "targetAnchor", "relH1", "relH2", "route", "handle", "ctrlPoint", "handleIndex", "rp", "moves", "move", "orgPosition", "relativePos", "newControlPos", "ctrlPointIndex", "moveToPos", "index", "anchor", "oldPos", "newPos", "relativePoint", "routingPoints", "bezierJunctionPos", "start", "end", "c", "before", "after", "pointIndex", "jct", "__decorate", "exports", "BezierMouseListener", "event", "AddRemoveBezierSegmentAction", "create", "actionTask", "targetId", "AddRemoveBezierSegmentCommand", "action", "edgeRouterRegistry", "context", "raw", "router", "child", "__param", "anchor_1", "inversify_1", "polyline_anchors_1", "bezier_edge_router_1", "BezierEllipseAnchor", "__decorate", "exports", "BezierRectangleAnchor", "BezierDiamondAnchor", "geometry_1", "smodel_utils_1", "abstract_edge_router_1", "model_1", "ManhattanEdgeRouter", "edge", "routedCorners", "sourceRefPoint", "sourceAnchor", "targetRefPoint", "targetAnchor", "routedPoints", "corner", "sourceAnchors", "targetAnchors", "routingPointsCopy", "routingPoint", "index", "options", "i", "route", "handle", "fraction", "start", "end", "kind", "moves", "routingPoints", "minimalPointDistance", "move", "correctedX", "correctedY", "x", "y", "updateHandles", "addRoutingPoints", "pointIndex", "toBeRemoved", "child", "currentAnchors", "otherAnchors", "refPoint", "shiftIndex", "isHorizontal", "nearestSide", "newPoint", "isVertical", "selfEdge", "bestAnchors", "sourceSide", "targetSide", "corners", "startPoint", "endPoint", "sourcePoint", "targetPoint", "exports", "geometry_1", "geometry_2", "anchor_1", "manhattan_edge_router_1", "inversify_1", "ManhattanRectangularAnchor", "ManhattanRectangularAnchor_1", "connectable", "refPoint", "offset", "b", "bounds", "__decorate", "exports", "ManhattanDiamondAnchor", "ManhattanDiamondAnchor_1", "c", "outline", "refLine", "ManhattanEllipticAnchor", "ManhattanEllipticAnchor_1", "refRelative", "x", "y", "dy", "dx", "inversify_1", "model_1", "RoutableView", "model", "route", "context", "ab", "canvasBounds", "__decorate", "exports", "inversify_1", "types_1", "command_1", "ModelRequestCommand", "context", "result", "__decorate", "exports", "inversify_1", "actions_1", "command_1", "request_command_1", "smodel_1", "smodel_utils_1", "types_1", "key_tool_1", "mouse_tool_1", "vnode_utils_1", "browser_1", "iterable_1", "keyboard_1", "button_handler_1", "model_1", "edit_routing_1", "model_2", "model_3", "model_4", "SelectAction", "selectedElementsIDs", "deselectedElementsIDs", "exports", "SelectAllAction", "select", "GetSelectionAction", "create", "SelectionResult", "requestId", "SelectCommand", "action", "context", "model", "id", "element", "__decorate", "__param", "SelectAllCommand", "newState", "child", "index", "SelectMouseListener", "target", "event", "buttonHandled", "selectableTarget", "deselectedElements", "buttonHandler", "result", "e", "routableDeselect", "vnode", "GetSelectionCommand", "selection", "SelectKeyboardListener", "keyboard_1", "key_tool_1", "browser_1", "UndoAction", "create", "exports", "RedoAction", "UndoRedoKeyListener", "element", "event", "smodel_1", "sprotty_protocol_1", "forEachMatch", "matchResult", "callback", "id", "exports", "ModelMatcher", "left", "right", "result", "element", "parentId", "match", "child", "applyMatches", "root", "matches", "index", "newElementInserted", "parent", "i", "animation_1", "ResizeAnimation", "model", "elementResizes", "context", "reverse", "t", "elementResize", "element", "newDimension", "exports", "inversify_1", "actions_1", "geometry_1", "animation_1", "command_1", "fade_1", "smodel_1", "move_1", "model_1", "model_2", "model_3", "viewport_root_1", "model_4", "model_matching_1", "resize_1", "types_1", "model_5", "routing_1", "model_6", "smodel_utils_1", "UpdateModelAction", "input", "animate", "cause", "exports", "UpdateModelCommand", "action", "context", "newRoot", "oldRoot", "matchResult", "animationOrRoot", "root", "matches", "index", "match", "element", "parent", "leftRoot", "rightRoot", "result", "converted", "id", "animationData", "right", "left", "leftCopy", "animations", "leftPos", "rightPos", "edge", "data", "movesMap", "move", "resizesMap", "resize", "__decorate", "__param", "inversify_1", "actions_1", "geometry_1", "command_1", "animation_1", "model_1", "types_1", "request_command_1", "SetViewportAction", "elementId", "newViewport", "animate", "exports", "GetViewportAction", "create", "ViewportResult", "viewport", "canvasBounds", "requestId", "SetViewportCommand", "SetViewportCommand_1", "action", "context", "model", "element", "ViewportAnimation", "command", "__decorate", "__param", "GetViewportCommand", "elem", "oldViewport", "t", "actions_1", "geometry_1", "keyboard_1", "smodel_1", "command_1", "key_tool_1", "model_1", "model_2", "viewport_1", "model_3", "inversify_1", "types_1", "CenterAction", "elementIds", "animate", "retainZoom", "exports", "FitToScreenAction", "padding", "maxZoom", "BoundsAwareViewportCommand", "model", "allBounds", "id", "element", "bounds", "b0", "b1", "viewport", "context", "vp1", "vp2", "__decorate", "CenterCommand", "action", "zoom", "c", "__param", "FitToScreenCommand", "delta", "CenterKeyboardListener", "event", "actions_1", "smodel_1", "mouse_tool_1", "smodel_utils_1", "model_1", "model_2", "model_3", "model_4", "browser_1", "isScrollable", "element", "exports", "ScrollMouseListener", "target", "event", "viewport", "action", "resolve", "scrollbar", "targetElement", "elementId", "lastScrollPosition", "dx", "dy", "newViewport", "model", "animate", "modelBounds", "scrollbarRect", "newScroll", "viewportSize", "position", "matching", "child", "inversify_1", "types_1", "smodel_1", "command_1", "model_1", "BringToFrontAction", "create", "elementIDs", "exports", "BringToFrontCommand", "action", "context", "model", "id", "element", "edge", "child", "i", "selection", "childrenLength", "__decorate", "__param", "inversify_1", "model_utils_1", "smodel_factory_1", "smodel_1", "sgraph_1", "model_1", "SGraphFactory", "schema", "parent", "child", "regElement", "root", "__decorate", "exports", "inversify_1", "types_1", "sgraph_factory_1", "graphModule", "bind", "unbind", "isBound", "rebind", "exports", "inversify_1", "types_1", "bounds_manipulation_1", "hidden_bounds_updater_1", "layout_1", "command_registration_1", "hbox_layout_1", "vbox_layout_1", "stack_layout_1", "boundsModule", "bind", "_unbind", "isBound", "exports", "inversify_1", "button_handler_1", "buttonModule", "bind", "exports", "inversify_1", "types_1", "action_providers_1", "command_palette_1", "commandPaletteModule", "bind", "exports", "inversify_1", "menu_providers_1", "mouse_listener_1", "types_1", "contextMenuModule", "bind", "ctx", "resolve", "reject", "exports", "view_1", "inversify_1", "model_1", "views_1", "types_1", "decoration_placer_1", "decorationModule", "bind", "_unbind", "isBound", "exports", "inversify_1", "types_1", "intersection_finder_1", "edgeIntersectionModule", "bind", "exports", "inversify_1", "button_handler_1", "expand_1", "expandModule", "bind", "_unbind", "isBound", "exports", "inversify_1", "types_1", "export_1", "svg_exporter_1", "command_registration_1", "exportSvgModule", "bind", "_unbind", "isBound", "exports", "inversify_1", "types_1", "fade_1", "fadeModule", "bind", "exports", "inversify_1", "types_1", "PopupPositionUpdater", "vnode", "element", "popupDiv", "boundingClientRect", "__decorate", "exports", "inversify_1", "types_1", "hover_1", "popup_position_updater_1", "command_registration_1", "action_handler_1", "center_fit_1", "viewport_1", "move_1", "hoverModule", "bind", "_unbind", "isBound", "context", "exports", "inversify_1", "types_1", "move_1", "command_registration_1", "moveModule", "bind", "_unbind", "isBound", "exports", "inversify_1", "types_1", "open_1", "openModule", "bind", "exports", "inversify_1", "types_1", "manhattan_edge_router_1", "polyline_edge_router_1", "manhattan_anchors_1", "polyline_anchors_1", "anchor_1", "routing_1", "bezier_edge_router_1", "bezier_anchors_1", "command_registration_1", "routingModule", "bind", "_unbind", "isBound", "exports", "inversify_1", "types_1", "select_1", "command_registration_1", "selectModule", "bind", "_unbind", "isBound", "exports", "inversify_1", "types_1", "undo_redo_1", "undoRedoModule", "bind", "exports", "inversify_1", "command_registration_1", "update_model_1", "updateModule", "bind", "_unbind", "isBound", "exports", "inversify_1", "types_1", "center_fit_1", "viewport_1", "scroll_1", "zoom_1", "command_registration_1", "viewportModule", "bind", "_unbind", "isBound", "exports", "inversify_1", "command_registration_1", "zorder_1", "zorderModule", "bind", "_unbind", "isBound", "exports", "inversify_1", "geometry_1", "model_utils_1", "vnode_utils_1", "views_1", "intersection_finder_1", "model_1", "model_2", "routing_1", "views_2", "jsx_1", "geometry_2", "SGraphView", "model", "context", "edgeRouting", "transform", "__decorate", "exports", "PolylineEdgeView", "edge", "args", "route", "segments", "firstPoint", "path", "i", "p", "message", "JumpingPolylineEdgeView", "intersectingPoint", "segment", "intersections", "intersection", "otherLineSegment", "currentLineSegment", "intersectionPoint", "lineSegment", "index", "currentEdge", "otherEdgeId", "otherEdge", "anchorBefore", "anchorAfter", "rotation", "offsetBefore", "offsetAfter", "PolylineEdgeViewWithGapsOnIntersections", "BezierCurveEdgeView", "pointsLeft", "s", "h1", "h2", "t", "c", "SRoutingHandleView", "handle", "router", "theRoute", "position", "node", "SLabelView", "label", "vnode", "subType", "SCompartmentView", "compartment", "translate", "SBezierCreateHandleView", "translation", "textOffsetX", "textOffsetY", "text", "SBezierControlHandleView", "pathEndPos", "elem", "coords", "inversify_1", "command_registration_1", "types_1", "commit_model_1", "model_source_1", "modelSourceModule", "bind", "_unbind", "isBound", "context", "resolve", "exports", "di_config_1", "__importDefault", "di_config_2", "di_config_3", "di_config_4", "di_config_5", "di_config_6", "di_config_7", "di_config_8", "di_config_9", "di_config_10", "di_config_11", "di_config_12", "di_config_13", "di_config_14", "di_config_15", "di_config_16", "di_config_17", "di_config_18", "di_config_19", "di_config_20", "di_config_21", "loadDefaultModules", "container", "options", "modules", "mod", "index", "exports", "snabbdom_1", "buildVNodeData", "attrs", "data", "addData", "memo", "name", "val", "unescapeEntities", "_attrs", "style", "parseStyle", "classes", "parseClass", "addStyle", "styleProp", "res", "transformName", "addClass", "className", "$1", "$2", "entityRegex", "el", "text", "entity", "recurse", "doc", "func", "node", "parent", "stack", "setChild", "n", "child", "_node", "sibling", "vdom", "vnodeMap", "delimited", "toVNode", "current", "children", "attributes", "i", "attr", "vn", "lastData", "stripVNode", "vnodes", "virtualizeString", "html", "parser", "_a", "error", "_b", "exports", "geometry_1", "smodel_1", "model_1", "model_2", "model_3", "sgraph_1", "anchor_1", "CircularNode", "exports", "RectangularNode", "DiamondNode", "CircularPort", "RectangularPort", "HtmlRoot", "PreRenderedElement", "ShapedPreRenderedElement", "newBounds", "ForeignObjectElement", "jsx_1", "inversify_1", "virtualize_1", "__importDefault", "vnode_utils_1", "views_1", "model_1", "PreRenderedView", "model", "context", "node", "__decorate", "exports", "ForeignObjectView", "foreignObjectContents", "jsx_1", "inversify_1", "vnode_utils_1", "HtmlRootView", "model", "context", "root", "c", "__decorate", "exports", "b", "c", "g", "d", "e", "f", "a", "h", "i", "j", "k", "l", "m", "module", "file_saver_1", "inversify_1", "sprotty_protocol_1", "actions_1", "object_1", "set_model_1", "types_1", "bounds_manipulation_1", "svg_exporter_1", "update_model_1", "model_source_1", "isActionMessage", "object", "exports", "ServerStatusAction", "receivedFromServerProperty", "DiagramServerProxy", "registry", "action", "message", "data", "newRoot", "newOptions", "newAction", "root", "blob", "previousRoot", "__decorate", "file_saver_1", "inversify_1", "actions_1", "model_utils_1", "types_1", "smodel_factory_1", "viewport_1", "svg_exporter_1", "model_matching_1", "select_1", "model_source_1", "LocalModelSource", "root", "registry", "newRoot", "previousRoot", "res", "result", "element", "selected", "child", "update", "cause", "computedBounds", "index", "layoutResult", "error", "lastSubmittedModelType", "request", "input", "matches", "elements", "e", "anye", "action", "popupRoot", "blob", "__decorate", "exports", "inversify_1", "logging_1", "types_1", "LoggingAction", "create", "options", "exports", "ForwardingLogger", "thisArg", "message", "params", "caller", "logLevel", "date", "action", "p", "modelSource", "error", "__decorate", "inversify_1", "diagram_server_1", "WebSocketDiagramServerProxy", "webSocket", "event", "message", "__decorate", "exports", "rgb", "red", "green", "blue", "exports", "toSVG", "c", "ColorMap", "stops", "t", "i", "__exportStar", "exports", "di_config_1", "__importDefault", "di_config_2", "di_config_3", "di_config_4", "di_config_5", "di_config_6", "di_config_7", "di_config_8", "di_config_9", "di_config_10", "di_config_11", "di_config_12", "di_config_13", "di_config_14", "di_config_15", "di_config_16", "di_config_17", "di_config_18", "di_config_19", "di_config_20", "di_config_21", "di_config_22", "Reflect", "factory", "root", "exporter", "makeExporter", "target", "previous", "key", "value", "hasOwn", "supportsSymbol", "toPrimitiveSymbol", "iteratorSymbol", "supportsCreate", "supportsProto", "downLevel", "HashMap", "MakeDictionary", "map", "functionPrototype", "usePolyfill", "_Map", "CreateMapPolyfill", "_Set", "CreateSetPolyfill", "_WeakMap", "CreateWeakMapPolyfill", "Metadata", "decorate", "decorators", "propertyKey", "attributes", "IsUndefined", "IsArray", "IsConstructor", "DecorateConstructor", "IsObject", "IsNull", "ToPropertyKey", "DecorateProperty", "metadata", "metadataKey", "metadataValue", "decorator", "IsPropertyKey", "OrdinaryDefineOwnMetadata", "defineMetadata", "hasMetadata", "OrdinaryHasMetadata", "hasOwnMetadata", "OrdinaryHasOwnMetadata", "getMetadata", "OrdinaryGetMetadata", "getOwnMetadata", "OrdinaryGetOwnMetadata", "getMetadataKeys", "OrdinaryMetadataKeys", "getOwnMetadataKeys", "OrdinaryOwnMetadataKeys", "deleteMetadata", "metadataMap", "GetOrCreateMetadataMap", "targetMetadata", "i", "decorated", "descriptor", "O", "P", "Create", "MetadataKey", "parent", "OrdinaryGetPrototypeOf", "ToBoolean", "MetadataValue", "ownKeys", "parentKeys", "set", "keys", "_i", "ownKeys_1", "hasKey", "_a", "parentKeys_1", "keysObj", "iterator", "GetIterator", "k", "next", "IteratorStep", "nextValue", "IteratorValue", "e", "IteratorClose", "Type", "x", "IsSymbol", "ToPrimitive", "input", "PreferredType", "hint", "exoticToPrim", "GetMethod", "result", "OrdinaryToPrimitive", "toString_1", "IsCallable", "valueOf", "toString_2", "argument", "ToString", "V", "func", "obj", "method", "iterResult", "f", "proto", "prototype", "prototypeProto", "constructor", "cacheSentinel", "arraySentinel", "MapIterator", "values", "selector", "index", "error", "Map", "size", "getKey", "getValue", "getEntry", "insert", "_", "Set", "UUID_SIZE", "rootKey", "CreateUniqueKey", "WeakMap", "table", "GetOrCreateWeakMapTable", "CreateUUID", "create", "FillRandomBytes", "buffer", "GenRandomBytes", "data", "offset", "byte", "import_sprotty", "import_inversify", "import_sprotty", "import_jsx", "import_inversify", "import_sprotty", "EdgeArrow", "node", "context", "args", "__decorateClass", "InputView", "ComponentView", "OperandView", "Icon1", "parentSize", "Icon2", "Icon3", "Icon4", "di_config_default", "containerId", "ASCETExamleModule", "bind", "unbind", "isBound", "rebind", "context", "InputView", "ComponentView", "OperandView", "EdgeArrow", "Icon1", "Icon2", "Icon3", "Icon4", "container", "inputSize", "operandSize", "edgeBasics", "generateArrow", "arrowIdCounter", "model", "runExample", "di_config_default", "model"]
}
